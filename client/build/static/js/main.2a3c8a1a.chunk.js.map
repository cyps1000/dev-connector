{"version":3,"sources":["redux/types/alert.ts","redux/types/auth.ts","redux/types/profile.ts","redux/types/post.ts","redux/action-creators/alert.ts","utils/setAuthToken.ts","redux/action-creators/auth.ts","redux/action-creators/profile.ts","redux/action-creators/post.ts","redux/reducers/alert.ts","redux/reducers/auth.ts","redux/reducers/profile.ts","redux/reducers/post.ts","redux/reducers/index.ts","redux/store.ts","hooks/useActions.ts","hooks/useTypedSelector.ts","components/Routes/PrivateRoute.tsx","components/Navbar/Navbar.styles.ts","components/Navbar/Navbar.tsx","components/Alert/Alert.styles.ts","components/Alert/Alert.tsx","components/Register/Register.styles.ts","components/Register/Register.tsx","components/Login/Login.styles.ts","components/Login/Login.tsx","components/Spinner/Spinner.styles.ts","components/Spinner/Spinner.tsx","components/ProfileItem/ProfileItem.styles.ts","components/ProfileItem/ProfileItem.tsx","components/Profiles/Profiles.styles.ts","components/Profiles/Profiles.tsx","components/ProfileTop/ProfileTop.styles.ts","components/ProfileTop/ProfileTop.tsx","components/ProfileAbout/ProfileAbout.styles.ts","components/ProfileAbout/ProfileAbout.tsx","components/ProfileExperience/ProfileExperience.styles.ts","components/ProfileExperience/ProfileExperience.tsx","components/ProfileEducation/ProfileEducation.styles.ts","components/ProfileEducation/ProfileEducation.tsx","components/ProfileGithub/ProfileGithub.styles.ts","components/ProfileGithub/ProfileGithub.tsx","components/Profile/Profile.styles.ts","components/Profile/Profile.tsx","components/DashboardActions/DashboardActions.styles.ts","components/DashboardActions/DashboardActions.tsx","components/Experience/Experience.styles.ts","components/Experience/Experience.tsx","components/Education/Education.styles.ts","components/Education/Education.tsx","components/Dashboard/Dashboard.styles.ts","components/Dashboard/Dashboard.tsx","components/Landing/showcase.png","components/Landing/Landing.styles.ts","components/Landing/Landing.tsx","components/PostForm/PostForm.styles.ts","components/PostForm/PostForm.tsx","components/PostItem/PostItem.styles.ts","components/PostItem/PostItem.tsx","components/Posts/Posts.styles.ts","components/Posts/Posts.tsx","components/CommentForm/CommentForm.styles.ts","components/CommentForm/CommentForm.tsx","components/CommentItem/CommentItem.styles.ts","components/CommentItem/CommentItem.tsx","components/Post/Post.styles.ts","components/Post/Post.tsx","components/CreateProfile/CreateProfile.styles.ts","components/CreateProfile/CreateProfile.tsx","components/EditProfile/EditProfile.styles.ts","components/EditProfile/EditProfile.tsx","components/AddExperience/AddExperience.styles.ts","components/AddExperience/AddExperience.tsx","components/AddEducation/AddEducation.styles.ts","components/AddEducation/AddEducation.tsx","components/Routes/Routes.tsx","components/Providers/Providers.tsx","App.tsx","index.tsx"],"names":["AlertActionTypes","RegisterUserActionTypes","LoginUserActionTypes","LoadUserActionTypes","LogoutUserActionTypes","DeleteUserActionTypes","ProfileActionTypes","PostActionTypes","dispatchAlert","msg","severity","timeout","dispatch","type","ActionTypes","DISPATCH_ALERT","payload","open","setTimeout","REMOVE_ALERT","setAuthToken","token","axios","defaults","headers","common","localStorage","setItem","removeItem","loadUser","a","get","data","USER_LOADED","response","errors","AUTH_ERROR","register","name","email","password","config","body","JSON","stringify","post","REGISTER_SUCCESS","map","err","REGISTER_FAIL","login","LOGIN_SUCCESS","LOGIN_FAIL","logout","CLEAR_PROFILE","LOGOUT","deleteAccount","window","confirm","delete","DELETE_ACCOUNT","PROFILE_ERROR","getCurrentProfile","res","GET_PROFILE","getProfiles","RESET_PROFILE_LOADING","GET_PROFILES","getProfileById","userId","createProfile","formData","history","edit","push","deleteProfile","DELETE_PROFILE","getGithubRepos","username","GET_REPOS","addExperience","UPDATE_PROFILE","addEducation","deleteExperience","id","deleteEducation","getPosts","GET_POSTS","POST_ERROR","getPostById","CLEAR_POST","clearPost","GET_POST","addPost","ADD_POST","deletePost","DELETE_POST","addComment","postId","ADD_COMMENT","deleteComment","commentId","REMOVE_COMMENT","addLike","put","UPDATE_LIKES","likes","removeLike","initialState","alert","reducer","produce","state","action","getItem","isAuthenticated","loading","user","avatar","date","profile","profiles","repos","posts","filter","foundPost","find","comments","comm","reducers","combineReducers","alertsReducer","auth","authReducer","profileReducer","postReducer","store","createStore","applyMiddleware","thunk","useActions","useDispatch","useMemo","bindActionCreators","actionCreators","useTypedSelector","useSelector","PrivateRoute","props","rest","to","useStyles","makeStyles","theme","root","flexGrow","navbar","backgroundColor","marginRight","menuButton","marginLeft","menu","display","alignItems","flex","justifyContent","margin","fontSize","textTransform","paper","background","color","palette","white","list","width","justifyItems","Navbar","classes","useTheme","isMobile","useMediaQuery","breakpoints","down","isTablet","useState","setOpen","routeTo","url","goToHome","goToLogin","goToRegister","goToDevelopers","goToPosts","goToDashboard","useHistory","guestLinks","Button","onClick","icon","faUsers","faUserPlus","faSignInAlt","guestLinksMobile","List","ListItem","button","ListItemText","primary","Divider","authLinks","faNewspaper","faThLarge","faPowerOff","authLinksMobile","Box","className","AppBar","position","Toolbar","IconButton","edge","aria-label","faCode","Typography","variant","Drawer","data-testid","anchor","onClose","fontWeight","borderRadius","padding","minHeight","boxShadow","top","success","border","error","Alert","Snackbar","anchorOriginTopCenter","anchorOrigin","vertical","horizontal","message","ContentProps","clsx","getContentProps","paddingTop","spacing","flexDirection","secondary","main","form","marginTop","submit","linkLogin","textDecoration","Register","passwordConfirm","setFormData","onChange","e","target","value","Container","component","maxWidth","CssBaseline","Avatar","onSubmit","preventDefault","Grid","container","item","xs","TextField","autoComplete","label","fullWidth","autoFocus","justify","linkRegister","Login","Spinner","CircularProgress","paddingBottom","grid","gridSkills","height","profileName","skills","paddingRight","skillsIcon","viewProfileBtn","ProfileItem","Paper","elevation","lg","src","gutterBottom","status","company","location","slice","skill","index","toUpperCase","paragraph","noProfileFound","paddingLeft","Profiles","useEffect","faConnectdevelop","length","gridSocials","socials","ProfileTop","website","Link","href","social","twitter","instagram","facebook","linkedin","youtube","marginBottom","bio","textAlign","divider","borderBottom","ProfileAbout","trim","split","ProfileExperience","format","parseISO","from","title","description","ProfileEducation","school","degree","fieldofstudy","gridGithub","ProfileGithub","repo","html_url","faStar","stargazers_count","faEye","watchers_count","faCodeBranch","forks_count","gridContainer","experience","editProfilesBtn","backProfilesBtn","noData","Profile","useParams","loadingAuth","exp","education","edu","githubusername","DashboardActions","faUserCircle","faBlackTie","faGraduationCap","table","minWidth","deleteButton","tableData","Experience","experiences","TableRow","TableCell","align","_id","TableContainer","Table","TableHead","TableBody","Education","educations","userIcon","deleteBtns","deleteBtn","createProfileBtn","Dashboard","faUser","backgroundImage","image","backgroundRepeat","backgroundSize","backgroundPosition","darkOverLay","left","buttons","Landing","gridBtn","postButton","PostForm","text","setText","multiline","rowsMax","disabled","faPaperPlane","badgeIcon","right","actionsButtons","likePost","likedPost","discussion","commentIcon","likedBy","PostItem","showActions","like","faThumbsUp","Badge","badgeContent","max","faCommentDots","faTrash","Posts","CommentForm","gridUser","deleteComm","CommentItem","comment","backButton","Post","toggleSocialsBtn","buttonsBox","goBackBtn","twitterIcon","facebookIcon","linkedinIcon","youtubeIcon","instagramIcon","socialInput","CreateProfile","displaySocialInputs","toggleSocialInputs","select","helperText","option","MenuItem","rows","faTwitter","size","faFacebook","faLinkedin","faYoutube","faInstagram","EditProfile","join","expIcon","addExpBtn","AddExperience","current","toDateDisabled","toggleDisabled","InputLabelProps","shrink","FormControlLabel","control","Checkbox","checked","eduIcon","addEduBtn","AddEducation","Routes","path","exact","Providers","children","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"srCAGYA,ECAAC,EAQAC,EAQAC,EAQAC,EAOAC,EC/BAC,ECAAC,E,4FHAAP,K,gCAAAA,E,6BAAAA,M,cCAAC,K,oCAAAA,E,+BAAAA,M,cAQAC,K,8BAAAA,E,yBAAAA,M,cAQAC,K,0BAAAA,E,yBAAAA,M,cAQAC,K,iBAAAA,M,cAOAC,K,iCAAAA,M,cC/BAC,K,0BAAAA,E,8BAAAA,E,gCAAAA,E,8BAAAA,E,gCAAAA,E,4BAAAA,E,sBAAAA,E,+CAAAA,M,cCAAC,K,sBAAAA,E,oBAAAA,E,oBAAAA,E,wBAAAA,E,0BAAAA,E,wBAAAA,E,4BAAAA,E,0BAAAA,E,iCAAAA,M,KCCL,IAAMC,EACX,SAACC,EAAeC,GAAhB,IAAkCC,EAAlC,uDAA4C,IAA5C,OACA,SAACC,GACCA,EAAS,CACPC,KAAMC,EAAYC,eAClBC,QAAS,CAAEP,MAAKC,YAChBO,MAAM,IAGRC,YACE,kBAAMN,EAAS,CAAEC,KAAMC,EAAYK,aAAcF,MAAM,MACvDN,K,yCCbOS,EAAe,SAACC,GACvBA,GACFC,IAAMC,SAASC,QAAQC,OAAO,gBAAkBJ,EAChDK,aAAaC,QAAQ,QAASN,YAEvBC,IAAMC,SAASC,QAAQC,OAAO,gBACrCC,aAAaE,WAAW,WCoBfC,EAAW,yDAAM,WAAOjB,GAAP,mBAAAkB,EAAA,6DACxBJ,aAAaL,OACfD,EAAaM,aAAaL,OAFA,kBAMHC,IAAMS,IAAI,aANP,gBAMlBC,EANkB,EAMlBA,KAERpB,EAAS,CACPC,KAAMV,EAAoB8B,YAC1BjB,QAASgB,IAVe,gDAatB,KAAIE,WACAC,EAAS,KAAID,SAASF,KAAKG,OAEjCvB,EAAS,CACPC,KAAMV,EAAoBiC,WAC1BpB,QAASmB,KAlBa,yDAAN,uDA2BXE,EACX,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,8CACA,WAAO5B,GAAP,uBAAAkB,EAAA,6DACQW,EAAS,CACbjB,QAAS,CACP,eAAgB,qBAIdkB,EAAOC,KAAKC,UAAU,CAAEN,OAAMC,QAAOC,aAP7C,kBAU2BlB,IAAMuB,KAAK,aAAcH,EAAMD,GAV1D,gBAUYT,EAVZ,EAUYA,KAERpB,EAAS,CACPC,KAAMZ,EAAwB6C,iBAC9B9B,QAASgB,IAGXH,IAAWjB,GAjBf,kDAmBUuB,EAAS,KAAID,SAASF,KAAKG,OAEjC3B,EACE2B,EAAOY,KAAI,SAACC,GAAD,OAAuBA,EAAIvC,OACtC,QACA,IAHFD,CAIEI,GAEFA,EAAS,CACPC,KAAMZ,EAAwBgD,cAC9BjC,QAASmB,IA7Bf,0DADA,uDAsCWe,EACX,SAACX,EAAeC,GAAhB,8CACA,WAAO5B,GAAP,uBAAAkB,EAAA,6DACQW,EAAS,CACbjB,QAAS,CACP,eAAgB,qBAIdkB,EAAOC,KAAKC,UAAU,CAAEL,QAAOC,aAPvC,kBAU2BlB,IAAMuB,KAAK,YAAaH,EAAMD,GAVzD,gBAUYT,EAVZ,EAUYA,KAERpB,EAAS,CACPC,KAAMX,EAAqBiD,cAC3BnC,QAASgB,IAGXH,IAAWjB,GACXJ,EAAc,CAAC,2BAA4B,UAAW,IAAtDA,CAA4DI,GAlBhE,kDAoBQ,KAAIsB,WACAC,EAAS,KAAID,SAASF,KAAKG,OAEjC3B,EACE2B,EAAOY,KAAI,SAACC,GAAD,OAAuBA,EAAIvC,OACtC,QACA,IAHFD,CAIEI,GAEFA,EAAS,CACPC,KAAMX,EAAqBkD,WAC3BpC,QAASmB,KA/BjB,0DADA,uDAyCWkB,EAAS,kBAAM,SAACzC,GAC3BA,EAAS,CAAEC,KAAMP,EAAmBgD,gBACpC1C,EAAS,CAAEC,KAAMT,EAAsBmD,SACvC/C,EAAc,CAAC,cAAe,UAA9BA,CAAyCI,KAM9B4C,EACX,yDAAM,WAAO5C,GAAP,eAAAkB,EAAA,0DACA2B,OAAOC,QAAQ,wCADf,0CAGMpC,IAAMqC,OAAN,aAHN,OAKA/C,EAAS,CAAEC,KAAMP,EAAmBgD,gBACpC1C,EAAS,CAAEC,KAAMR,EAAsBuD,iBAEvCpD,EACE,CAAC,8CACD,UAFFA,CAGEI,GAXF,gDAaI,KAAIsB,WACAC,EAAS,KAAID,SAASF,KAAKG,OAEjCvB,EAAS,CACPC,KAAMP,EAAmBuD,cACzB7C,QAASmB,KAlBb,yDAAN,uDC5FW2B,EACX,yDAAM,WAAOlD,GAAP,iBAAAkB,EAAA,+EAEgBR,IAAMS,IAAI,mBAF1B,OAEIgC,EAFJ,OAIFnD,EAAS,CACPC,KAAMP,EAAmB0D,YACzBhD,QAAS+C,EAAI/B,OANb,gDASE,KAAIE,WACAC,EAAS,KAAID,SAASF,KAAKG,OAEjCvB,EAAS,CACPC,KAAMP,EAAmBuD,cACzB7C,QAASmB,KAdX,yDAAN,uDAuBW8B,EAAc,yDAAM,WAAOrD,GAAP,iBAAAkB,EAAA,6DAC/BlB,EAAS,CAAEC,KAAMP,EAAmBgD,gBACpC1C,EAAS,CAAEC,KAAMP,EAAmB4D,wBAFL,kBAKX5C,IAAMS,IAAI,gBALC,OAKvBgC,EALuB,OAO7BnD,EAAS,CACPC,KAAMP,EAAmB6D,aACzBnD,QAAS+C,EAAI/B,OATc,gDAYzB,KAAIE,WACAC,EAAS,KAAID,SAASF,KAAKG,OAEjCvB,EAAS,CACPC,KAAMP,EAAmBuD,cACzB7C,QAASmB,KAjBgB,yDAAN,uDA0BdiC,EACX,SAACC,GAAD,8CAAoB,WAAOzD,GAAP,iBAAAkB,EAAA,6DAClBlB,EAAS,CAAEC,KAAMP,EAAmBgD,gBADlB,kBAIEhC,IAAMS,IAAN,4BAA+BsC,IAJjC,OAIVN,EAJU,OAMhBnD,EAAS,CACPC,KAAMP,EAAmB0D,YACzBhD,QAAS+C,EAAI/B,OARC,gDAWZ,KAAIE,WACAC,EAAS,KAAID,SAASF,KAAKG,OAEjCvB,EAAS,CACPC,KAAMP,EAAmBuD,cACzB7C,QAASmB,KAhBG,yDAApB,uDAyBWmC,EACX,SAACC,EAAiCC,GAAlC,IAAgDC,EAAhD,sGACA,WAAO7D,GAAP,mBAAAkB,EAAA,sEAEUW,EAAS,CACbjB,QAAS,CACP,eAAgB,qBAJxB,SAQsBF,IAAMuB,KAAK,eAAgB0B,EAAU9B,GAR3D,OAQUsB,EARV,OAUInD,EAAS,CACPC,KAAMP,EAAmB0D,YACzBhD,QAAS+C,EAAI/B,OAGfxB,EACEiE,EAAO,CAAC,mBAAqB,CAAC,mBAC9B,UAFFjE,CAGEI,GAEG6D,GACHD,EAAQE,KAAK,cArBnB,mDAwBUvC,EAAS,KAAID,SAASF,KAAKG,SAG/B3B,EACE2B,EAAOY,KAAI,SAACC,GAAD,OAAuBA,EAAIvC,OACtC,QAFFD,CAGEI,GAGJA,EAAS,CACPC,KAAMP,EAAmBuD,cACzB7C,QAASmB,IAnCf,0DADA,uDA4CWwC,EACX,yDAAM,WAAO/D,GAAP,eAAAkB,EAAA,0DACA2B,OAAOC,QAAQ,wCADf,0CAGMpC,IAAMqC,OAAN,gBAHN,OAKA/C,EAAS,CACPC,KAAMP,EAAmBsE,iBAG3BpE,EAAc,CAAC,mBAAoB,UAAnCA,CAA8CI,GAT9C,gDAWI,KAAIsB,WACAC,EAAS,KAAID,SAASF,KAAKG,OAEjCvB,EAAS,CACPC,KAAMP,EAAmBuD,cACzB7C,QAASmB,KAhBb,yDAAN,uDA0BW0C,EACX,SAACC,GAAD,8CAAsB,WAAOlE,GAAP,iBAAAkB,EAAA,+EAEAR,IAAMS,IAAN,8BAAiC+C,IAFjC,OAEZf,EAFY,OAIlBnD,EAAS,CACPC,KAAMP,EAAmByE,UACzB/D,QAAS+C,EAAI/B,OANG,gDASd,KAAIE,WACAC,EAAS,KAAID,SAASF,KAAKG,OAEjCvB,EAAS,CACPC,KAAMP,EAAmBuD,cACzB7C,QAASmB,KAdK,yDAAtB,uDAuBW6C,EACX,SAACT,EAAiCC,GAAlC,8CACA,WAAO5D,GAAP,mBAAAkB,EAAA,sEAEUW,EAAS,CACbjB,QAAS,CACP,eAAgB,qBAJxB,SAQsBF,IAAMuB,KAAK,0BAA2B0B,EAAU9B,GARtE,OAQUsB,EARV,OAUInD,EAAS,CACPC,KAAMP,EAAmB2E,eACzBjE,QAAS+C,EAAI/B,OAGfxB,EAAc,CAAC,oBAAqB,UAApCA,CAA+CI,GAC/C4D,EAAQE,KAAK,cAhBjB,mDAkBUvC,EAAS,KAAID,SAASF,KAAKG,SAG/B3B,EACE2B,EAAOY,KAAI,SAACC,GAAD,OAAuBA,EAAIvC,OACtC,QAFFD,CAGEI,GAGJA,EAAS,CACPC,KAAMP,EAAmBuD,cACzB7C,QAASmB,IA7Bf,0DADA,uDAsCW+C,EACX,SAACX,EAAgCC,GAAjC,8CACA,WAAO5D,GAAP,mBAAAkB,EAAA,sEAEUW,EAAS,CACbjB,QAAS,CACP,eAAgB,qBAJxB,SAQsBF,IAAMuB,KAAK,yBAA0B0B,EAAU9B,GARrE,OAQUsB,EARV,OAUInD,EAAS,CACPC,KAAMP,EAAmB2E,eACzBjE,QAAS+C,EAAI/B,OAGfxB,EAAc,CAAC,mBAAoB,UAAnCA,CAA8CI,GAC9C4D,EAAQE,KAAK,cAhBjB,mDAkBUvC,EAAS,KAAID,SAASF,KAAKG,SAG/B3B,EACE2B,EAAOY,KAAI,SAACC,GAAD,OAAuBA,EAAIvC,OACtC,QAFFD,CAGEI,GAGJA,EAAS,CACPC,KAAMP,EAAmBuD,cACzB7C,QAASmB,IA7Bf,0DADA,uDAsCWgD,EACX,SAACC,GAAD,8CAAgB,WAAOxE,GAAP,iBAAAkB,EAAA,0DACV2B,OAAOC,QAAQ,wCADL,0CAGQpC,IAAMqC,OAAN,kCAAwCyB,IAHhD,OAGJrB,EAHI,OAKVnD,EAAS,CACPC,KAAMP,EAAmB2E,eACzBjE,QAAS+C,EAAI/B,OAGfxB,EAAc,CAAC,sBAAuB,UAAtCA,CAAiDI,GAVvC,gDAYN,KAAIsB,WACAC,EAAS,KAAID,SAASF,KAAKG,OAEjCvB,EAAS,CACPC,KAAMP,EAAmBuD,cACzB7C,QAASmB,KAjBH,yDAAhB,uDA2BWkD,EACX,SAACD,GAAD,8CAAgB,WAAOxE,GAAP,iBAAAkB,EAAA,0DACV2B,OAAOC,QAAQ,wCADL,0CAGQpC,IAAMqC,OAAN,iCAAuCyB,IAH/C,OAGJrB,EAHI,OAKVnD,EAAS,CACPC,KAAMP,EAAmB2E,eACzBjE,QAAS+C,EAAI/B,OAGfxB,EAAc,CAAC,qBAAsB,UAArCA,CAAgDI,GAVtC,gDAYN,KAAIsB,WACAC,EAAS,KAAID,SAASF,KAAKG,OAEjCvB,EAAS,CACPC,KAAMP,EAAmBuD,cACzB7C,QAASmB,KAjBH,yDAAhB,uDCrTWmD,EAAW,yDAAM,WAAO1E,GAAP,iBAAAkB,EAAA,+EAERR,IAAMS,IAAI,cAFF,OAEpBgC,EAFoB,OAI1BnD,EAAS,CACPC,KAAMN,EAAgBgF,UACtBvE,QAAS+C,EAAI/B,OANW,gDAStB,KAAIE,WACAC,EAAS,KAAID,SAASF,KAAKG,OAEjCvB,EAAS,CACPC,KAAMN,EAAgBiF,WACtBxE,QAASmB,KAda,yDAAN,uDAuBXsD,EACX,SAACL,GAAD,8CAAgB,WAAOxE,GAAP,iBAAAkB,EAAA,6DA/BA,uCAAM,WAAOlB,GAAP,SAAAkB,EAAA,sDACtBlB,EAAS,CAAEC,KAAMN,EAAgBmF,aADX,2CAAN,qDAgCdC,CAAY/E,GADE,kBAIMU,IAAMS,IAAN,qBAAwBqD,IAJ9B,OAINrB,EAJM,OAMZnD,EAAS,CACPC,KAAMN,EAAgBqF,SACtB5E,QAAS+C,EAAI/B,OARH,gDAWR,KAAIE,WACAC,EAAS,KAAID,SAASF,KAAKG,OAEjCvB,EAAS,CACPC,KAAMN,EAAgBiF,WACtBxE,QAASmB,KAhBD,yDAAhB,uDAyBW0D,EACX,SAACtB,GAAD,8CAA4B,WAAO3D,GAAP,mBAAAkB,EAAA,6DACpBW,EAAS,CACbjB,QAAS,CACP,eAAgB,qBAHM,kBAQNF,IAAMuB,KAAK,aAAc0B,EAAU9B,GAR7B,OAQlBsB,EARkB,OAUxBnD,EAAS,CACPC,KAAMN,EAAgBuF,SACtB9E,QAAS+C,EAAI/B,OAGfxB,EAAc,CAAC,gBAAiB,WAfR,gDAiBpB,KAAI0B,WACAC,EAAS,KAAID,SAASF,KAAKG,OAEjCvB,EAAS,CACPC,KAAMN,EAAgBiF,WACtBxE,QAASmB,KAtBW,yDAA5B,uDA+BW4D,EACX,SAACX,GAAD,8CAAgB,WAAOxE,GAAP,eAAAkB,EAAA,0DACV2B,OAAOC,QAAQ,wCADL,0CAGJpC,IAAMqC,OAAN,qBAA2ByB,IAHvB,OAKVxE,EAAS,CACPC,KAAMN,EAAgByF,YACtBhF,QAASoE,IAGX5E,EAAc,CAAC,gBAAiB,WAVtB,gDAYN,KAAI0B,WACAC,EAAS,KAAID,SAASF,KAAKG,OAEjCvB,EAAS,CACPC,KAAMN,EAAgBiF,WACtBxE,QAASmB,KAjBH,yDAAhB,uDA2BW8D,EACX,SAACC,EAAgB3B,GAAjB,8CACA,WAAO3D,GAAP,mBAAAkB,EAAA,6DACQW,EAAS,CACbjB,QAAS,CACP,eAAgB,qBAHtB,kBAQsBF,IAAMuB,KAAN,6BACMqD,GACtB3B,EACA9B,GAXN,OAQUsB,EARV,OAcInD,EAAS,CACPC,KAAMN,EAAgB4F,YACtBnF,QAAS+C,EAAI/B,OAGfxB,EAAc,CAAC,iBAAkB,WAnBrC,gDAqBQ,KAAI0B,WACAC,EAAS,KAAID,SAASF,KAAKG,OAEjC3B,EACE2B,EAAOY,KAAI,SAACC,GAAD,OAAuBA,EAAIvC,OACtC,QACA,IAHFD,CAIEI,GAEFA,EAAS,CACPC,KAAMN,EAAgBiF,WACtBxE,QAASmB,KAhCjB,yDADA,uDA0CWiE,EACX,SAACF,EAAgBG,GAAjB,8CACA,WAAOzF,GAAP,iBAAAkB,EAAA,+EAEsBR,IAAMqC,OAAN,qBACFuC,EADE,qBACiBG,IAHvC,OAEUtC,EAFV,OAMInD,EAAS,CACPC,KAAMN,EAAgB+F,eACtBtF,QAAS+C,EAAI/B,OAGfxB,EAAc,CAAC,mBAAoB,UAAnCA,CAA8CI,GAXlD,gDAaQ,KAAIsB,WACAC,EAAS,KAAID,SAASF,KAAKG,OAEjCvB,EAAS,CACPC,KAAMN,EAAgBiF,WACtBxE,QAASmB,KAlBjB,yDADA,uDA4BWoE,EACX,SAACnB,GAAD,8CAAgB,WAAOxE,GAAP,iBAAAkB,EAAA,+EAEMR,IAAMkF,IAAN,0BAA6BpB,IAFnC,OAENrB,EAFM,OAIZnD,EAAS,CACPC,KAAMN,EAAgBkG,aACtBzF,QAAS,CAAEoE,KAAIsB,MAAO3C,EAAI/B,QANhB,gDASR,KAAIE,WACAC,EAAS,KAAID,SAASF,KAAKG,OAEjCvB,EAAS,CACPC,KAAMN,EAAgBiF,WACtBxE,QAASmB,KAdD,yDAAhB,uDAuBWwE,EACX,SAACvB,GAAD,8CAAgB,WAAOxE,GAAP,iBAAAkB,EAAA,+EAEMR,IAAMkF,IAAN,4BAA+BpB,IAFrC,OAENrB,EAFM,OAIZnD,EAAS,CACPC,KAAMN,EAAgBkG,aACtBzF,QAAS,CAAEoE,KAAIsB,MAAO3C,EAAI/B,QANhB,gDASR,KAAIE,WACAC,EAAS,KAAID,SAASF,KAAKG,OAEjCvB,EAAS,CACPC,KAAMN,EAAgBiF,WACtBxE,QAASmB,KAdD,yDAAhB,uD,QC5NIyE,EAAuB,CAC3B3F,MAAM,EACN4F,MAAO,CAAEpG,IAAK,GAAIC,SAAU,SAsBfoG,GAnBCC,aACd,WAAgE,IAA/DC,EAA8D,uDAA9CJ,EAAcK,EAAgC,uCAC7D,OAAQA,EAAOpG,MACb,KAAKC,EAAYC,eAGf,OAFAiG,EAAM/F,MAAO,EACb+F,EAAMH,MAAQI,EAAOjG,QACdgG,EAET,KAAKlG,EAAYK,aAGf,OAFA6F,EAAM/F,MAAO,EACb+F,EAAMH,MAAQD,EAAaC,MACpBG,EAET,QACE,OAAOA,MCPTJ,GAA0B,CAC9BvF,MAAOK,aAAawF,QAAQ,SAC5BC,kBAAiBzF,aAAawF,QAAQ,SACtCE,SAAS,EACTC,KAAM,CACJ/E,KAAM,GACNC,MAAO,GACP+E,OAAQ,GACRC,KAAM,GACNnC,GAAI,IAENjD,OAAQ,IA2CK2E,GAxCCC,aACd,WAAyE,IAAxEC,EAAuE,uDAApDJ,GAAcK,EAAsC,uCACtE,OAAQA,EAAOpG,MACb,KAAKZ,EAAwB6C,iBAC7B,KAAK5C,EAAqBiD,cAIxB,OAHAzB,aAAaC,QAAQ,QAASsF,EAAOjG,QAAQK,OAC7C2F,EAAMG,iBAAkB,EACxBH,EAAMI,SAAU,EACTJ,EAET,KAAK/G,EAAwBgD,cAC7B,KAAK/C,EAAqBkD,WAC1B,KAAKjD,EAAoBiC,WACzB,KAAKhC,EAAsBmD,OAMzB,OALA7B,aAAaE,WAAW,SACxBoF,EAAMG,iBAAkB,EACxBH,EAAMI,SAAU,EAChBJ,EAAM3F,MAAQ,KACd2F,EAAM7E,OAAS8E,EAAOjG,QACfgG,EAET,KAAK3G,EAAsBuD,eAKzB,OAJAlC,aAAaE,WAAW,SACxBoF,EAAMG,iBAAkB,EACxBH,EAAMI,SAAU,EAChBJ,EAAM3F,MAAQ,KACP2F,EAET,KAAK7G,EAAoB8B,YAIvB,OAHA+E,EAAMG,iBAAkB,EACxBH,EAAMI,SAAU,EAChBJ,EAAMK,KAAN,eAAkBJ,EAAOjG,SAClBgG,EAET,QACE,OAAOA,MCpDTJ,GAAyB,CAC7BY,QAAS,KACTC,SAAU,GACVC,MAAO,GACPN,SAAS,EACTjF,OAAQ,IA8CK2E,GA3CCC,aACd,WAAsE,IAArEC,EAAoE,uDAAlDJ,GAAcK,EAAoC,uCACnE,OAAQA,EAAOpG,MACb,KAAKP,EAAmB0D,YACxB,KAAK1D,EAAmB2E,eAGtB,OAFA+B,EAAMQ,QAAUP,EAAOjG,QACvBgG,EAAMI,SAAU,EACTJ,EAET,KAAK1G,EAAmB6D,aAGtB,OAFA6C,EAAMS,SAAWR,EAAOjG,QACxBgG,EAAMI,SAAU,EACTJ,EAET,KAAK1G,EAAmByE,UAGtB,OAFAiC,EAAMU,MAAQT,EAAOjG,QACrBgG,EAAMI,SAAU,EACTJ,EAET,KAAK1G,EAAmBuD,cAItB,OAHAmD,EAAM7E,OAAS8E,EAAOjG,QACtBgG,EAAMI,SAAU,EAChBJ,EAAMQ,QAAU,KACTR,EAET,KAAK1G,EAAmBgD,cACxB,KAAKhD,EAAmBsE,eAKtB,OAJAoC,EAAMQ,QAAU,KAChBR,EAAMS,SAAW,GACjBT,EAAMU,MAAQ,GACdV,EAAMI,SAAU,EACTJ,EAET,KAAK1G,EAAmB4D,sBAEtB,OADA8C,EAAMI,SAAU,EACTJ,EAET,QACE,OAAOA,M,SClDTJ,GAAsB,CAC1Be,MAAO,GACP9E,KAAM,KACNuE,SAAS,EACTjF,OAAQ,IAoEK2E,GAjECC,aACd,WAA6D,IAA5DC,EAA2D,uDAA5CJ,GAAcK,EAA8B,uCAC1D,OAAQA,EAAOpG,MACb,KAAKN,EAAgBgF,UAGnB,OAFAyB,EAAMW,MAAQV,EAAOjG,QACrBgG,EAAMI,SAAU,EACTJ,EAET,KAAKzG,EAAgBqF,SAGnB,OAFAoB,EAAMnE,KAAOoE,EAAOjG,QACpBgG,EAAMI,SAAU,EACTJ,EAET,KAAKzG,EAAgBuF,SAGnB,OAFAkB,EAAMW,MAAN,CAAeV,EAAOjG,SAAtB,oBAAkCgG,EAAMW,QACxCX,EAAMI,SAAU,EACTJ,EAET,KAAKzG,EAAgByF,YAGnB,OAFAgB,EAAMW,MAAQX,EAAMW,MAAMC,QAAO,SAAC/E,GAAD,OAAUA,EAAKuC,KAAO6B,EAAOjG,WAC9DgG,EAAMI,SAAU,EACTJ,EAET,KAAKzG,EAAgBiF,WAGnB,OAFAwB,EAAM7E,OAAS8E,EAAOjG,QACtBgG,EAAMI,SAAU,EACTJ,EAET,KAAKzG,EAAgBmF,WAGnB,OAFAsB,EAAMnE,KAAO,KACbmE,EAAMI,SAAU,EACTJ,EAET,KAAKzG,EAAgBkG,aACnB,IAAMoB,EAAYb,EAAMW,MAAMG,MAC5B,SAACjF,GAAD,OAAUA,EAAKuC,KAAO6B,EAAOjG,QAAQoE,MAUvC,OARIyC,IACFA,EAAUnB,MAAQO,EAAOjG,QAAQ0F,OAEnCM,EAAMW,MAAQX,EAAMW,MAAM5E,KAAI,SAACF,GAC7B,OAAIA,EAAKuC,KAAO6B,EAAOjG,QAAQoE,GAAW,eAAKyC,GACxChF,KAETmE,EAAMI,SAAU,EACTJ,EAET,KAAKzG,EAAgB4F,YAGnB,OAFAa,EAAMnE,KAAMkF,SAAZ,uBAA2Bf,EAAMnE,KAAMkF,UAAvC,gBAAsDd,EAAOjG,WAC7DgG,EAAMI,SAAU,EACTJ,EAET,KAAKzG,EAAgB+F,eAKnB,OAJAU,EAAMnE,KAAMkF,SAAWf,EAAMnE,KAAMkF,SAASH,QAC1C,SAACI,GAAD,OAAUA,EAAK5C,KAAO6B,EAAOjG,WAE/BgG,EAAMI,SAAU,EACTJ,EAET,QACE,OAAOA,MCpEAiB,GAPEC,YAAgB,CAC/BrB,MAAOsB,GACPC,KAAMC,GACNb,QAASc,GACTzF,KAAM0F,K,UCNKC,GAAQC,YAAYR,GAAU,GAAIS,YAAgBC,OCClDC,GAAa,WACxB,IAAMhI,EAAWiI,cACjB,OAAOC,mBAAQ,WACb,OAAOC,YAAmBC,EAAgBpI,KACzC,CAACA,KCNOqI,GAAoDC,I,iBCqBlDC,GAf4B,SAACC,GAC1C,IAAWC,EAAX,iBAAoBD,GAKpB,EAAqCH,IAAiB,SAACjC,GAAD,OAAWA,EAAMoB,QAA/DjB,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,QAEzB,OAAKD,GAAoBC,EAGhB,eAAC,IAAD,eAAWiC,IAFX,eAAC,IAAD,CAAUC,GAAG,Y,gLCVlBC,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJC,SAAU,GAEZC,OAAQ,CACNC,gBAAiB,YACjB,QAAS,CACPC,YAAa,YAGjBC,WAAY,CACVC,WAAY,QAEdC,KAAM,CACJC,QAAS,OACTC,WAAY,SACZC,KAAM,EACNC,eAAgB,WAChB,QAAS,CACPP,YAAa,WAEf,WAAY,CACVQ,OAAQ,SACRC,SAAU,GACVC,cAAe,YAGnBC,MAAO,CACLC,WAAY,UACZC,MAAOlB,EAAMmB,QAAQnJ,OAAOoJ,OAE9BC,KAAM,CACJC,MAAO,IACPb,QAAS,OACTc,aAAc,SACd,QAAS,CACPlB,YAAa,gBC6OJmB,GA3OU,SAAC7B,GAIxB,IAAM8B,EAAU3B,KAKVE,EAAQ0B,eAKRC,EAAWC,aAAc5B,EAAM6B,YAAYC,KAAK,OAKhDC,EAAWH,aAAc5B,EAAM6B,YAAYC,KAAK,OAKtD,EAAwBE,oBAAS,GAAjC,oBAAOxK,EAAP,KAAayK,EAAb,KAKMC,EAAU,SAACC,GACfpH,EAAQE,KAAKkH,GACbF,GAAQ,IAMJG,EAAW,kBAAMF,EAAQ,MACzBG,EAAY,kBAAMH,EAAQ,WAC1BI,EAAe,kBAAMJ,EAAQ,cAC7BK,EAAiB,kBAAML,EAAQ,cAC/BM,EAAY,kBAAMN,EAAQ,WAC1BO,EAAgB,kBAAMP,EAAQ,eAK9BnH,EAAU2H,cAKR9I,EAAWuF,KAAXvF,OAKA8D,EAAoB8B,IAAiB,SAACjC,GAAD,OAAWA,EAAMoB,QAAtDjB,gBAuBFiF,EACJ,gBAAC,WAAD,WACE,gBAACC,GAAA,EAAD,CAAQ1B,MAAM,UAAU2B,QAASN,EAAjC,UACE,eAAC,KAAD,CAAiBO,KAAMC,OADzB,gBAIA,gBAACH,GAAA,EAAD,CAAQ1B,MAAM,UAAU2B,QAASP,EAAjC,UACE,eAAC,KAAD,CAAiBQ,KAAME,OADzB,aAIA,gBAACJ,GAAA,EAAD,CAAQ1B,MAAM,UAAU2B,QAASR,EAAjC,UACE,eAAC,KAAD,CAAiBS,KAAMG,OADzB,gBAUEC,EACJ,gBAACC,GAAA,EAAD,WACE,gBAACC,GAAA,EAAD,CAAUC,QAAM,EAACR,QAASN,EAA1B,UACE,eAAC,KAAD,CAAiBO,KAAMC,OACvB,eAACO,GAAA,EAAD,CAAcC,QAAQ,kBAExB,eAACC,GAAA,EAAD,IACA,gBAACJ,GAAA,EAAD,CAAUC,QAAM,EAACR,QAASP,EAA1B,UACE,eAAC,KAAD,CAAiBQ,KAAME,OACvB,eAACM,GAAA,EAAD,CAAcC,QAAQ,eAExB,eAACC,GAAA,EAAD,IACA,gBAACJ,GAAA,EAAD,CAAUC,QAAM,EAACR,QAASR,EAA1B,UACE,eAAC,KAAD,CAAiBS,KAAMG,OACvB,eAACK,GAAA,EAAD,CAAcC,QAAQ,eAExB,eAACC,GAAA,EAAD,OAOEC,EACJ,gBAAC,WAAD,WACE,gBAACb,GAAA,EAAD,CAAQ1B,MAAM,UAAU2B,QAASN,EAAjC,UACE,eAAC,KAAD,CAAiBO,KAAMC,OADzB,gBAIA,gBAACH,GAAA,EAAD,CAAQ1B,MAAM,UAAU2B,QAASL,EAAjC,UACE,eAAC,KAAD,CAAiBM,KAAMY,OADzB,YAGA,gBAACd,GAAA,EAAD,CAAQ1B,MAAM,UAAU2B,QAASJ,EAAjC,UACE,eAAC,KAAD,CAAiBK,KAAMa,OADzB,eAIA,gBAACf,GAAA,EAAD,CAAQ1B,MAAM,UAAU2B,QAASjJ,EAAjC,UACE,eAAC,KAAD,CAAiBkJ,KAAMc,OADzB,eAUEC,EACJ,gBAACV,GAAA,EAAD,WACE,gBAACC,GAAA,EAAD,CAAUC,QAAM,EAACR,QAASN,EAA1B,UACE,eAAC,KAAD,CAAiBO,KAAMC,OACvB,eAACO,GAAA,EAAD,CAAcC,QAAQ,kBAExB,gBAACH,GAAA,EAAD,CAAUC,QAAM,EAACR,QAASL,EAA1B,UACE,eAAC,KAAD,CAAiBM,KAAMY,OACvB,eAACJ,GAAA,EAAD,CAAcC,QAAQ,aAExB,gBAACH,GAAA,EAAD,CAAUC,QAAM,EAACR,QAASJ,EAA1B,UACE,eAAC,KAAD,CAAiBK,KAAMa,OACvB,eAACL,GAAA,EAAD,CAAcC,QAAQ,iBAExB,gBAACH,GAAA,EAAD,CAAUC,QAAM,EAACR,QAxFA,WACnBjJ,IACAqI,GAAQ,IAsFN,UACE,eAAC,KAAD,CAAiBa,KAAMc,OACvB,eAACN,GAAA,EAAD,CAAcC,QAAQ,iBAQ5B,OAAI5B,GAAYI,EAEZ,gBAAC+B,GAAA,EAAD,CAAKC,UAAWtC,EAAQxB,KAAxB,UACE,eAAC+D,GAAA,EAAD,CAAQC,SAAS,QAAQF,UAAWtC,EAAQtB,OAA5C,SACE,gBAAC+D,GAAA,EAAD,WACE,gBAACC,GAAA,EAAD,CACEC,KAAK,QACLlD,MAAM,UACNmD,aAAW,OACXxB,QAAST,EAJX,UAME,eAAC,KAAD,CAAiBU,KAAMwB,OACvB,eAACC,GAAA,EAAD,CAAYC,QAAQ,KAApB,6BAEF,eAACL,GAAA,EAAD,CACEC,KAAK,QACLL,UAAWtC,EAAQnB,WACnBY,MAAM,UACNmD,aAAW,OACXxB,QA/HO,kBAAMZ,GAAQ,IA0HvB,SAOE,eAAC,KAAD,WAIN,eAACwC,GAAA,EAAD,CACEC,cAAY,uBACZC,OAAO,QACPnN,KAAMA,EACNoN,QApIY,kBAAM3C,GAAQ,IAqI1BR,QAAS,CACPT,MAAOS,EAAQT,OANnB,SASE,eAAC8C,GAAA,EAAD,CAAKC,UAAWtC,EAAQJ,KAAMqD,cAAY,wBAA1C,SACGhH,EAAkBmG,EAAkBX,SAQ7C,eAACY,GAAA,EAAD,CAAKC,UAAWtC,EAAQxB,KAAxB,SACE,eAAC+D,GAAA,EAAD,CAAQC,SAAS,QAAQF,UAAWtC,EAAQtB,OAA5C,SACE,gBAAC+D,GAAA,EAAD,WACE,gBAACC,GAAA,EAAD,CACEC,KAAK,QACLL,UAAWtC,EAAQnB,WACnBY,MAAM,UACNmD,aAAW,OACXxB,QAAST,EALX,UAOE,eAAC,KAAD,CAAiBU,KAAMwB,OACvB,eAACC,GAAA,EAAD,CAAYC,QAAQ,KAApB,6BAEF,eAACV,GAAA,EAAD,CAAKC,UAAWtC,EAAQjB,KAAxB,SACG9C,EAAkB+F,EAAYd,Y,2BCzQrC7C,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJa,SAAU,GACV+D,WAAY,OACZC,aAAc,EACdC,QAAS,WACTC,UAAW,GACXC,UAAW,QAEbN,OAAQ,CACNO,IAAK,KAEPC,QAAS,CACP/E,gBAAiB,UACjBgF,OAAQ,oBACRlE,MAAO,WAETmE,MAAO,CACLjF,gBAAiB,UACjBgF,OAAQ,oBACRlE,MAAO,eC6CIoE,GAnDS,SAAC3F,GAIvB,IAAM8B,EAAU3B,KAKhB,EAAwBN,IAAiB,SAACjC,GAAD,OAAWA,EAAMH,SAAlD5F,EAAR,EAAQA,KAAM4F,EAAd,EAAcA,MAyBd,OACE,eAACmI,GAAA,EAAD,CACE/N,KAAMA,EACNiK,QAtBK,CACL+D,sBAAuB/D,EAAQkD,QAsB/Bc,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,QACE,8BACGxI,EAAMpG,IAAIsC,KAAI,SAACtC,GAAD,OACb,8BAAeA,GAANA,QAIf6O,aAvBoB,WAAO,IAAD,EAC5B,MAAO,CACLpE,QAAS,CACPxB,KAAM6F,aAAKrE,EAAQxB,MAAT,oBACPwB,EAAQ0D,QAA6B,YAAnB/H,EAAMnG,UADjB,eAEPwK,EAAQ4D,MAA2B,UAAnBjI,EAAMnG,UAFf,MAoBE8O,M,6DC5DdjG,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CgB,MAAO,CACLgF,WAAYhG,EAAMiG,QAAQ,GAC1BxF,QAAS,OACTyF,cAAe,SACfxF,WAAY,UAEd7C,OAAQ,CACNgD,OAAQb,EAAMiG,QAAQ,GACtB7F,gBAAiBJ,EAAMmB,QAAQgF,UAAUC,MAE3CC,KAAM,CACJ/E,MAAO,OACPgF,UAAWtG,EAAMiG,QAAQ,IAE3BM,OAAQ,CACN1F,OAAQb,EAAMiG,QAAQ,EAAG,EAAG,IAE9BO,UAAW,CACTC,eAAgB,OAChBvF,MAAO,eCgIIwF,GAjIY,SAAC/G,GAI1B,IAAM8B,EAAU3B,KAKRpC,EAAoB8B,IAAiB,SAACjC,GAAD,OAAWA,EAAMoB,QAAtDjB,gBAEA9E,EAAauG,KAAbvG,SAEA7B,EAAkBoI,KAAlBpI,cAER,EAAgCiL,mBAAS,CACvCnJ,KAAM,GACNC,MAAO,GACPC,SAAU,GACV4N,gBAAiB,KAJnB,oBAAO7L,EAAP,KAAiB8L,EAAjB,KAOQ/N,EAA2CiC,EAA3CjC,KAAMC,EAAqCgC,EAArChC,MAAOC,EAA8B+B,EAA9B/B,SAAU4N,EAAoB7L,EAApB6L,gBAWzBE,EAAW,SAACC,GAAD,OACfF,EAAY,2BAAK9L,GAAN,mBAAiBgM,EAAEC,OAAOlO,KAAOiO,EAAEC,OAAOC,UAKvD,OAAItJ,EACK,eAAC,IAAD,CAAUmC,GAAG,eAIpB,gBAACoH,GAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,eAACC,EAAA,EAAD,IACA,uBAAKrD,UAAWtC,EAAQT,MAAxB,UACE,eAACqG,GAAA,EAAD,CAAQtD,UAAWtC,EAAQ5D,OAA3B,SACE,eAAC,KAAD,MAEF,eAAC0G,GAAA,EAAD,CAAY2C,UAAU,KAAK1C,QAAQ,KAAnC,qBAGA,wBAAMT,UAAWtC,EAAQ4E,KAAMiB,SAAU,SAACR,GAAD,OA7B9B,SAACA,GAChBA,EAAES,iBACExO,IAAa4N,EACf5P,EAAc,CAAC,wBAAyB,SAExC6B,EAAS,CAAEC,OAAMC,QAAOC,aAwB0BuO,CAASR,IAAzD,UACE,gBAACU,GAAA,EAAD,CAAMC,WAAS,EAACxB,QAAS,EAAzB,UACE,eAACuB,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,eAACC,GAAA,EAAD,CACEC,aAAa,OACbC,MAAM,OACNjP,KAAK,OACLmO,MAAOnO,EACPgO,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BtC,QAAQ,WACRuD,WAAS,EACTC,WAAS,MAGb,eAACR,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,eAACC,GAAA,EAAD,CACEpD,QAAQ,WACRwC,MAAOlO,EACP+N,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BiB,WAAS,EACTpM,GAAG,QACHmM,MAAM,gBACNjP,KAAK,QACLgP,aAAa,YAGjB,eAACL,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,eAACC,GAAA,EAAD,CACEpD,QAAQ,WACRwC,MAAOjO,EACP8N,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BiB,WAAS,EACTlP,KAAK,WACLiP,MAAM,WACN1Q,KAAK,WACLuE,GAAG,WACHkM,aAAa,uBAGjB,eAACL,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,eAACC,GAAA,EAAD,CACEpD,QAAQ,WACRwC,MAAOL,EACPE,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BiB,WAAS,EACTlP,KAAK,kBACLiP,MAAM,mBACN1Q,KAAK,WACLuE,GAAG,kBACHkM,aAAa,0BAInB,eAACjF,GAAA,EAAD,CACExL,KAAK,SACL2Q,WAAS,EACTvD,QAAQ,YACRtD,MAAM,UACN6C,UAAWtC,EAAQ8E,OACnBS,MAAM,WANR,qBAUA,eAACQ,GAAA,EAAD,CAAMC,WAAS,EAACQ,QAAQ,WAAxB,SACE,eAACT,GAAA,EAAD,CAAME,MAAI,EAAV,SACE,eAAC,IAAD,CAAM7H,GAAG,SAASkE,UAAWtC,EAAQ+E,UAArC,4D,qBCzIR1G,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CgB,MAAO,CACLsF,UAAWtG,EAAMiG,QAAQ,GACzBxF,QAAS,OACTyF,cAAe,SACfxF,WAAY,UAEd7C,OAAQ,CACNgD,OAAQb,EAAMiG,QAAQ,GACtB7F,gBAAiBJ,EAAMmB,QAAQgF,UAAUC,MAE3CC,KAAM,CACJ/E,MAAO,OACPgF,UAAWtG,EAAMiG,QAAQ,IAE3BM,OAAQ,CACN1F,OAAQb,EAAMiG,QAAQ,EAAG,EAAG,IAE9BiC,aAAc,CACZzB,eAAgB,OAChBvF,MAAO,eCyFIiH,GA7FS,WAItB,IAAM1G,EAAU3B,KAKRpC,EAAoB8B,IAAiB,SAACjC,GAAD,OAAWA,EAAMoB,QAAtDjB,gBAEAjE,EAAU0F,KAAV1F,MAER,EAAgCuI,mBAAS,CACvClJ,MAAO,GACPC,SAAU,KAFZ,oBAAO+B,EAAP,KAAiB8L,EAAjB,KAKQ9N,EAAoBgC,EAApBhC,MAAOC,EAAa+B,EAAb/B,SAET8N,EAAW,SAACC,GAAD,OACfF,EAAY,2BAAK9L,GAAN,mBAAiBgM,EAAEC,OAAOlO,KAAOiO,EAAEC,OAAOC,UAUvD,OAAItJ,EACK,eAAC,IAAD,CAAUmC,GAAG,eAIpB,gBAACoH,GAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,eAACC,EAAA,EAAD,IACA,uBAAKrD,UAAWtC,EAAQT,MAAxB,UACE,eAACqG,GAAA,EAAD,CAAQtD,UAAWtC,EAAQ5D,OAA3B,SACE,eAAC,KAAD,MAEF,eAAC0G,GAAA,EAAD,CAAY2C,UAAU,KAAK1C,QAAQ,KAAnC,qBAGA,wBAAMT,UAAWtC,EAAQ4E,KAAMiB,SAAU,SAACR,GAAD,OAtB9B,SAACA,GAChBA,EAAES,iBACF9N,EAAMX,EAAOC,GAoBuCuO,CAASR,IAAzD,UACE,eAACc,GAAA,EAAD,CACEpD,QAAQ,WACR3D,OAAO,SACPkH,WAAS,EACTpM,GAAG,QACHmM,MAAM,gBACNd,MAAOlO,EACP+N,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BjO,KAAK,QACLgP,aAAa,QACbG,WAAS,IAEX,eAACJ,GAAA,EAAD,CACEpD,QAAQ,WACR3D,OAAO,SACPkH,WAAS,EACTlP,KAAK,WACLiP,MAAM,WACN1Q,KAAK,WACL4P,MAAOjO,EACP8N,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BnL,GAAG,WACHkM,aAAa,qBAEf,eAACjF,GAAA,EAAD,CACExL,KAAK,SACL2Q,WAAS,EACTvD,QAAQ,YACRtD,MAAM,UACN8F,MAAM,QACNjD,UAAWtC,EAAQ8E,OANrB,qBAUA,eAACiB,GAAA,EAAD,CAAMC,WAAS,EAAf,SACE,eAACD,GAAA,EAAD,CAAME,MAAI,EAAV,SACE,eAAC,IAAD,CAAM3D,UAAWtC,EAAQyG,aAAcrI,GAAG,YAA1C,SACG,iD,mBCnGXC,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJQ,QAAS,OACTG,eAAgB,SAChBoF,WAAY,aCaDoC,GAbW,WAIxB,IAAM3G,EAAU3B,KAEhB,OACE,sBAAKiE,UAAWtC,EAAQxB,KAAxB,SACE,eAACoI,GAAA,EAAD,O,8BCZAvI,GAAYC,cAAW,SAACC,GAAD,YAAmB,CAC9CgB,MAAO,CACLZ,gBAAiB,UACjBc,MAAO,OACPoF,UAAW,OACXN,WAAY,OACZsC,cAAe,OACf7H,QAAS,OACTyF,cAAe,SACfxF,WAAY,UAEd6H,KAAM,CACJ9H,QAAS,OACTyF,cAAe,SACftF,eAAgB,SAChBF,WAAY,UAEd8H,YAAU,GACR/H,QAAS,OACTyF,cAAe,OAFP,eAGPlG,EAAM6B,YAAYC,KAAK,MAAQ,CAC9BoE,cAAe,WAJT,eAMR,QAAS,CACP7F,YAAa,YAPP,GAUVxC,OAAQ,CACNyD,MAAO,OACPmH,OAAQ,QAEVC,YAAa,CACX1C,WAAY,QAEd2C,OAAQ,CACNlI,QAAS,OACT,OAAQ,CACNmI,aAAc,SAGlBC,WAAY,CACVpI,QAAS,OACTC,WAAY,SACZkI,aAAc,OACd,QAAS,CACP1H,MAAO,OACPb,YAAa,WAGjByI,eAAgB,CACdxC,UAAW,OACXlG,gBAAiB,OACjB,MAAO,CACLqG,eAAgB,OAChBvF,MAAO,WAETA,MAAO,UACP,UAAW,CACTd,gBAAiB,UACjBc,MAAO,aCQE6H,GA3CiC,SAACpJ,GAC/C,IAAQ5B,EAAY4B,EAAZ5B,QAIF0D,EAAU3B,KAEhB,OACE,gBAACkJ,GAAA,EAAD,CAAOC,UAAW,EAAGlF,UAAWtC,EAAQT,MAAxC,UACE,gBAACwG,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,GAAInF,UAAWtC,EAAQ8G,KAAtC,UACE,eAAClB,GAAA,EAAD,CAAQ8B,IAAKpL,EAAQH,KAAKC,OAAQkG,UAAWtC,EAAQ5D,SACrD,eAAC0G,GAAA,EAAD,CAAYC,QAAQ,KAAKT,UAAWtC,EAAQiH,YAAaU,cAAY,EAArE,SACGrL,EAAQH,KAAK/E,OAEhB,gBAAC0L,GAAA,EAAD,CAAYC,QAAQ,KAAK4E,cAAY,EAArC,UACGrL,EAAQsL,OAAQ,IAChBtL,EAAQuL,SAAW,yCAAWvL,EAAQuL,cAEzC,eAAC/E,GAAA,EAAD,CAAYC,QAAQ,KAAK4E,cAAY,EAArC,SACGrL,EAAQwL,UAAY,eAACzF,GAAA,EAAD,UAAM/F,EAAQwL,gBAGvC,eAAC/B,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,GAAInF,UAAWtC,EAAQ+G,WAAtC,SACGzK,EAAQ4K,OAAOa,MAAM,EAAG,GAAGlQ,KAAI,SAACmQ,EAAOC,GAAR,OAC9B,gBAACnF,GAAA,EAAD,CAEEC,QAAQ,YACRT,UAAWtC,EAAQkH,OACnBS,cAAY,EAJd,UAME,eAAC,KAAD,IACCK,EAAME,gBANFD,QAWX,eAAC9G,GAAA,EAAD,CAAQ4B,QAAQ,WAAWT,UAAWtC,EAAQqH,eAA9C,SACE,eAAC,IAAD,CAAMjJ,GAAE,mBAAc9B,EAAQH,KAAKjC,IAAnC,gCC7DFmE,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CyH,UAAW,CACTnB,UAAW,OACX7F,QAAS,OACTyF,cAAe,UAEjB0D,UAAW,CACTtD,UAAW,OACX,QAAS,CACPjG,YAAa,UACba,MAAO,YAGX2I,eAAgB,CACd7D,WAAY,SACZ8D,YAAa,YCiEFC,GAvDY,WAIzB,IAAQvP,EAAgB2E,KAAhB3E,YAKR,EAA8BgF,IAAiB,SAACjC,GAAD,OAAWA,EAAMQ,WAAxDC,EAAR,EAAQA,SAAUL,EAAlB,EAAkBA,QAElBqM,qBAAU,WACRxP,MAEC,IAKH,IAAMiH,EAAU3B,KAEhB,OAAOnC,EACL,eAAC,GAAD,IAEA,eAACsJ,GAAA,EAAD,CAAWE,SAAS,KAAKpD,UAAWtC,EAAQgG,UAA5C,SACE,gBAACD,GAAA,EAAD,CAAMC,WAAS,EAACxB,QAAS,EAAGlC,UAAWtC,EAAQgG,UAA/C,UACE,gBAACD,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,GAAf,UACE,eAAC3E,GAAA,EAAD,CAAYC,QAAQ,KAAKtD,MAAM,UAA/B,wBAGA,gBAACqD,GAAA,EAAD,CACEC,QAAQ,KACRtD,MAAM,cACN6C,UAAWtC,EAAQmI,UAHrB,UAKE,eAAC,KAAD,CAAiB9G,KAAMmH,OALzB,yCASF,eAACzC,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,GAAf,SACGlL,EAASkM,OAAS,EACjBlM,EAAS1E,KAAI,SAACyE,EAAS2L,GAAV,OACX,eAAC,GAAD,CAAyB3L,QAASA,GAAhB2L,MAGpB,eAACnF,GAAA,EAAD,CAAYC,QAAQ,KAAKT,UAAWtC,EAAQoI,eAA5C,wC,wICtEN/J,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CgB,MAAO,CACLZ,gBAAiB,UACjBc,MAAO,OACPoF,UAAW,OACXN,WAAY,OACZsC,cAAe,OACf7H,QAAS,OACTyF,cAAe,SACfxF,WAAY,UAEd6H,KAAM,CACJ9H,QAAS,OACTyF,cAAe,SACftF,eAAgB,SAChBF,WAAY,UAEdyJ,YAAa,CACX1J,QAAS,OACTyF,cAAe,MACfxF,WAAY,SACZ,QAAS,CACPI,SAAU,OACVD,OAAQ,WACRK,MAAO,OACP,WAAY,CACVA,MAAO,aAIbrD,OAAQ,CACNyD,MAAO,QACPmH,OAAQ,SAEVC,YAAa,CACX1C,WAAY,QAEdoE,QAAS,CACPpE,WAAY,SAEZ,QAAS,CACPlF,SAAU,OACVT,YAAa,OACba,MAAO,OACP,WAAY,CACVA,MAAO,iBCyCAmJ,GA3D+B,SAAC1K,GAAW,IAAD,UAC/C5B,EAAY4B,EAAZ5B,QAKF0D,EAAU3B,KAEhB,OACE,gBAACkJ,GAAA,EAAD,CAAOC,UAAW,EAAGlF,UAAWtC,EAAQT,MAAxC,UACE,gBAACwG,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,GAAInF,UAAWtC,EAAQ8G,KAAtC,UACE,eAAClB,GAAA,EAAD,CAAQ8B,IAAKpL,EAAQH,KAAKC,OAAQkG,UAAWtC,EAAQ5D,SACrD,eAAC0G,GAAA,EAAD,CAAYC,QAAQ,KAAKT,UAAWtC,EAAQiH,YAAaU,cAAY,EAArE,SACGrL,EAAQH,KAAK/E,OAEhB,gBAAC0L,GAAA,EAAD,CAAYC,QAAQ,KAAK4E,cAAY,EAArC,UACGrL,EAAQsL,OAAQ,IAChBtL,EAAQuL,SAAW,yCAAWvL,EAAQuL,cAEzC,eAAC/E,GAAA,EAAD,CAAYC,QAAQ,KAAK4E,cAAY,EAArC,SACGrL,EAAQwL,UAAY,eAACzF,GAAA,EAAD,UAAM/F,EAAQwL,gBAGvC,gBAAC/B,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,GAAInF,UAAWtC,EAAQ0I,YAAtC,UACGpM,EAAQuM,SACP,eAACC,GAAA,EAAD,CAAMC,KAAMzM,EAAQuM,QAApB,SACE,eAAC,KAAD,OAGH,UAAAvM,EAAQ0M,cAAR,eAAgBC,UACf,eAACH,GAAA,EAAD,CAAMC,KAAMzM,EAAQ0M,OAAOE,UAA3B,SACE,eAAC,KAAD,OAGH,UAAA5M,EAAQ0M,cAAR,eAAgBG,WACf,eAACL,GAAA,EAAD,CAAMC,KAAMzM,EAAQ0M,OAAOG,SAA3B,SACE,eAAC,KAAD,OAGH,UAAA7M,EAAQ0M,cAAR,eAAgBI,WACf,eAACN,GAAA,EAAD,CAAMC,KAAMzM,EAAQ0M,OAAOI,SAA3B,SACE,eAAC,KAAD,OAGH,UAAA9M,EAAQ0M,cAAR,eAAgBK,UACf,eAACP,GAAA,EAAD,CAAMC,KAAMzM,EAAQ0M,OAAOK,QAA3B,SACE,eAAC,KAAD,OAGH,UAAA/M,EAAQ0M,cAAR,eAAgBE,YACf,eAACJ,GAAA,EAAD,CAAMC,KAAMzM,EAAQ0M,OAAOE,UAA3B,SACE,eAAC,KAAD,aC9EN7K,GAAYC,cAAW,SAACC,GAAD,YAAmB,CAC9CgB,MAAO,CACLZ,gBAAiB,UACjBc,MAAO,UACPoF,UAAW,SACXyE,aAAc,SACd/E,WAAY,OACZsC,cAAe,OACf7H,QAAS,OACTyF,cAAe,SACfxF,WAAY,UAEdiI,OAAQ,CACNlI,QAAS,OACT,QAAS,CACPmI,aAAc,SAGlBJ,YAAU,GACR/H,QAAS,OACTyF,cAAe,OAFP,eAGPlG,EAAM6B,YAAYC,KAAK,MAAQ,CAC9BoE,cAAe,WAJT,eAMR,QAAS,CACP7F,YAAa,YAPP,GAUVwI,WAAY,CACVpI,QAAS,OACTC,WAAY,SACZL,YAAa,OACb,QAAS,CACPa,MAAO,UACPb,YAAa,WAGjBoH,UAAW,CACThH,QAAS,OACTyF,cAAe,SACfxF,WAAY,UAEdsK,IAAK,CACHlK,SAAU,UACVmK,UAAW,UAEbC,QAAS,CACPC,aAAc,kBACdnF,WAAY,OACZsC,cAAe,YCYJ8C,GAxCiC,SAACzL,GAC/C,IAAQ5B,EAAY4B,EAAZ5B,QAIF0D,EAAU3B,KAEhB,OACE,gBAACkJ,GAAA,EAAD,CAAOC,UAAW,EAAGlF,UAAWtC,EAAQT,MAAxC,UACGjD,EAAQiN,KACP,gBAAC/D,GAAA,EAAD,CAAWE,SAAS,KAAKpD,UAAWtC,EAAQgG,UAA5C,UACE,gBAAClD,GAAA,EAAD,CAAYC,QAAQ,KAAK4E,cAAY,EAArC,UACGrL,EAAQH,KAAK/E,KAAKwS,OAAOC,MAAM,KAAK,GADvC,YAGA,eAAC/G,GAAA,EAAD,CAAYC,QAAQ,KAAKT,UAAWtC,EAAQuJ,IAAK9J,MAAM,cAAvD,SACGnD,EAAQiN,SAIf,eAACxH,GAAA,EAAD,CAASO,UAAWtC,EAAQyJ,UAC5B,eAAC3G,GAAA,EAAD,CAAYC,QAAQ,KAAK4E,cAAY,EAArC,uBAGA,eAAC5B,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,GAAInF,UAAWtC,EAAQ+G,WAAtC,SACGzK,EAAQ4K,OAAOa,MAAM,EAAG,GAAGlQ,KAAI,SAACmQ,EAAOC,GAAR,OAC9B,gBAACnF,GAAA,EAAD,CAEER,UAAWtC,EAAQkH,OACnBS,cAAY,EACZlI,MAAM,cAJR,UAME,eAAC,KAAD,IACCuI,EAAME,gBANFD,Y,oBC/CX5J,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CyH,UAAW,CACT0D,aAAc,kBACdnF,WAAY,OACZsC,cAAe,OACf,iBAAkB,CAChB6C,aAAc,aCuCLI,GA1B6C,SAAC5L,GAC3D,IAAQ5B,EAAY4B,EAAZ5B,QAIF0D,EAAU3B,KAEhB,OACE,gBAACgE,GAAA,EAAD,CAAKC,UAAWtC,EAAQgG,UAAxB,UACE,eAAClD,GAAA,EAAD,CAAYC,QAAQ,KAAK4E,cAAY,EAArC,SACGrL,EAAQuL,UAEX,gBAAC/E,GAAA,EAAD,CAAYC,QAAQ,KAAK4E,cAAY,EAAClI,MAAM,cAA5C,UACGsK,aAAOC,aAAS1N,EAAQ2N,MAAO,cADlC,KACmD,IAC/C3N,EAAQ8B,GAAa2L,aAAOC,aAAS1N,EAAQ8B,IAAK,cAArC,SAEjB,gBAAC0E,GAAA,EAAD,CAAYC,QAAQ,KAAK4E,cAAY,EAAClI,MAAM,cAA5C,UACE,+CADF,KAC8BnD,EAAQ4N,SAEtC,gBAACpH,GAAA,EAAD,CAAYC,QAAQ,KAAK4E,cAAY,EAAClI,MAAM,cAA5C,UACE,kDADF,KACiCnD,EAAQ6N,mBCvCzC9L,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CyH,UAAW,CACT0D,aAAc,kBACdnF,WAAY,OACZsC,cAAe,OACf,iBAAkB,CAChB6C,aAAc,aC2CLU,GA9B2C,SAAClM,GACzD,IAAQ5B,EAAY4B,EAAZ5B,QAKF0D,EAAU3B,KAEhB,OACE,gBAACgE,GAAA,EAAD,CAAKC,UAAWtC,EAAQgG,UAAxB,UACE,eAAClD,GAAA,EAAD,CAAYC,QAAQ,KAAK4E,cAAY,EAArC,SACGrL,EAAQ+N,SAEX,gBAACvH,GAAA,EAAD,CAAYC,QAAQ,KAAK4E,cAAY,EAAClI,MAAM,cAA5C,UACGsK,aAAOC,aAAS1N,EAAQ2N,MAAO,cADlC,KACmD,IAC/C3N,EAAQ8B,GAAa2L,aAAOC,aAAS1N,EAAQ8B,IAAK,cAArC,SAEjB,gBAAC0E,GAAA,EAAD,CAAYC,QAAQ,KAAK4E,cAAY,EAAClI,MAAM,cAA5C,UACE,6CADF,KAC4BnD,EAAQgO,UAEpC,gBAACxH,GAAA,EAAD,CAAYC,QAAQ,KAAK4E,cAAY,EAAClI,MAAM,cAA5C,UACE,qDADF,KACoCnD,EAAQiO,gBAE5C,gBAACzH,GAAA,EAAD,CAAYC,QAAQ,KAAK4E,cAAY,EAAClI,MAAM,cAA5C,UACE,kDADF,KACiCnD,EAAQ6N,mB,SC3CzC9L,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CyH,UAAW,CACThH,QAAS,OACTyF,cAAe,UAEjBlF,MAAM,cACJP,QAAS,OACTyF,cAAe,MACf9F,gBAAiB,UACjBc,MAAO,UACPoF,UAAW,SACXjG,YAAa,OACbE,WAAY,OACZyF,WAAY,OACZsC,cAAe,OACfwB,YAAa,OACblB,aAAc,QACb5I,EAAM6B,YAAYC,KAAK,MAAQ,CAC9BoE,cAAe,WAGnBqC,KAAM,CACJ9H,QAAS,OACTC,WAAY,aACZwF,cAAe,SACftF,eAAgB,UAElBqL,WAAY,CACVxL,QAAS,OACTC,WAAY,WACZwF,cAAe,SACftF,eAAgB,SAChB,QAAS,CACPP,YAAa,gBC4DJ6L,GAhEqC,SAACvM,GACnD,IAAQtE,EAAasE,EAAbtE,SAKAD,EAAmB+D,KAAnB/D,eAER4O,qBAAU,WACR5O,EAAeC,KAEd,CAACD,IAKJ,IAAMqG,EAAU3B,KAKR7B,EAAUuB,IAAiB,SAACjC,GAAD,OAAWA,EAAMQ,WAA5CE,MAER,OACE,eAACuJ,GAAA,EAAD,CAAMC,WAAS,EAACxB,QAAS,EAAGlC,UAAWtC,EAAQgG,UAA/C,SACGxJ,GACCA,EAAM3E,KAAI,SAAC6S,EAAMzC,GAAP,OACR,gBAACV,GAAA,EAAD,CAAmBC,UAAW,EAAGlF,UAAWtC,EAAQT,MAApD,UACE,gBAACwG,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIuB,GAAI,GAAInF,UAAWtC,EAAQ8G,KAA9C,UACE,eAAChE,GAAA,EAAD,CAAY6E,cAAY,EAAxB,SACE,eAACmB,GAAA,EAAD,CAAMC,KAAM2B,EAAKC,SAAjB,SAA4BD,EAAKtT,SAEb,OAArBsT,EAAKP,YACJ,eAACrH,GAAA,EAAD,UAAa4H,EAAKP,cAElB,eAACrH,GAAA,EAAD,CACEC,QAAQ,YACRtD,MAAM,cACNkI,cAAY,EAHd,0CASJ,gBAAC5B,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIuB,GAAI,EAAGnF,UAAWtC,EAAQwK,WAA7C,UACE,gBAACnI,GAAA,EAAD,WACE,eAAC,KAAD,CAAiBhB,KAAMuJ,OACtBF,EAAKG,oBAER,gBAACxI,GAAA,EAAD,WACE,eAAC,KAAD,CAAiBhB,KAAMyJ,OACtBJ,EAAKK,kBAER,gBAAC1I,GAAA,EAAD,WACE,eAAC,KAAD,CAAiBhB,KAAM2J,OACtBN,EAAKO,oBA5BAhD,SCxDhB5J,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CyH,UAAW,CACTnB,UAAW,OACXmC,OAAQ,SAEVkE,cAAe,CACblM,QAAS,OACTC,WAAY,UAEdkM,WAAY,CACVxM,gBAAiB,UACjBc,MAAO,UACPoF,UAAW,SACXN,WAAY,OACZsC,cAAe,OACf7H,QAAS,OACTyF,cAAe,SACfxF,WAAY,aACZoJ,YAAa,QAEf+C,gBAAiB,CACftM,WAAY,OACZ+F,UAAW,OACXlG,gBAAiB,OACjB,MAAO,CACLqG,eAAgB,OAChBvF,MAAO,WAETA,MAAO,UACP,UAAW,CACTd,gBAAiB,UACjBc,MAAO,SAGX4L,gBAAiB,CACfxG,UAAW,OACXlG,gBAAiB,OACjB,MAAO,CACLqG,eAAgB,OAChBvF,MAAO,WAETA,MAAO,UACP,UAAW,CACTd,gBAAiB,UACjBc,MAAO,SAGX6L,OAAQ,CACN/G,WAAY,OACZ8D,YAAa,YC4EFkD,GA/FW,WACxB,IAAQrR,EAAOsR,cAAPtR,GAIF8F,EAAU3B,KAKRnF,EAAmBwE,KAAnBxE,eAKR,EAA6B6E,IAAiB,SAACjC,GAAD,OAAWA,EAAMQ,WAAvDA,EAAR,EAAQA,QAASJ,EAAjB,EAAiBA,QACjB,EAAkC6B,IAAiB,SAACjC,GAAD,OAAWA,EAAMoB,QAA5DjB,EAAR,EAAQA,gBAAiBE,EAAzB,EAAyBA,KACnBsP,EAAc1N,IAAiB,SAACjC,GAAD,OAAWA,EAAMoB,KAAKhB,WAM3D,OAJAqM,qBAAU,WACRrP,EAAegB,KACd,CAAChB,EAAgBgB,IAGlB,eAACsL,GAAA,EAAD,CAAWE,SAAS,KAAKpD,UAAWtC,EAAQgG,UAA5C,SACe,OAAZ1J,GAAoBJ,EACnB,eAAC,GAAD,IAEA,gBAAC,WAAD,WACE,eAACiF,GAAA,EAAD,CAAQ4B,QAAQ,WAAWT,UAAWtC,EAAQqL,gBAA9C,SACE,eAAC,IAAD,CAAMjN,GAAG,YAAT,gCAEDnC,IACiB,IAAhBwP,GACAtP,EAAKjC,KAAOoC,EAAQH,KAAKjC,IACvB,eAACiH,GAAA,EAAD,CAAQ4B,QAAQ,WAAWT,UAAWtC,EAAQoL,gBAA9C,SACE,eAAC,IAAD,CAAMhN,GAAG,gBAAT,4BAIN,eAAC,GAAD,CAAY9B,QAASA,IACrB,eAAC,GAAD,CAAcA,QAASA,IACvB,gBAACyJ,GAAA,EAAD,CAAMC,WAAS,EAACxB,QAAS,EAAGlC,UAAWtC,EAAQkL,cAA/C,UACE,eAACnF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIuB,GAAI,EAAvB,SACE,gBAACF,GAAA,EAAD,CAAOC,UAAW,EAAGlF,UAAWtC,EAAQmL,WAAxC,UACE,eAACrI,GAAA,EAAD,CAAYC,QAAQ,KAApB,wBACCzG,EAAQ6O,WAAW1C,OAAS,EAC3B,eAAC,WAAD,UACGnM,EAAQ6O,WAAWtT,KAAI,SAAC6T,EAAKzD,GAAN,OACtB,eAAC,GAAD,CAA+B3L,QAASoP,GAAhBzD,QAI5B,eAACnF,GAAA,EAAD,CACEC,QAAQ,KACRtD,MAAM,cACN6C,UAAWtC,EAAQsL,OAHrB,4CAUN,eAACvF,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIuB,GAAI,EAAvB,SACE,gBAACF,GAAA,EAAD,CAAOC,UAAW,EAAGlF,UAAWtC,EAAQmL,WAAxC,UACE,eAACrI,GAAA,EAAD,CAAYC,QAAQ,KAApB,uBACCzG,EAAQqP,UAAUlD,OAAS,EAC1B,eAAC,WAAD,UACGnM,EAAQqP,UAAU9T,KAAI,SAAC+T,EAAK3D,GAAN,OACrB,eAAC,GAAD,CAA8B3L,QAASsP,GAAhB3D,QAI3B,eAACnF,GAAA,EAAD,CACEC,QAAQ,KACRtD,MAAM,cACN6C,UAAWtC,EAAQsL,OAHrB,8CAWR,eAACvF,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,GAAf,SACGnL,EAAQuP,gBACP,eAAC,GAAD,CAAejS,SAAU0C,EAAQuP,yBCpHzCxN,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CqD,OAAQ,CACNiD,UAAW,OACXjG,YAAa,OACbD,gBAAiB,OACjB,MAAO,CACLqG,eAAgB,OAChBvF,MAAO,WAETA,MAAO,UACP,UAAW,CACTd,gBAAiB,UACjBc,MAAO,aC8BEqM,GA3BoB,WAIjC,IAAM9L,EAAU3B,KAEhB,OACE,gBAACgE,GAAA,EAAD,WACE,eAAClB,GAAA,EAAD,CAAQ4B,QAAQ,WAAWT,UAAWtC,EAAQ4B,OAA9C,SACE,gBAAC,IAAD,CAAMxD,GAAG,gBAAT,UACE,eAAC,KAAD,CAAiBiD,KAAM0K,OADzB,qBAIF,eAAC5K,GAAA,EAAD,CAAQ4B,QAAQ,WAAWT,UAAWtC,EAAQ4B,OAA9C,SACE,gBAAC,IAAD,CAAMxD,GAAG,kBAAT,UACE,eAAC,KAAD,CAAiBiD,KAAM2K,OADzB,uBAIF,eAAC7K,GAAA,EAAD,CAAQ4B,QAAQ,WAAWT,UAAWtC,EAAQ4B,OAA9C,SACE,gBAAC,IAAD,CAAMxD,GAAG,iBAAT,UACE,eAAC,KAAD,CAAiBiD,KAAM4K,OADzB,0B,4DClCF5N,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CyH,UAAW,CACTnB,UAAW,QAEbqH,MAAO,CACLC,SAAU,KAEZC,aAAc,CACZ3M,MAAO,OAET4M,UAAW,CACT,OAAQ,CACN5M,MAAO,gBCkFE6M,GA9D+B,SAACpO,GAC7C,IAAQ5B,EAAY4B,EAAZ5B,QAKF0D,EAAU3B,KAKRpE,EAAqByD,KAArBzD,iBAKR,IAAKqC,EAAQ6O,WAAY,OAAO,KAKhC,IAAMoB,EAAcjQ,EAAQ6O,WAAWtT,KAAI,SAAC6T,EAAKzD,GAAN,OACzC,gBAACuE,GAAA,EAAD,CAAsBlK,UAAWtC,EAAQqM,UAAzC,UACE,eAACI,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBhB,EAAI7D,UAC7B,eAAC4E,GAAA,EAAD,UAAYf,EAAIxB,QAChB,gBAACuC,GAAA,EAAD,CAAWC,MAAM,OAAjB,UACG3C,aAAOC,aAAS0B,EAAIzB,MAAO,cAD9B,KAC+C,IAC3CyB,EAAItN,GAAa2L,aAAOC,aAAS0B,EAAItN,IAAK,cAAjC,SAEb,eAACqO,GAAA,EAAD,CAAWC,MAAM,OAAjB,SACE,eAACvL,GAAA,EAAD,CACEmB,UAAWtC,EAAQoM,aACnBhL,QAAS,kBAAMnH,EAAiByR,EAAIiB,MAFtC,wBARW1E,MAkBjB,OACE,gBAAC5F,GAAA,EAAD,CAAKC,UAAWtC,EAAQgG,UAAxB,UACE,eAAClD,GAAA,EAAD,CAAYC,QAAQ,KAAKtD,MAAM,UAAUkI,cAAY,EAArD,oCAGA,eAACiF,GAAA,EAAD,CAAgBnH,UAAW8B,KAA3B,SACE,gBAACsF,GAAA,EAAD,CAAOvK,UAAWtC,EAAQkM,MAAOtJ,aAAW,eAA5C,UACE,eAACkK,GAAA,EAAD,UACE,gBAACN,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,qBACA,eAACD,GAAA,EAAD,CAAWC,MAAM,OAAjB,mBACA,eAACD,GAAA,EAAD,CAAWC,MAAM,OAAjB,mBACA,eAACD,GAAA,EAAD,CAAWC,MAAM,OAAjB,oCAGJ,eAACK,GAAA,EAAD,UAAYR,aCvFhBlO,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CyH,UAAW,CACTnB,UAAW,QAEbqH,MAAO,CACLC,SAAU,KAEZC,aAAc,CACZ3M,MAAO,OAET4M,UAAW,CACT,OAAQ,CACN5M,MAAO,gBCkFEuN,GA9D6B,SAAC9O,GAC3C,IAAQ5B,EAAY4B,EAAZ5B,QAKF0D,EAAU3B,KAKRlE,EAAoBuD,KAApBvD,gBAKR,IAAKmC,EAAQqP,UAAW,OAAO,KAK/B,IAAMsB,EAAa3Q,EAAQqP,UAAU9T,KAAI,SAAC+T,EAAK3D,GAAN,OACvC,gBAACuE,GAAA,EAAD,CAAsBlK,UAAWtC,EAAQqM,UAAzC,UACE,eAACI,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBd,EAAIvB,SAC7B,eAACoC,GAAA,EAAD,UAAYb,EAAItB,SAChB,gBAACmC,GAAA,EAAD,CAAWC,MAAM,OAAjB,UACG3C,aAAOC,aAAS4B,EAAI3B,MAAO,cAD9B,KAC+C,IAC3C2B,EAAIxN,GAAa2L,aAAOC,aAAS4B,EAAIxN,IAAK,cAAjC,SAEb,eAACqO,GAAA,EAAD,CAAWC,MAAM,OAAjB,SACE,eAACvL,GAAA,EAAD,CACEmB,UAAWtC,EAAQoM,aACnBhL,QAAS,kBAAMjH,EAAgByR,EAAIe,MAFrC,wBARW1E,MAkBjB,OACE,gBAAC5F,GAAA,EAAD,CAAKC,UAAWtC,EAAQgG,UAAxB,UACE,eAAClD,GAAA,EAAD,CAAYC,QAAQ,KAAKtD,MAAM,UAAUkI,cAAY,EAArD,mCAGA,eAACiF,GAAA,EAAD,CAAgBnH,UAAW8B,KAA3B,SACE,gBAACsF,GAAA,EAAD,CAAOvK,UAAWtC,EAAQkM,MAAOtJ,aAAW,eAA5C,UACE,eAACkK,GAAA,EAAD,UACE,gBAACN,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,oBACA,eAACD,GAAA,EAAD,CAAWC,MAAM,OAAjB,oBACA,eAACD,GAAA,EAAD,CAAWC,MAAM,OAAjB,mBACA,eAACD,GAAA,EAAD,CAAWC,MAAM,OAAjB,mCAGJ,eAACK,GAAA,EAAD,UAAYE,aCvFhB5O,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CyH,UAAW,CACTnB,UAAW,QAEbqI,SAAU,CACRtO,YAAa,SACba,MAAO,WAET0N,WAAY,CACVtI,UAAW,OACX,WAAY,CACVjG,YAAa,OACb0K,aAAc,OACd3K,gBAAiB,OACjB,MAAO,CACLqG,eAAgB,OAChBvF,MAAO,WAETA,MAAO,MACP,UAAW,CACTd,gBAAiB,MACjBc,MAAO,UAIb2N,UAAW,CACTvI,UAAW,SACX/F,WAAY,OACZH,gBAAiB,OACjBc,MAAO,MACP,UAAW,CACTd,gBAAiB,MACjBc,MAAO,SAGX4N,iBAAkB,CAChBxI,UAAW,SACXlG,gBAAiB,OACjB,MAAO,CACLqG,eAAgB,OAChBvF,MAAO,WAETA,MAAO,UACP,UAAW,CACTd,gBAAiB,UACjBc,MAAO,aCmEE6N,GAnFa,WAC1B/E,qBAAU,WACR3P,MAEC,IAKH,IAAMoH,EAAU3B,KAKRzF,EAAsB8E,KAAtB9E,kBAKAa,EAAkBiE,KAAlBjE,cAMAnB,EAAkBoF,KAAlBpF,cAKA6D,EAAS4B,IAAiB,SAACjC,GAAD,OAAWA,EAAMoB,QAA3Cf,KAKR,EAA6B4B,IAAiB,SAACjC,GAAD,OAAWA,EAAMQ,WAAvDA,EAAR,EAAQA,QAER,OAFA,EAAiBJ,SAEa,OAAZI,EAChB,eAAC,GAAD,IAEA,gBAACkJ,GAAA,EAAD,CAAWE,SAAS,KAAKpD,UAAWtC,EAAQgG,UAA5C,UACE,eAAClD,GAAA,EAAD,CAAYC,QAAQ,KAAKtD,MAAM,UAAUkI,cAAY,EAArD,uBAGA,gBAAC7E,GAAA,EAAD,CAAYC,QAAQ,KAAKtD,MAAM,cAAckI,cAAY,EAAzD,UACE,eAAC,KAAD,CAAiBtG,KAAMkM,KAAQjL,UAAWtC,EAAQkN,WADpD,YAEY/Q,GAAQA,EAAK/E,QAEZ,OAAZkF,EACC,gBAAC,WAAD,WACE,eAAC,GAAD,IACA,eAAC,GAAD,CAAYA,QAASA,IACrB,eAAC,GAAD,CAAWA,QAASA,IACpB,gBAAC+F,GAAA,EAAD,CAAKC,UAAWtC,EAAQmN,WAAxB,UACE,eAAChM,GAAA,EAAD,CAAQ4B,QAAQ,WAAW3B,QAAS,kBAAM9I,KAA1C,4BAGA,eAAC6I,GAAA,EAAD,CAAQ4B,QAAQ,WAAW3B,QAAS,kBAAM3H,KAA1C,kCAMJ,gBAAC4I,GAAA,EAAD,WACE,eAACS,GAAA,EAAD,CAAYC,QAAQ,KAAKtD,MAAM,cAAckI,cAAY,EAAzD,qEAGA,eAACxG,GAAA,EAAD,CAAQ4B,QAAQ,WAAWT,UAAWtC,EAAQqN,iBAA9C,SACE,eAAC,IAAD,CAAMjP,GAAG,kBAAT,8BAEF,eAAC+C,GAAA,EAAD,CACE4B,QAAQ,WACRT,UAAWtC,EAAQoN,UACnBhM,QAAS,kBAAM9I,KAHjB,mCC5GK,OAA0B,qCCanC+F,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJgP,gBAAgB,OAAD,OAASC,GAAT,KACfC,iBAAkB,YAClBC,eAAgB,QAChBC,mBAAoB,SACpB5G,OAAQ,QAEV6G,YAAa,CACXlP,gBAAiB,qBACjB6D,SAAU,WACViB,IAAK,EACLqK,KAAM,EACNjO,MAAO,OACPmH,OAAQ,OACRvH,MAAO,QAETyK,MAAO,CACLzK,MAAO,OACP8E,WAAY,SAEdyB,UAAW,CACThH,QAAS,OACTyF,cAAe,SACfxF,WAAY,UAEd8O,QAAS,CACPxJ,WAAY,OACZvF,QAAS,OACTyF,cAAe,MACfxF,WAAY,SACZE,eAAgB,gBAChB,QAAS,CACPC,OAAQ,iBCsCC4O,GA9DW,WAIxB,IAAMhO,EAAU3B,KAKRpC,EAAoB8B,IAAiB,SAACjC,GAAD,OAAWA,EAAMoB,QAAtDjB,gBAKF3C,EAAU2H,cAKVR,EAAU,SAACC,GACfpH,EAAQE,KAAKkH,IAYf,OAAIzE,EACK,eAAC,IAAD,CAAUmC,GAAG,eAIpB,sBAAKkE,UAAWtC,EAAQxB,KAAxB,SACE,sBAAK8D,UAAWtC,EAAQ6N,YAAxB,SACE,gBAACrI,GAAA,EAAD,CAAWE,SAAS,KAAKpD,UAAWtC,EAAQgG,UAA5C,UACE,eAAClD,GAAA,EAAD,CAAYC,QAAQ,KAAK4E,cAAY,EAACrF,UAAWtC,EAAQkK,MAAzD,SACG,wBAEH,eAACpH,GAAA,EAAD,CAAYC,QAAQ,KAAK4E,cAAY,EAArC,SAEI,4FAGJ,uBAAKrF,UAAWtC,EAAQ+N,QAAxB,UACE,eAAC5M,GAAA,EAAD,CAAQ4B,QAAQ,YAAYtD,MAAM,UAAU2B,QAtBjC,kBAAMX,EAAQ,cAsBzB,SACG,YAEH,eAACU,GAAA,EAAD,CAAQ4B,QAAQ,YAAY3B,QA1BpB,kBAAMX,EAAQ,WA0BtB,SACG,uBClETpC,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CnC,OAAQ,CACNyD,MAAO,OACPmH,OAAQ,QAEVzH,MAAO,CACLZ,gBAAiB,YACjBc,MAAO,OACPoF,UAAW,OACXN,WAAY,OACZ8D,YAAa,OACbxB,cAAe,OACfM,aAAc,QAEhB8G,QAAS,CACPjP,QAAS,OACTG,eAAgB,WAChBoF,WAAY,QAEd2J,WAAY,CACVvP,gBAAiB,OACjBc,MAAO,UACP,UAAW,CACTd,gBAAiB,UACjBc,MAAO,aCgEE0O,GAnEY,WAIzB,IAAMnO,EAAU3B,KAKR1D,EAAY+C,KAAZ/C,QAKAwB,EAAS4B,IAAiB,SAACjC,GAAD,OAAWA,EAAMoB,QAA3Cf,KAKR,EAAwBoE,mBAAS,IAAjC,oBAAO6N,EAAP,KAAaC,EAAb,KAWA,OACE,eAAC9G,GAAA,EAAD,CAAOC,UAAW,EAAGlF,UAAWtC,EAAQT,MAAxC,SACE,gBAACwG,GAAA,EAAD,CAAMC,WAAS,EAACxB,QAAS,EAAzB,UACE,eAACuB,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,EAAf,SACE,eAAC7B,GAAA,EAAD,CAAQ8B,IAAKvL,EAAKC,OAAQkG,UAAWtC,EAAQ5D,WAE/C,eAAC2J,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIuB,GAAI,GAAvB,SACE,wBAAM5B,SAbO,SAACR,GACpBA,EAAES,iBACFnL,EAAQ,CAAEyT,SACVC,EAAQ,KAUF,UACE,eAAClI,GAAA,EAAD,CACEjM,GAAG,OACH9C,KAAK,OACLiP,MAAM,oBACNd,MAAO6I,EACP9H,WAAS,EACTgI,WAAS,EACTC,QAAS,GACTnJ,SAAU,SAACC,GAAD,OAAOgJ,EAAQhJ,EAAEC,OAAOC,UAEpC,eAACQ,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,GAAInF,UAAWtC,EAAQiO,QAAtC,SACE,gBAAC9M,GAAA,EAAD,CACExL,KAAK,SACL6Y,UAAWJ,EACXrL,QAAQ,WACRwC,MAAM,cACNjD,UAAWtC,EAAQkO,WALrB,iBAQE,eAAC,KAAD,CAAiB7M,KAAMoN,uB,UC9EjCpQ,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CgB,MAAO,CACLZ,gBAAiB,OACjBc,MAAO,UACPoF,UAAW,OACXN,WAAY,OACZ8D,YAAa,OACbxB,cAAe,OACfM,aAAc,QAEhB/K,OAAQ,CACNyD,MAAO,OACPmH,OAAQ,QAEV7K,KAAM,CACJ,MAAO,CACL6I,eAAgB,OAChBvF,MAAO,YAGXiP,UAAW,CACT,4CAA6C,CAC3CjL,IAAK,SACLkL,MAAO,YAGX7H,KAAM,CACJ9H,QAAS,OACTC,WAAY,SACZE,eAAgB,UAElByP,eAAgB,CACdrK,WAAY,OACZ,WAAY,CACV3F,YAAa,WAGjB/D,WAAY,CACV8D,gBAAiB,OACjBc,MAAO,MACP,UAAW,CACTd,gBAAiB,MACjBc,MAAO,SAGXoP,SAAU,CACRlQ,gBAAiB,OACjBc,MAAO,UACP,UAAW,CACTd,gBAAiB,YACjBc,MAAO,SAGXqP,UAAW,CACTnQ,gBAAiB,UACjBc,MAAO,QAETsP,WAAY,CACVtP,MAAO,UACP6D,QAAS,cACT,UAAW,CACT3E,gBAAiB,UACjBc,MAAO,QAET,MAAO,CACLuF,eAAgB,OAChBvF,MAAO,YAGXuP,YAAa,CACX3P,SAAU,QAEZ4P,QAAS,CACP1K,WAAY,YCqED2K,GAnG2B,SAAChR,GACzC,IAAQvG,EAAsBuG,EAAtBvG,KAAMwX,EAAgBjR,EAAhBiR,YAKRnP,EAAU3B,KAKhB,EAA4CX,KAApCrC,EAAR,EAAQA,QAASI,EAAjB,EAAiBA,WAAYZ,EAA7B,EAA6BA,WAK7B,EAA0BkD,IAAiB,SAACjC,GAAD,OAAWA,EAAMoB,QAApDhB,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAUjB,OACE,eAACoL,GAAA,EAAD,CAAOC,UAAW,EAAGlF,UAAWtC,EAAQT,MAAxC,SACE,gBAACwG,GAAA,EAAD,CAAMC,WAAS,EAACxB,QAAS,EAAzB,UACE,eAACuB,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,EAAGnF,UAAWtC,EAAQ8G,KAArC,SACE,eAACzE,GAAA,EAAD,CAAKC,UAAWtC,EAAQ7D,KAAxB,SACE,gBAAC,IAAD,CAAMiC,GAAE,mBAAczG,EAAKwE,MAA3B,UACE,eAACyJ,GAAA,EAAD,CAAQ8B,IAAK/P,EAAKyE,OAAQkG,UAAWtC,EAAQ5D,SAC7C,eAAC0G,GAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BpL,EAAKP,cAIrC,gBAAC2O,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,EAAf,UACE,gBAACpF,GAAA,EAAD,WACE,eAACS,GAAA,EAAD,CAAYC,QAAQ,YAAY4E,cAAY,EAA5C,SACGhQ,EAAKyW,OAER,gBAACtL,GAAA,EAAD,CAAYC,QAAQ,YAAYtD,MAAM,cAAckI,cAAY,EAAhE,uBACaoC,aAAOC,aAASrS,EAAK0E,MAAO,oBAG1C8S,GACC,gBAAC9M,GAAA,EAAD,CAAKC,UAAWtC,EAAQ4O,eAAxB,UACE,eAACzN,GAAA,EAAD,CACE4B,QAAQ,WACRT,UAAW+B,aACTrE,EAAQ6O,WACNlX,EAAK6D,MAAMoB,MAAK,SAACwS,GAAD,OAAUA,EAAKjT,OAASA,EAAKjC,OAC7C8F,EAAQ8O,WAEZ1N,QArCS,WACjBzJ,EAAK6D,MAAMoB,MAAK,SAACwS,GAAD,OAAUA,EAAKjT,OAASA,EAAKjC,MAC/CuB,EAAW9D,EAAKuC,IAEhBmB,EAAQ1D,EAAKuC,KA0BL,SASE,eAAC,KAAD,CAAiBmH,KAAMgO,SAEzB,eAACC,GAAA,EAAD,CACEC,aAAc5X,EAAKkF,SAAS4L,OAC5B+G,IAAK,GACL/P,MAAM,UACN6C,UAAWtC,EAAQ0O,UAJrB,SAME,eAAC,IAAD,CAAMtQ,GAAE,iBAAYzG,EAAKuC,IAAzB,SACE,eAACiH,GAAA,EAAD,CAAQ4B,QAAQ,WAAWT,UAAWtC,EAAQ+O,WAA9C,SACE,eAAC,KAAD,CACEzM,UAAWtC,EAAQgP,YACnB3N,KAAMoO,gBAOjB9X,EAAK6D,MAAMiN,OAAS,GACnB,gBAAC3F,GAAA,EAAD,CAAYC,QAAQ,YAAYT,UAAWtC,EAAQiP,QAAnD,2BACiBtX,EAAK6D,MAAMiN,OAAQ,IACjC9Q,EAAK6D,MAAMiN,OAAS,EAAI,SAAW,eAI1C,eAAC1C,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,EAAf,UACIvL,GAAWvE,EAAKwE,OAASA,EAAKjC,IAC9B,eAACiH,GAAA,EAAD,CACE4B,QAAQ,WACRT,UAAWtC,EAAQnF,WACnBuG,QAAS,kBAAMvG,EAAWlD,EAAKuC,KAHjC,SAKE,eAAC,KAAD,CAAiBmH,KAAMqO,iBCrI/BrR,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CyH,UAAW,CACTnB,UAAW,OACXmC,OAAQ,SAEVmB,UAAW,CACTtD,UAAW,OACX,QAAS,CACPjG,YAAa,UACba,MAAO,gBCoDEkQ,GA1CS,WAItB,IAAM3P,EAAU3B,KAKRjE,EAAasD,KAAbtD,SAKR,EAA2B2D,IAAiB,SAACjC,GAAD,OAAWA,EAAMnE,QAArD8E,EAAR,EAAQA,MAAOP,EAAf,EAAeA,QAMf,OAJAqM,qBAAU,WACRnO,MACC,CAACA,IAEG8B,EACL,eAAC,GAAD,IAEA,gBAACsJ,GAAA,EAAD,CAAWE,SAAS,KAAKpD,UAAWtC,EAAQgG,UAA5C,UACE,eAAClD,GAAA,EAAD,CAAYC,QAAQ,KAAKtD,MAAM,UAA/B,mBAGA,eAACqD,GAAA,EAAD,CACEC,QAAQ,KACRtD,MAAM,cACN6C,UAAWtC,EAAQmI,UAHrB,sCAOA,eAAC,GAAD,IACC1L,EAAM5E,KAAI,SAACF,GAAD,OACT,eAAC,GAAD,CAAwBA,KAAMA,EAAMwX,aAAa,GAAlCxX,EAAKuC,WCvDtBmE,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CgB,MAAO,CACLZ,gBAAiB,YACjBc,MAAO,OACPoF,UAAW,OACXN,WAAY,OACZ8D,YAAa,OACbxB,cAAe,OACfM,aAAc,QAEhB8G,QAAS,CACPjP,QAAS,OACTG,eAAgB,WAChBoF,WAAY,QAEd2J,WAAY,CACVvP,gBAAiB,OACjBc,MAAO,UACP,UAAW,CACTd,gBAAiB,UACjBc,MAAO,SAGXrD,OAAQ,CACNyD,MAAO,OACPmH,OAAQ,YCmEG4I,GAjEiC,SAAC1R,GAC/C,IAAQvG,EAASuG,EAATvG,KAKFqI,EAAU3B,KAKRtD,EAAe2C,KAAf3C,WAKAoB,EAAS4B,IAAiB,SAACjC,GAAD,OAAWA,EAAMoB,QAA3Cf,KAKR,EAAwBoE,mBAAS,IAAjC,oBAAO6N,EAAP,KAAaC,EAAb,KAQA,OACE,eAAC9G,GAAA,EAAD,CAAOC,UAAW,EAAGlF,UAAWtC,EAAQT,MAAxC,SACE,gBAACwG,GAAA,EAAD,CAAMC,WAAS,EAACxB,QAAS,EAAzB,UACE,eAACuB,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,EAAf,SACE,eAAC7B,GAAA,EAAD,CAAQ8B,IAAKvL,EAAKC,OAAQkG,UAAWtC,EAAQ5D,WAE/C,eAAC2J,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIuB,GAAI,GAAvB,SACE,wBAAM5B,SAbO,SAACR,GACpBA,EAAES,iBACF/K,EAAWpD,EAAKuC,GAAI,CAAEkU,SACtBC,EAAQ,KAUF,UACE,eAAClI,GAAA,EAAD,CACEjM,GAAG,OACH9C,KAAK,OACLiP,MAAM,kBACNd,MAAO6I,EACP9H,WAAS,EACTgI,WAAS,EACTC,QAAS,GACTnJ,SAAU,SAACC,GAAD,OAAOgJ,EAAQhJ,EAAEC,OAAOC,UAEpC,eAACQ,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,GAAInF,UAAWtC,EAAQiO,QAAtC,SACE,eAAC9M,GAAA,EAAD,CACExL,KAAK,SACL6Y,UAAWJ,EACXrL,QAAQ,WACRwC,MAAM,cACNjD,UAAWtC,EAAQkO,WALrB,kCC3ER7P,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CnC,OAAQ,CACNyD,MAAO,OACPmH,OAAQ,QAEV6I,SAAU,CACR7Q,QAAS,OACTyF,cAAe,SACfxF,WAAY,SACZE,eAAgB,UAElBI,MAAO,CACLZ,gBAAiB,YACjBc,MAAO,OACPoF,UAAW,OACXN,WAAY,OACZ8D,YAAa,OACbxB,cAAe,OACfM,aAAc,QAEhB2I,WAAY,CACVnR,gBAAiB,OACjBc,MAAO,MACP,UAAW,CACTd,gBAAiB,MACjBc,MAAO,aC6DEsQ,GAjDiC,SAAC7R,GAC/C,IAAQvG,EAAkBuG,EAAlBvG,KAAMqY,EAAY9R,EAAZ8R,QAKRhQ,EAAU3B,KAKhB,EAA0BN,IAAiB,SAACjC,GAAD,OAAWA,EAAMoB,QAApDf,EAAR,EAAQA,KAAMD,EAAd,EAAcA,QAKNhB,EAAkBwC,KAAlBxC,cAER,OACE,eAACqM,GAAA,EAAD,CAAOC,UAAW,EAAGlF,UAAWtC,EAAQT,MAAxC,SACE,gBAACwG,GAAA,EAAD,CAAMC,WAAS,EAACxB,QAAS,EAAzB,UACE,gBAACuB,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,EAAGnF,UAAWtC,EAAQ6P,SAArC,UACE,eAACjK,GAAA,EAAD,CAAQ8B,IAAKsI,EAAQ5T,OAAQkG,UAAWtC,EAAQ5D,SAChD,eAAC0G,GAAA,EAAD,CAAYC,QAAQ,YAApB,SAAiCiN,EAAQ5Y,UAE3C,gBAAC2O,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,EAAf,UACE,eAAC3E,GAAA,EAAD,CAAYC,QAAQ,YAAY4E,cAAY,EAA5C,SACGqI,EAAQ5B,OAEX,gBAACtL,GAAA,EAAD,CAAYC,QAAQ,YAAYtD,MAAM,cAAtC,uBACasK,aAAOC,aAASgG,EAAQ3T,MAAO,oBAG9C,eAAC0J,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,EAAf,UACIvL,GAAWC,EAAKjC,KAAO8V,EAAQ7T,MAC/B,eAACgF,GAAA,EAAD,CACE4B,QAAQ,WACRT,UAAWtC,EAAQ8P,WACnB1O,QAAS,kBAAMlG,EAAcvD,EAAKuC,GAAI8V,EAAQ9V,KAHhD,SAKE,eAAC,KAAD,CAAiBmH,KAAMqO,iBC7E/BrR,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CyH,UAAW,CACTnB,UAAW,OACXmC,OAAQ,SAEVzH,MAAO,CACLZ,gBAAiB,OACjBc,MAAO,UACPoF,UAAW,OACXN,WAAY,OACZ8D,YAAa,OACbxB,cAAe,OACfM,aAAc,QAEhB8I,WAAY,CACVtR,gBAAiB,OACjB,MAAO,CACLqG,eAAgB,OAChBvF,MAAO,WAETA,MAAO,UACP,UAAW,CACTd,gBAAiB,UACjBc,MAAO,aCuDEyQ,GAhDQ,WACrB,IAAQhW,EAAOsR,cAAPtR,GAKF8F,EAAU3B,KAKR9D,EAAgBmD,KAAhBnD,YAKR,EAA0BwD,IAAiB,SAACjC,GAAD,OAAWA,EAAMnE,QAApDA,EAAR,EAAQA,KAAMuE,EAAd,EAAcA,QAMd,OAJAqM,qBAAU,WACRhO,EAAYL,KACX,CAACK,EAAaL,IAEVgC,GAAoB,OAATvE,EAChB,eAAC,GAAD,IAEA,eAAC6N,GAAA,EAAD,CAAWE,SAAS,KAAKpD,UAAWtC,EAAQgG,UAA5C,SACE,gBAACD,GAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACD,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,GAAf,SACE,eAACtG,GAAA,EAAD,CAAQ4B,QAAQ,WAAWT,UAAWtC,EAAQiQ,WAA9C,SACE,eAAC,IAAD,CAAM7R,GAAG,SAAT,+BAGJ,gBAAC2H,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,GAAf,UACE,eAAC,GAAD,CAAU9P,KAAMA,EAAMwX,aAAa,IACnC,eAAC,GAAD,CAAaxX,KAAMA,IAClBA,EAAKkF,SAAS4L,OAAS,GACtB,eAAClB,GAAA,EAAD,CAAOC,UAAW,EAAGlF,UAAWtC,EAAQT,MAAxC,SACG5H,EAAKkF,SAAShF,KAAI,SAACiF,EAAMmL,GAAP,OACjB,eAAC,GAAD,CAAyB+H,QAASlT,EAAMnF,KAAMA,GAA5BsQ,iB,UCpE5B5J,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CyH,UAAW,CACTnB,UAAW,OACX7F,QAAS,OACTyF,cAAe,UAEjByI,SAAU,CACRtO,YAAa,SACba,MAAO,WAET0Q,iBAAkB,CAChBtL,UAAW,OACXyE,aAAc,SACd3K,gBAAiB,OACjBc,MAAO,UACP,UAAW,CACTd,gBAAiB,UACjBc,MAAO,SAGX2Q,WAAY,CACV7L,WAAY,OACZsC,cAAe,OACf,WAAY,CACVjI,YAAa,SAGjByR,UAAW,CACT,MAAO,CACLrL,eAAgB,OAChBvF,MAAO,WAETA,MAAO,UACP,UAAW,CACTd,gBAAiB,UACjBc,MAAO,SAGX4N,iBAAkB,CAChB5N,MAAO,UACP,UAAW,CACTd,gBAAiB,UACjBc,MAAO,SAGX6Q,YAAa,CACX7Q,MAAO,WAET8Q,aAAc,CACZ9Q,MAAO,WAET+Q,aAAc,CACZ/Q,MAAO,WAETgR,YAAa,CACXhR,MAAO,WAETiR,cAAe,CACbjR,MAAO,WAETkR,YAAa,CACX3R,QAAS,OACT,QAAS,CACP6F,UAAW,SACXjG,YAAa,SAGjBgG,KAAM,CACJ5F,QAAS,OACTyF,cAAe,SACf,uBAAwB,CACtBrF,OAAQ,SACRS,MAAO,aCwRE+Q,GA1TqC,SAAC1S,GACnD,IAAQ5E,EAAY4E,EAAZ5E,QAKF0G,EAAU3B,KAKRjF,EAAkBsE,KAAlBtE,cAKR,EAAgCmH,mBAAS,CACvCsH,QAAS,GACTgB,QAAS,GACTf,SAAU,GACVF,OAAQ,GACRV,OAAQ,GACR2E,eAAgB,GAChBtC,IAAK,GACLN,QAAS,GACTE,SAAU,GACVC,SAAU,GACVC,QAAS,GACTH,UAAW,KAZb,oBAAO7P,EAAP,KAAiB8L,EAAjB,KAkBA,EAAkD5E,oBAAS,GAA3D,oBAAOsQ,EAAP,KAA4BC,EAA5B,KAMEjJ,EAYExO,EAZFwO,QACAgB,EAWExP,EAXFwP,QACAf,EAUEzO,EAVFyO,SACAF,EASEvO,EATFuO,OACAV,EAQE7N,EARF6N,OACA2E,EAOExS,EAPFwS,eACAtC,EAMElQ,EANFkQ,IACAN,EAKE5P,EALF4P,QACAE,EAIE9P,EAJF8P,SACAC,EAGE/P,EAHF+P,SACAC,EAEEhQ,EAFFgQ,QACAH,EACE7P,EADF6P,UA6CI9D,EAAW,SAACC,GAAD,OACfF,EAAY,2BAAK9L,GAAN,mBAAiBgM,EAAEC,OAAOlO,KAAOiO,EAAEC,OAAOC,UAOvD,OACE,eAACC,GAAA,EAAD,CAAWE,SAAS,KAAKpD,UAAWtC,EAAQgG,UAA5C,SACE,gBAACD,GAAA,EAAD,CAAMC,WAAS,EAAC1D,UAAWtC,EAAQgG,UAAnC,UACE,gBAACD,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,GAAf,UACE,eAAC3E,GAAA,EAAD,CAAYC,QAAQ,KAAKtD,MAAM,UAAUkI,cAAY,EAArD,iCAGA,gBAAC7E,GAAA,EAAD,CAAYC,QAAQ,KAAKtD,MAAM,cAAckI,cAAY,EAAzD,UACE,eAAC,KAAD,CAAiBtG,KAAMkM,KAAQjL,UAAWtC,EAAQkN,WADpD,+DAIA,eAACpK,GAAA,EAAD,CAAY6E,cAAY,EAAxB,mCAEF,eAAC5B,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,GAAf,SACE,wBAAMnF,UAAWtC,EAAQ4E,KAAMiB,SAAU,SAACR,GAAD,OAnBhC,SAACA,GAChBA,EAAES,iBACF1M,EAAcC,EAAUC,GAiB8BuM,CAASR,IAAzD,UACE,eAACc,GAAA,EAAD,CACEjM,GAAG,gBACH6W,QAAM,EACN1K,MAAM,+BACNd,MAAOqC,EACPtB,WAAS,EACTlP,KAAK,SACLgO,SAAUA,EACV4L,WAAW,qDARb,SA9DO,CACf,CACEzL,MAAO,GACPc,MAAO,gCAET,CACEd,MAAO,YACPc,MAAO,aAET,CACEd,MAAO,mBACPc,MAAO,oBAET,CACEd,MAAO,mBACPc,MAAO,oBAET,CACEd,MAAO,UACPc,MAAO,WAET,CACEd,MAAO,sBACPc,MAAO,uBAET,CACEd,MAAO,aACPc,MAAO,yBAET,CACEd,MAAO,SACPc,MAAO,UAET,CACEd,MAAO,QACPc,MAAO,UAqCWxO,KAAI,SAACoZ,GAAD,OACZ,eAACC,GAAA,EAAD,CAA6B3L,MAAO0L,EAAO1L,MAA3C,SACG0L,EAAO5K,OADK4K,EAAO1L,YAK1B,eAACY,GAAA,EAAD,CACEjM,GAAG,UACHmM,MAAM,UACN1Q,KAAK,OACLyB,KAAK,UACLmO,MAAOsC,EACPvB,WAAS,EACT0K,WAAW,gDACX5L,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,eAACc,GAAA,EAAD,CACEjM,GAAG,UACHmM,MAAM,UACN1Q,KAAK,OACLyB,KAAK,UACLmO,MAAOsD,EACPvC,WAAS,EACT0K,WAAW,yCACX5L,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,eAACc,GAAA,EAAD,CACEjM,GAAG,WACHmM,MAAM,WACN1Q,KAAK,OACLyB,KAAK,WACLmO,MAAOuC,EACPxB,WAAS,EACT0K,WAAW,0CACX5L,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,eAACc,GAAA,EAAD,CACEjM,GAAG,SACHmM,MAAM,WACN1Q,KAAK,OACLyB,KAAK,SACLmO,MAAO2B,EACPZ,WAAS,EACT0K,WAAW,kEACX5L,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,eAACc,GAAA,EAAD,CACEjM,GAAG,iBACHmM,MAAM,kBACN1Q,KAAK,OACLyB,KAAK,iBACLmO,MAAOsG,EACPvF,WAAS,EACT0K,WAAW,yEACX5L,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,eAACc,GAAA,EAAD,CACEjM,GAAG,MACHmM,MAAM,0BACN1Q,KAAK,OACLyB,KAAK,MACLmO,MAAOgE,EACPjD,WAAS,EACT0K,WAAW,kCACX1C,WAAS,EACT6C,KAAM,EACN/L,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,gBAAChD,GAAA,EAAD,WACE,eAAClB,GAAA,EAAD,CACExL,KAAK,SACLoN,QAAQ,WACRT,UAAWtC,EAAQmQ,iBACnB/O,QAAS,kBAAM0P,GAAoBD,IAJrC,sCAQA,eAAC/N,GAAA,EAAD,4BAGD+N,GACC,gBAAC,WAAD,WACE,gBAACxO,GAAA,EAAD,CAAKC,UAAWtC,EAAQ2Q,YAAxB,UACE,eAAC,KAAD,CACEtP,KAAM+P,KACNC,KAAK,KACL/O,UAAWtC,EAAQsQ,cAErB,eAACnK,GAAA,EAAD,CACEjM,GAAG,UACHmM,MAAM,cACN1Q,KAAK,OACLyB,KAAK,UACLmO,MAAO0D,EACP3C,WAAS,EACTlB,SAAU,SAACC,GAAD,OAAOD,EAASC,SAG9B,gBAAChD,GAAA,EAAD,CAAKC,UAAWtC,EAAQ2Q,YAAxB,UACE,eAAC,KAAD,CACEtP,KAAMiQ,KACND,KAAK,KACL/O,UAAWtC,EAAQuQ,eAErB,eAACpK,GAAA,EAAD,CACEjM,GAAG,WACHmM,MAAM,eACN1Q,KAAK,OACLyB,KAAK,WACLmO,MAAO4D,EACP7C,WAAS,EACTlB,SAAU,SAACC,GAAD,OAAOD,EAASC,SAG9B,gBAAChD,GAAA,EAAD,CAAKC,UAAWtC,EAAQ2Q,YAAxB,UACE,eAAC,KAAD,CACEtP,KAAMkQ,KACNF,KAAK,KACL/O,UAAWtC,EAAQwQ,eAErB,eAACrK,GAAA,EAAD,CACEjM,GAAG,WACHmM,MAAM,aACN1Q,KAAK,OACLyB,KAAK,WACLmO,MAAO6D,EACP9C,WAAS,EACTlB,SAAU,SAACC,GAAD,OAAOD,EAASC,SAG9B,gBAAChD,GAAA,EAAD,CAAKC,UAAWtC,EAAQ2Q,YAAxB,UACE,eAAC,KAAD,CACEtP,KAAMmQ,KACNH,KAAK,KACL/O,UAAWtC,EAAQyQ,cAErB,eAACtK,GAAA,EAAD,CACEjM,GAAG,UACHmM,MAAM,cACN1Q,KAAK,OACLyB,KAAK,UACLmO,MAAO8D,EACP/C,WAAS,EACTlB,SAAU,SAACC,GAAD,OAAOD,EAASC,SAG9B,gBAAChD,GAAA,EAAD,CAAKC,UAAWtC,EAAQ2Q,YAAxB,UACE,eAAC,KAAD,CACEtP,KAAMoQ,KACNJ,KAAK,KACL/O,UAAWtC,EAAQ0Q,gBAErB,eAACvK,GAAA,EAAD,CACEjM,GAAG,YACHmM,MAAM,gBACN1Q,KAAK,OACLyB,KAAK,YACLmO,MAAO2D,EACP5C,WAAS,EACTlB,SAAU,SAACC,GAAD,OAAOD,EAASC,YAKlC,gBAAChD,GAAA,EAAD,CAAKC,UAAWtC,EAAQoQ,WAAxB,UACE,eAACjP,GAAA,EAAD,CACExL,KAAK,SACLoN,QAAQ,WACRtD,MAAM,UACN8F,MAAM,iBACNjD,UAAWtC,EAAQqN,iBALrB,4BASA,eAAClM,GAAA,EAAD,CAAQ4B,QAAQ,WAAWT,UAAWtC,EAAQqQ,UAA9C,SACE,eAAC,IAAD,CAAMjS,GAAG,aAAT,qCCtVVC,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CyH,UAAW,CACTnB,UAAW,OACX7F,QAAS,OACTyF,cAAe,UAEjByI,SAAU,CACRtO,YAAa,SACba,MAAO,WAET0Q,iBAAkB,CAChBtL,UAAW,OACXyE,aAAc,SACd3K,gBAAiB,OACjBc,MAAO,UACP,UAAW,CACTd,gBAAiB,UACjBc,MAAO,SAGX2Q,WAAY,CACV7L,WAAY,OACZsC,cAAe,OACf,WAAY,CACVjI,YAAa,SAGjByR,UAAW,CACT,MAAO,CACLrL,eAAgB,OAChBvF,MAAO,WAETA,MAAO,UACP,UAAW,CACTd,gBAAiB,UACjBc,MAAO,SAGX4N,iBAAkB,CAChB5N,MAAO,UACP,UAAW,CACTd,gBAAiB,UACjBc,MAAO,SAGX6Q,YAAa,CACX7Q,MAAO,WAET8Q,aAAc,CACZ9Q,MAAO,WAET+Q,aAAc,CACZ/Q,MAAO,WAETgR,YAAa,CACXhR,MAAO,WAETiR,cAAe,CACbjR,MAAO,WAETkR,YAAa,CACX3R,QAAS,OACT,QAAS,CACP6F,UAAW,SACXjG,YAAa,SAGjBgG,KAAM,CACJ5F,QAAS,OACTyF,cAAe,SACf,uBAAwB,CACtBrF,OAAQ,SACRS,MAAO,aC6SE6R,GA/UiC,SAACxT,GAC/C,IAAQ5E,EAAY4E,EAAZ5E,QAKF0G,EAAU3B,KAKhB,EAA6CX,KAArCtE,EAAR,EAAQA,cAAeR,EAAvB,EAAuBA,kBAKvB,EAA6BmF,IAAiB,SAACjC,GAAD,OAAWA,EAAMQ,WAAvDA,EAAR,EAAQA,QAASJ,EAAjB,EAAiBA,QAKjB,EAAgCqE,mBAAS,CACvCsH,QAAS,GACTgB,QAAS,GACTf,SAAU,GACVF,OAAQ,GACRV,OAAQ,GACR2E,eAAgB,GAChBtC,IAAK,GACLN,QAAS,GACTE,SAAU,GACVC,SAAU,GACVC,QAAS,GACTH,UAAW,KAZb,oBAAO7P,EAAP,KAAiB8L,EAAjB,KAmBE0C,EAYExO,EAZFwO,QACAgB,EAWExP,EAXFwP,QACAf,EAUEzO,EAVFyO,SACAF,EASEvO,EATFuO,OACAV,EAQE7N,EARF6N,OACA2E,EAOExS,EAPFwS,eACAtC,EAMElQ,EANFkQ,IACAN,EAKE5P,EALF4P,QACAE,EAIE9P,EAJF8P,SACAC,EAGE/P,EAHF+P,SACAC,EAEEhQ,EAFFgQ,QACAH,EACE7P,EADF6P,UA4CF,EAAkD3I,oBAAS,GAA3D,oBAAOsQ,EAAP,KAA4BC,EAA5B,KAEAvI,qBAAU,WACR3P,IAEAuM,EAAY,CACV0C,QAAS3L,KAAW,OAACI,QAAD,IAACA,OAAD,EAACA,EAASuL,SAAU,GAAKvL,EAAQuL,QACrDgB,QAAS3M,KAAW,OAACI,QAAD,IAACA,OAAD,EAACA,EAASuM,SAAU,GAAKvM,EAAQuM,QACrDf,SAAU5L,KAAW,OAACI,QAAD,IAACA,OAAD,EAACA,EAASwL,UAAW,GAAKxL,EAAQwL,SACvDF,OAAQ1L,KAAW,OAACI,QAAD,IAACA,OAAD,EAACA,EAASsL,QAAS,GAAKtL,EAAQsL,OACnDV,OAAQhL,KAAW,OAACI,QAAD,IAACA,OAAD,EAACA,EAAS4K,QAAS,GAAK5K,EAAQ4K,OAAOyK,KAAK,KAC/D9F,eACE3P,KAAW,OAACI,QAAD,IAACA,OAAD,EAACA,EAASuP,gBAAiB,GAAKvP,EAAQuP,eACrDtC,IAAKrN,KAAW,OAACI,QAAD,IAACA,OAAD,EAACA,EAASiN,KAAM,GAAKjN,EAAQiN,IAC7CN,QAAS/M,KAAW,OAACI,QAAD,IAACA,OAAD,EAACA,EAAS0M,QAAS,GAAK1M,EAAQ0M,OAAOC,QAC3DE,SAAUjN,KAAW,OAACI,QAAD,IAACA,OAAD,EAACA,EAAS0M,QAAS,GAAK1M,EAAQ0M,OAAOG,SAC5DC,SAAUlN,KAAW,OAACI,QAAD,IAACA,OAAD,EAACA,EAAS0M,QAAS,GAAK1M,EAAQ0M,OAAOI,SAC5DC,QAASnN,KAAW,OAACI,QAAD,IAACA,OAAD,EAACA,EAAS0M,QAAS,GAAK1M,EAAQ0M,OAAOK,QAC3DH,UAAWhN,KAAW,OAACI,QAAD,IAACA,OAAD,EAACA,EAAS0M,QAAS,GAAK1M,EAAQ0M,OAAOE,cAG9D,CAAChN,EAAStD,IAEb,IAAMwM,EAAW,SAACC,GAAD,OACfF,EAAY,2BAAK9L,GAAN,mBAAiBgM,EAAEC,OAAOlO,KAAOiO,EAAEC,OAAOC,UAOvD,OACE,eAACC,GAAA,EAAD,CAAWE,SAAS,KAAKpD,UAAWtC,EAAQgG,UAA5C,SACE,gBAACD,GAAA,EAAD,CAAMC,WAAS,EAAC1D,UAAWtC,EAAQgG,UAAnC,UACE,gBAACD,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,GAAf,UACE,eAAC3E,GAAA,EAAD,CAAYC,QAAQ,KAAKtD,MAAM,UAAUkI,cAAY,EAArD,iCAGA,gBAAC7E,GAAA,EAAD,CAAYC,QAAQ,KAAKtD,MAAM,cAAckI,cAAY,EAAzD,UACE,eAAC,KAAD,CAAiBtG,KAAMkM,KAAQjL,UAAWtC,EAAQkN,WADpD,+DAIA,eAACpK,GAAA,EAAD,CAAY6E,cAAY,EAAxB,mCAEF,eAAC5B,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,GAAf,SACE,wBAAMnF,UAAWtC,EAAQ4E,KAAMiB,SAAU,SAACR,GAAD,OAnBhC,SAACA,GAChBA,EAAES,iBACF1M,EAAcC,EAAUC,GAAS,GAiBqBuM,CAASR,IAAzD,UACE,eAACc,GAAA,EAAD,CACEjM,GAAG,gBACH6W,QAAM,EACN1K,MAAM,+BACNd,MAAOqC,EACPtB,WAAS,EACTlB,SAAUA,EACV4L,WAAW,qDAPb,SApFO,CACf,CACEzL,MAAO,YACPc,MAAO,aAET,CACEd,MAAO,mBACPc,MAAO,oBAET,CACEd,MAAO,mBACPc,MAAO,oBAET,CACEd,MAAO,UACPc,MAAO,WAET,CACEd,MAAO,sBACPc,MAAO,uBAET,CACEd,MAAO,aACPc,MAAO,yBAET,CACEd,MAAO,SACPc,MAAO,UAET,CACEd,MAAO,QACPc,MAAO,UA8DWxO,KAAI,SAACoZ,GAAD,OACZ,eAACC,GAAA,EAAD,CAA6B3L,MAAO0L,EAAO1L,MAA3C,SACG0L,EAAO5K,OADK4K,EAAO1L,YAK1B,eAACY,GAAA,EAAD,CACEjM,GAAG,UACHmM,MAAM,UACN1Q,KAAK,OACLyB,KAAK,UACLmO,MAAOsC,EACPvB,WAAS,EACT0K,WAAW,gDACX5L,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,eAACc,GAAA,EAAD,CACEjM,GAAG,UACHmM,MAAM,UACN1Q,KAAK,OACLyB,KAAK,UACLmO,MAAOsD,EACPvC,WAAS,EACT0K,WAAW,yCACX5L,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,eAACc,GAAA,EAAD,CACEjM,GAAG,WACHmM,MAAM,WACN1Q,KAAK,OACLyB,KAAK,WACLmO,MAAOuC,EACPxB,WAAS,EACT0K,WAAW,0CACX5L,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,eAACc,GAAA,EAAD,CACEjM,GAAG,SACHmM,MAAM,WACN1Q,KAAK,OACLyB,KAAK,SACLmO,MAAO2B,EACPZ,WAAS,EACT0K,WAAW,kEACX5L,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,eAACc,GAAA,EAAD,CACEjM,GAAG,iBACHmM,MAAM,kBACN1Q,KAAK,OACLyB,KAAK,iBACLmO,MAAOsG,EACPvF,WAAS,EACT0K,WAAW,yEACX5L,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,eAACc,GAAA,EAAD,CACEjM,GAAG,MACHmM,MAAM,0BACN1Q,KAAK,OACLyB,KAAK,MACLmO,MAAOgE,EACPjD,WAAS,EACT0K,WAAW,kCACX1C,WAAS,EACT6C,KAAM,EACN/L,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,gBAAChD,GAAA,EAAD,WACE,eAAClB,GAAA,EAAD,CACExL,KAAK,SACLoN,QAAQ,WACRT,UAAWtC,EAAQmQ,iBACnB/O,QAAS,kBAAM0P,GAAoBD,IAJrC,sCAQA,eAAC/N,GAAA,EAAD,4BAGD+N,GACC,gBAAC,WAAD,WACE,gBAACxO,GAAA,EAAD,CAAKC,UAAWtC,EAAQ2Q,YAAxB,UACE,eAAC,KAAD,CACEtP,KAAM+P,KACNC,KAAK,KACL/O,UAAWtC,EAAQsQ,cAErB,eAACnK,GAAA,EAAD,CACEjM,GAAG,UACHmM,MAAM,cACN1Q,KAAK,OACLyB,KAAK,UACLmO,MAAO0D,EACP3C,WAAS,EACTlB,SAAU,SAACC,GAAD,OAAOD,EAASC,SAG9B,gBAAChD,GAAA,EAAD,CAAKC,UAAWtC,EAAQ2Q,YAAxB,UACE,eAAC,KAAD,CACEtP,KAAMiQ,KACND,KAAK,KACL/O,UAAWtC,EAAQuQ,eAErB,eAACpK,GAAA,EAAD,CACEjM,GAAG,WACHmM,MAAM,eACN1Q,KAAK,OACLyB,KAAK,WACLmO,MAAO4D,EACP7C,WAAS,EACTlB,SAAU,SAACC,GAAD,OAAOD,EAASC,SAG9B,gBAAChD,GAAA,EAAD,CAAKC,UAAWtC,EAAQ2Q,YAAxB,UACE,eAAC,KAAD,CACEtP,KAAMkQ,KACNF,KAAK,KACL/O,UAAWtC,EAAQwQ,eAErB,eAACrK,GAAA,EAAD,CACEjM,GAAG,WACHmM,MAAM,aACN1Q,KAAK,OACLyB,KAAK,WACLmO,MAAO6D,EACP9C,WAAS,EACTlB,SAAU,SAACC,GAAD,OAAOD,EAASC,SAG9B,gBAAChD,GAAA,EAAD,CAAKC,UAAWtC,EAAQ2Q,YAAxB,UACE,eAAC,KAAD,CACEtP,KAAMmQ,KACNH,KAAK,KACL/O,UAAWtC,EAAQyQ,cAErB,eAACtK,GAAA,EAAD,CACEjM,GAAG,UACHmM,MAAM,cACN1Q,KAAK,OACLyB,KAAK,UACLmO,MAAO8D,EACP/C,WAAS,EACTlB,SAAU,SAACC,GAAD,OAAOD,EAASC,SAG9B,gBAAChD,GAAA,EAAD,CAAKC,UAAWtC,EAAQ2Q,YAAxB,UACE,eAAC,KAAD,CACEtP,KAAMoQ,KACNJ,KAAK,KACL/O,UAAWtC,EAAQ0Q,gBAErB,eAACvK,GAAA,EAAD,CACEjM,GAAG,YACHmM,MAAM,gBACN1Q,KAAK,OACLyB,KAAK,YACLmO,MAAO2D,EACP5C,WAAS,EACTlB,SAAU,SAACC,GAAD,OAAOD,EAASC,YAKlC,gBAAChD,GAAA,EAAD,CAAKC,UAAWtC,EAAQoQ,WAAxB,UACE,eAACjP,GAAA,EAAD,CACExL,KAAK,SACLoN,QAAQ,WACRtD,MAAM,UACN8F,MAAM,iBACNjD,UAAWtC,EAAQqN,iBALrB,4BASA,eAAClM,GAAA,EAAD,CAAQ4B,QAAQ,WAAWT,UAAWtC,EAAQqQ,UAA9C,SACE,eAAC,IAAD,CAAMjS,GAAG,aAAT,qC,oBC3WVC,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CyH,UAAW,CACTnB,UAAW,OACX7F,QAAS,OACTyF,cAAe,UAEjBmN,QAAS,CACPhT,YAAa,SACba,MAAO,WAETmF,KAAM,CACJ5F,QAAS,OACTyF,cAAe,SACf,uBAAwB,CACtBrF,OAAQ,SACRS,MAAO,SAGXuQ,WAAY,CACV7L,WAAY,OACZsC,cAAe,OACf,WAAY,CACVjI,YAAa,SAGjByR,UAAW,CACT,MAAO,CACLrL,eAAgB,OAChBvF,MAAO,WAETA,MAAO,UACP,UAAW,CACTd,gBAAiB,UACjBc,MAAO,SAGXoS,UAAW,CACTpS,MAAO,UACP,UAAW,CACTd,gBAAiB,UACjBc,MAAO,aCwJEqS,GAhKqC,SAAC5T,GACnD,IAAQ5E,EAAY4E,EAAZ5E,QAKF0G,EAAU3B,KAKRvE,EAAkB4D,KAAlB5D,cAKR,EAAgCyG,mBAAS,CACvCsH,QAAS,GACTqC,MAAO,GACPpC,SAAU,GACVmC,KAAM,GACN7L,GAAI,GACJ2T,SAAS,EACT5H,YAAa,KAPf,oBAAO9Q,EAAP,KAAiB8L,EAAjB,KAaQ0C,EAA6DxO,EAA7DwO,QAASqC,EAAoD7Q,EAApD6Q,MAAOpC,EAA6CzO,EAA7CyO,SAAUmC,EAAmC5Q,EAAnC4Q,KAAM7L,EAA6B/E,EAA7B+E,GAAI2T,EAAyB1Y,EAAzB0Y,QAAS5H,EAAgB9Q,EAAhB8Q,YAKrD,EAAyC5J,oBAAS,GAAlD,oBAAOyR,EAAP,KAAuBC,EAAvB,KAEM7M,EAAW,SAACC,GAChBF,EAAY,2BAAK9L,GAAN,mBAAiBgM,EAAEC,OAAOlO,KAAOiO,EAAEC,OAAOC,UAQvD,OACE,eAACC,GAAA,EAAD,CAAWE,SAAS,KAAKpD,UAAWtC,EAAQgG,UAA5C,SACE,gBAACD,GAAA,EAAD,CAAMC,WAAS,EAAC1D,UAAWtC,EAAQgG,UAAnC,UACE,gBAACD,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,GAAf,UACE,eAAC3E,GAAA,EAAD,CAAYC,QAAQ,KAAKtD,MAAM,UAAUkI,cAAY,EAArD,+BAGA,gBAAC7E,GAAA,EAAD,CAAYC,QAAQ,KAAKtD,MAAM,cAAckI,cAAY,EAAzD,UACE,eAAC,KAAD,CAAiBtG,KAAM2J,KAAc1I,UAAWtC,EAAQ4R,UAD1D,2EAKA,eAAC9O,GAAA,EAAD,oCAEF,eAACiD,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,GAAf,SACE,wBAAMnF,UAAWtC,EAAQ4E,KAAMiB,SAAU,SAACR,GAAD,OApBhC,SAACA,GAChBA,EAAES,iBACFhM,EAAcT,EAAUC,GAkB8BuM,CAASR,IAAzD,UACE,eAACc,GAAA,EAAD,CACEjM,GAAG,QACHmM,MAAM,cACN1Q,KAAK,OACLyB,KAAK,QACLmO,MAAO2E,EACP5D,WAAS,EACTlB,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,eAACc,GAAA,EAAD,CACEjM,GAAG,UACHmM,MAAM,YACN1Q,KAAK,OACLyB,KAAK,UACLmO,MAAOsC,EACPvB,WAAS,EACTlB,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,eAACc,GAAA,EAAD,CACEjM,GAAG,WACHmM,MAAM,WACN1Q,KAAK,OACLyB,KAAK,WACLmO,MAAOuC,EACPxB,WAAS,EACTlB,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,eAACc,GAAA,EAAD,CACEjM,GAAG,OACHmM,MAAM,cACN1Q,KAAK,OACLyB,KAAK,OACLmO,MAAO0E,EACPiI,gBAAiB,CACfC,QAAQ,GAEV7L,WAAS,EACTlB,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,eAAC+M,GAAA,EAAD,CACEC,QACE,eAACC,GAAA,EAAD,CACEC,QAASR,EACTxM,MAAOwM,EACP3M,SAAU,SAACC,GACTF,EAAY,2BAAK9L,GAAN,IAAgB0Y,SAAUA,KACrCE,GAAgBD,IAElB5a,KAAK,UACLqI,MAAM,YAGV4G,MAAM,gBAER,eAACF,GAAA,EAAD,CACEjM,GAAG,KACHmM,MAAM,YACN1Q,KAAK,OACLyB,KAAK,KACLmO,MAAOnH,EACP8T,gBAAiB,CACfC,QAAQ,GAEV7L,WAAS,EACTlB,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BmJ,SAAUwD,IAEZ,eAAC7L,GAAA,EAAD,CACEjM,GAAG,cACHmM,MAAM,kBACN1Q,KAAK,OACLyB,KAAK,cACLmO,MAAO4E,EACP7D,WAAS,EACTgI,WAAS,EACT6C,KAAM,EACN/L,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,gBAAChD,GAAA,EAAD,CAAKC,UAAWtC,EAAQoQ,WAAxB,UACE,eAACjP,GAAA,EAAD,CACExL,KAAK,SACLoN,QAAQ,WACRtD,MAAM,UACN8F,MAAM,iBACNjD,UAAWtC,EAAQ6R,UALrB,4BASA,eAAC1Q,GAAA,EAAD,CAAQ4B,QAAQ,WAAWT,UAAWtC,EAAQqQ,UAA9C,SACE,eAAC,IAAD,CAAMjS,GAAG,aAAT,qCCtLVC,GAAYC,cAAW,SAACC,GAAD,MAAmB,CAC9CyH,UAAW,CACTnB,UAAW,OACX7F,QAAS,OACTyF,cAAe,UAEjB+N,QAAS,CACP5T,YAAa,SACba,MAAO,WAETmF,KAAM,CACJ5F,QAAS,OACTyF,cAAe,SACf,uBAAwB,CACtBrF,OAAQ,SACRS,MAAO,SAGXuQ,WAAY,CACV7L,WAAY,OACZsC,cAAe,OACf,WAAY,CACVjI,YAAa,SAGjByR,UAAW,CACT,MAAO,CACLrL,eAAgB,OAChBvF,MAAO,WAETA,MAAO,UACP,UAAW,CACTd,gBAAiB,UACjBc,MAAO,SAGXgT,UAAW,CACThT,MAAO,UACP,UAAW,CACTd,gBAAiB,UACjBc,MAAO,aCuJEiT,GA/JmC,SAACxU,GACjD,IAAQ5E,EAAY4E,EAAZ5E,QAKF0G,EAAU3B,KAKRrE,EAAiB0D,KAAjB1D,aAKR,EAAgCuG,mBAAS,CACvC8J,OAAQ,GACRC,OAAQ,GACRC,aAAc,GACdN,KAAM,GACN7L,GAAI,GACJ2T,SAAS,EACT5H,YAAa,KAPf,oBAAO9Q,EAAP,KAAiB8L,EAAjB,KAaQkF,EACNhR,EADMgR,OAAQC,EACdjR,EADciR,OAAQC,EACtBlR,EADsBkR,aAAcN,EACpC5Q,EADoC4Q,KAAM7L,EAC1C/E,EAD0C+E,GAAI2T,EAC9C1Y,EAD8C0Y,QAAS5H,EACvD9Q,EADuD8Q,YAMzD,EAAyC5J,oBAAS,GAAlD,oBAAOyR,EAAP,KAAuBC,EAAvB,KAEM7M,EAAW,SAACC,GAChBF,EAAY,2BAAK9L,GAAN,mBAAiBgM,EAAEC,OAAOlO,KAAOiO,EAAEC,OAAOC,UAQvD,OACE,eAACC,GAAA,EAAD,CAAWE,SAAS,KAAKpD,UAAWtC,EAAQgG,UAA5C,SACE,gBAACD,GAAA,EAAD,CAAMC,WAAS,EAACxB,QAAS,EAAGlC,UAAWtC,EAAQgG,UAA/C,UACE,gBAACD,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,GAAf,UACE,eAAC3E,GAAA,EAAD,CAAYC,QAAQ,KAAKtD,MAAM,UAAUkI,cAAY,EAArD,gCAGA,gBAAC7E,GAAA,EAAD,CAAYC,QAAQ,KAAKtD,MAAM,cAAckI,cAAY,EAAzD,UACE,eAAC,KAAD,CAAiBtG,KAAM2J,KAAc1I,UAAWtC,EAAQwS,UAD1D,uDAIA,eAAC1P,GAAA,EAAD,oCAEF,eAACiD,GAAA,EAAD,CAAME,MAAI,EAACwB,GAAI,GAAf,SACE,wBAAMnF,UAAWtC,EAAQ4E,KAAMiB,SAAU,SAACR,GAAD,OAnBhC,SAACA,GAChBA,EAAES,iBACF9L,EAAaX,EAAUC,GAiB+BuM,CAASR,IAAzD,UACE,eAACc,GAAA,EAAD,CACEjM,GAAG,SACHmM,MAAM,uBACN1Q,KAAK,OACLyB,KAAK,SACLmO,MAAO8E,EACPjF,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,eAACc,GAAA,EAAD,CACEjM,GAAG,SACHmM,MAAM,0BACN1Q,KAAK,OACLyB,KAAK,SACLmO,MAAO+E,EACPhE,WAAS,EACTlB,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,eAACc,GAAA,EAAD,CACEjM,GAAG,eACHmM,MAAM,mBACN1Q,KAAK,OACLyB,KAAK,eACLmO,MAAOgF,EACPjE,WAAS,EACTlB,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,eAACc,GAAA,EAAD,CACEjM,GAAG,OACHmM,MAAM,cACN1Q,KAAK,OACLyB,KAAK,OACLmO,MAAO0E,EACPiI,gBAAiB,CACfC,QAAQ,GAEV7L,WAAS,EACTlB,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,eAAC+M,GAAA,EAAD,CACEC,QACE,eAACC,GAAA,EAAD,CACEC,QAASR,EACTxM,MAAOwM,EACP3M,SAAU,SAACC,GACTF,EAAY,2BAAK9L,GAAN,IAAgB0Y,SAAUA,KACrCE,GAAgBD,IAElB5a,KAAK,UACLqI,MAAM,YAGV4G,MAAM,cAER,eAACF,GAAA,EAAD,CACEjM,GAAG,KACHmM,MAAM,YACN1Q,KAAK,OACLyB,KAAK,KACLmO,MAAOnH,EACP8T,gBAAiB,CACfC,QAAQ,GAEV7L,WAAS,EACTlB,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BmJ,SAAUwD,IAEZ,eAAC7L,GAAA,EAAD,CACEjM,GAAG,cACHmM,MAAM,sBACN1Q,KAAK,OACLyB,KAAK,cACLmO,MAAO4E,EACP7D,WAAS,EACTgI,WAAS,EACT6C,KAAM,EACN/L,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,gBAAChD,GAAA,EAAD,CAAKC,UAAWtC,EAAQoQ,WAAxB,UACE,eAACjP,GAAA,EAAD,CACExL,KAAK,SACLoN,QAAQ,WACRtD,MAAM,UACN8F,MAAM,gBACNjD,UAAWtC,EAAQyS,UALrB,2BASA,eAACtR,GAAA,EAAD,CAAQ4B,QAAQ,WAAWT,UAAWtC,EAAQqQ,UAA9C,SACE,eAAC,IAAD,CAAMjS,GAAG,aAAT,qCC9JZ5H,aAAaL,OACfD,EAAaM,aAAaL,OAM5B,IAyCewc,GAzCU,WACvB,IAAQhc,EAAa+G,KAAb/G,SAOR,OALA4R,qBAAU,WACR5R,MAEC,IAGD,gBAAC,IAAD,WACE,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,IAAD,CAAOic,KAAK,IAAZ,SACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,IAAInN,UAAWuI,KACjC,eAAC,IAAD,CAAO6E,OAAK,EAACD,KAAK,YAAYnN,UAAWR,KACzC,eAAC,IAAD,CAAO4N,OAAK,EAACD,KAAK,SAASnN,UAAWiB,KACtC,eAAC,IAAD,CAAOmM,OAAK,EAACD,KAAK,YAAYnN,UAAW6C,KACzC,eAAC,IAAD,CAAOuK,OAAK,EAACD,KAAK,eAAenN,UAAW8F,KAC5C,eAAC,GAAD,CAAcsH,OAAK,EAACD,KAAK,aAAanN,UAAW6H,KACjD,eAAC,GAAD,CAAcuF,OAAK,EAACD,KAAK,SAASnN,UAAWkK,KAC7C,eAAC,GAAD,CAAckD,OAAK,EAACD,KAAK,aAAanN,UAAWyK,KACjD,eAAC,GAAD,CAAc2C,OAAK,EAACD,KAAK,gBAAgBnN,UAAWiM,KACpD,eAAC,GAAD,CACEmB,OAAK,EACLD,KAAK,kBACLnN,UAAWmL,KAGb,eAAC,GAAD,CACEiC,OAAK,EACLD,KAAK,kBACLnN,UAAWqM,KAEb,eAAC,GAAD,CAAce,OAAK,EAACD,KAAK,iBAAiBnN,UAAWiN,cC5DhDI,GANa,SAAC5U,GAC3B,IAAQ6U,EAAa7U,EAAb6U,SAER,OAAO,eAAC,IAAD,CAAezV,MAAOA,GAAtB,SAA8ByV,KCsBxBC,I,OAXO,WACpB,OACE,gBAAC,WAAD,WACE,eAACrN,EAAA,EAAD,IACA,eAAC,GAAD,UACE,eAAC,GAAD,WCrBRsN,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2a3c8a1a.chunk.js","sourcesContent":["/**\r\n * Defines the actions types.\r\n */\r\nexport enum AlertActionTypes {\r\n  DISPATCH_ALERT = \"dispatch_alert\",\r\n  REMOVE_ALERT = \"remove_alert\",\r\n}\r\n\r\nexport type Color = \"success\" | \"info\" | \"warning\" | \"error\";\r\n\r\n/**\r\n * Defines the Alert interface.\r\n */\r\nexport interface Alert {\r\n  msg: string[];\r\n  severity: Color;\r\n}\r\n","/**\r\n * Defines the actions types for Register\r\n */\r\nexport enum RegisterUserActionTypes {\r\n  REGISTER_SUCCESS = \"register_success\",\r\n  REGISTER_FAIL = \"register_fail\",\r\n}\r\n\r\n/**\r\n * Defines the actions types for Login\r\n */\r\nexport enum LoginUserActionTypes {\r\n  LOGIN_SUCCESS = \"login_success\",\r\n  LOGIN_FAIL = \"login_fail\",\r\n}\r\n\r\n/**\r\n * Defines the actions types for Loading the user\r\n */\r\nexport enum LoadUserActionTypes {\r\n  USER_LOADED = \"user_loaded\",\r\n  AUTH_ERROR = \"auth_error\",\r\n}\r\n\r\n/**\r\n * Defines the actions types for Logging out the user\r\n */\r\nexport enum LogoutUserActionTypes {\r\n  LOGOUT = \"logout\",\r\n}\r\n\r\n/**\r\n * Defines the actions types for Deleting the user and profile\r\n */\r\nexport enum DeleteUserActionTypes {\r\n  DELETE_ACCOUNT = \"delete_account\",\r\n}\r\n\r\n/**\r\n * Defines the AuthPayload interface\r\n * This is for both Login and Register payload\r\n */\r\nexport interface AuthPayload {\r\n  token: string;\r\n}\r\n\r\n/**\r\n * Defines the LoadUser interface.\r\n */\r\nexport interface LoadUser {\r\n  name: string;\r\n  email: string;\r\n  avatar: string;\r\n  date: string;\r\n  id: string;\r\n}\r\n","/**\r\n * Defines the actions types for the Profile\r\n */\r\nexport enum ProfileActionTypes {\r\n  GET_PROFILE = \"get_profile\",\r\n  PROFILE_ERROR = \"profile_error\",\r\n  DELETE_PROFILE = \"delete_profile\",\r\n  CLEAR_PROFILE = \"clear_profile\",\r\n  UPDATE_PROFILE = \"update_profile\",\r\n  GET_PROFILES = \"get_profiles\",\r\n  GET_REPOS = \"get_repos\",\r\n  RESET_PROFILE_LOADING = \"reset_profile_loading\"\r\n}\r\n\r\n/**\r\n * Defines the interface for the Social links\r\n */\r\ninterface SocialObject {\r\n  youtube: string;\r\n  facebook: string;\r\n  twitter: string;\r\n  instagram: string;\r\n  linkedin: string;\r\n}\r\n\r\n/**\r\n * Defines the interface for the user attached\r\n * to the Profile\r\n */\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  avatar: string;\r\n}\r\n\r\n/**\r\n * Defines the interface for Experience\r\n */\r\nexport interface Experience {\r\n  _id: string;\r\n  current: boolean;\r\n  title: string;\r\n  company: string;\r\n  location: string;\r\n  from: string;\r\n  to: string;\r\n  description: string;\r\n}\r\n\r\n/**\r\n * Defines the interface for Education\r\n */\r\nexport interface Education {\r\n  _id: string;\r\n  current: boolean;\r\n  school: string;\r\n  degree: string;\r\n  fieldofstudy: string;\r\n  from: string;\r\n  to: string;\r\n  description: string;\r\n}\r\n\r\n/**\r\n * Defines the GitHubRepoPayload interface\r\n */\r\nexport interface GitHubRepoPayload {\r\n  html_url: string;\r\n  name: string;\r\n  description: string;\r\n  stargazers_count: number;\r\n  watchers_count: number;\r\n  forks_count: number;\r\n}\r\n\r\n/**\r\n * Defines the ProfilePayload interface\r\n */\r\nexport interface ProfilePayload {\r\n  id: string;\r\n  social?: SocialObject;\r\n  skills: string[];\r\n  user: User;\r\n  company: string;\r\n  website: string;\r\n  location: string;\r\n  bio: string;\r\n  status: string;\r\n  experience: Experience[];\r\n  education: Education[];\r\n  date: string;\r\n  githubusername: string;\r\n}\r\n","/**\r\n * Defines the actions types for the Posts\r\n */\r\nexport enum PostActionTypes {\r\n  GET_POSTS = \"get_posts\",\r\n  GET_POST = \"get_post\",\r\n  ADD_POST = \"add_post\",\r\n  CLEAR_POST = \"clear_post\",\r\n  DELETE_POST = \"delete_post\",\r\n  POST_ERROR = \"post_error\",\r\n  UPDATE_LIKES = \"update_likes\",\r\n  ADD_COMMENT = \"add_comment\",\r\n  REMOVE_COMMENT = \"remove_comment\"\r\n}\r\n\r\n/**\r\n * Defines the Like interface\r\n */\r\nexport interface Like {\r\n  _id: string;\r\n  user: string;\r\n}\r\n\r\n/**\r\n * Defines the Comment interface\r\n */\r\nexport interface Comment {\r\n  id: string;\r\n  text: string;\r\n  name: string;\r\n  avatar: string;\r\n  user: string;\r\n  postId: string;\r\n  date: string;\r\n}\r\n\r\n/**\r\n * Defines the PostPayload interface\r\n */\r\nexport interface PostPayload {\r\n  id: string;\r\n  text: string;\r\n  name: string;\r\n  avatar: string;\r\n  user: string;\r\n  likes: Like[];\r\n  comments: Comment[];\r\n  date: string;\r\n}\r\n","import { Dispatch } from \"redux\";\r\n\r\nimport { AlertActionTypes as ActionTypes, Alert } from \"../types\";\r\n\r\nexport const dispatchAlert =\r\n  (msg: string[], severity: string, timeout = 3 * 1000) =>\r\n  (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionTypes.DISPATCH_ALERT,\r\n      payload: { msg, severity } as Alert,\r\n      open: true,\r\n    });\r\n\r\n    setTimeout(\r\n      () => dispatch({ type: ActionTypes.REMOVE_ALERT, open: false }),\r\n      timeout\r\n    );\r\n  };\r\n","import axios from \"axios\";\r\n\r\nexport const setAuthToken = (token: string) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\r\n    localStorage.setItem(\"token\", token);\r\n  } else {\r\n    delete axios.defaults.headers.common[\"x-auth-token\"];\r\n    localStorage.removeItem(\"token\");\r\n  }\r\n};\r\n","import { Dispatch } from \"redux\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  RegisterUserActionTypes,\r\n  LoginUserActionTypes,\r\n  LoadUserActionTypes,\r\n  LogoutUserActionTypes,\r\n  DeleteUserActionTypes,\r\n  ProfileActionTypes\r\n} from \"../types\";\r\nimport { AuthUserAction } from \"../actions\";\r\n\r\nimport { setAuthToken } from \"../../utils\";\r\nimport { dispatchAlert } from \"./alert\";\r\n\r\n/**\r\n * Defines the interface for the Register inputs\r\n */\r\ninterface RegisterBody {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\n/**\r\n * Handles Loading the user data\r\n */\r\nexport const loadUser = () => async (dispatch: Dispatch<AuthUserAction>) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/api/auth\");\r\n\r\n    dispatch({\r\n      type: LoadUserActionTypes.USER_LOADED,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    if (err.response) {\r\n      const errors = err.response.data.errors;\r\n\r\n      dispatch({\r\n        type: LoadUserActionTypes.AUTH_ERROR,\r\n        payload: errors\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Handles Registering the user\r\n */\r\nexport const register =\r\n  ({ name, email, password }: RegisterBody) =>\r\n  async (dispatch: Dispatch<AuthUserAction>) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const body = JSON.stringify({ name, email, password });\r\n\r\n    try {\r\n      const { data } = await axios.post(\"/api/users\", body, config);\r\n\r\n      dispatch({\r\n        type: RegisterUserActionTypes.REGISTER_SUCCESS,\r\n        payload: data\r\n      });\r\n\r\n      loadUser()(dispatch);\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      dispatchAlert(\r\n        errors.map((err: { msg: any }) => err.msg),\r\n        \"error\",\r\n        3000\r\n      )(dispatch);\r\n\r\n      dispatch({\r\n        type: RegisterUserActionTypes.REGISTER_FAIL,\r\n        payload: errors\r\n      });\r\n    }\r\n  };\r\n\r\n/**\r\n * Handles Logging in the user\r\n */\r\nexport const login =\r\n  (email: string, password: string) =>\r\n  async (dispatch: Dispatch<AuthUserAction>) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n      const { data } = await axios.post(\"/api/auth\", body, config);\r\n\r\n      dispatch({\r\n        type: LoginUserActionTypes.LOGIN_SUCCESS,\r\n        payload: data\r\n      });\r\n\r\n      loadUser()(dispatch);\r\n      dispatchAlert([\"Successfully logged in!\"], \"success\", 3000)(dispatch);\r\n    } catch (err) {\r\n      if (err.response) {\r\n        const errors = err.response.data.errors;\r\n\r\n        dispatchAlert(\r\n          errors.map((err: { msg: any }) => err.msg),\r\n          \"error\",\r\n          3000\r\n        )(dispatch);\r\n\r\n        dispatch({\r\n          type: LoginUserActionTypes.LOGIN_FAIL,\r\n          payload: errors\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n/**\r\n * Handles Logging out the user\r\n */\r\nexport const logout = () => (dispatch: Dispatch<AuthUserAction>) => {\r\n  dispatch({ type: ProfileActionTypes.CLEAR_PROFILE });\r\n  dispatch({ type: LogoutUserActionTypes.LOGOUT });\r\n  dispatchAlert([\"Logged out\"], \"success\")(dispatch);\r\n};\r\n\r\n/**\r\n * Handles Deleting the Account\r\n */\r\nexport const deleteAccount =\r\n  () => async (dispatch: Dispatch<AuthUserAction>) => {\r\n    if (window.confirm(\"Are you sure? This cannot be undone.\")) {\r\n      try {\r\n        await axios.delete(`/api/user`);\r\n\r\n        dispatch({ type: ProfileActionTypes.CLEAR_PROFILE });\r\n        dispatch({ type: DeleteUserActionTypes.DELETE_ACCOUNT });\r\n\r\n        dispatchAlert(\r\n          [\"Your account has beeen permanently removed\"],\r\n          \"success\"\r\n        )(dispatch);\r\n      } catch (err) {\r\n        if (err.response) {\r\n          const errors = err.response.data.errors;\r\n\r\n          dispatch({\r\n            type: ProfileActionTypes.PROFILE_ERROR,\r\n            payload: errors\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n","import { Dispatch } from \"redux\";\r\nimport axios from \"axios\";\r\n\r\nimport { ProfileActionTypes } from \"../types\";\r\nimport { ProfileAction } from \"../actions\";\r\nimport { dispatchAlert } from \"./alert\";\r\n\r\n/**\r\n * Defines the formData for creating a profile interface\r\n */\r\ninterface CreateProfileFormData {\r\n  company: string;\r\n  website: string;\r\n  location: string;\r\n  status: string;\r\n  skills: string;\r\n  githubusername: string;\r\n  bio: string;\r\n  twitter: string;\r\n  facebook: string;\r\n  linkedin: string;\r\n  youtube: string;\r\n  instagram: string;\r\n}\r\n\r\n/**\r\n * Defines the formData for adding experience interface\r\n */\r\ninterface AddExperienceFormData {\r\n  company: string;\r\n  title: string;\r\n  location: string;\r\n  from: string;\r\n  to: string;\r\n  current: boolean;\r\n  description: string;\r\n}\r\n\r\n/**\r\n * Defines the formData for adding education interface\r\n */\r\ninterface AddEducationFormData {\r\n  school: string;\r\n  degree: string;\r\n  fieldofstudy: string;\r\n  from: string;\r\n  to: string;\r\n  current: boolean;\r\n  description: string;\r\n}\r\n\r\n/**\r\n * Handles getting the current user profile\r\n */\r\nexport const getCurrentProfile =\r\n  () => async (dispatch: Dispatch<ProfileAction>) => {\r\n    try {\r\n      const res = await axios.get(\"/api/profile/me\");\r\n\r\n      dispatch({\r\n        type: ProfileActionTypes.GET_PROFILE,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n      if (err.response) {\r\n        const errors = err.response.data.errors;\r\n\r\n        dispatch({\r\n          type: ProfileActionTypes.PROFILE_ERROR,\r\n          payload: errors\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n/**\r\n * Handles getting all profiles\r\n */\r\nexport const getProfiles = () => async (dispatch: Dispatch<ProfileAction>) => {\r\n  dispatch({ type: ProfileActionTypes.CLEAR_PROFILE });\r\n  dispatch({ type: ProfileActionTypes.RESET_PROFILE_LOADING });\r\n\r\n  try {\r\n    const res = await axios.get(\"/api/profile\");\r\n\r\n    dispatch({\r\n      type: ProfileActionTypes.GET_PROFILES,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    if (err.response) {\r\n      const errors = err.response.data.errors;\r\n\r\n      dispatch({\r\n        type: ProfileActionTypes.PROFILE_ERROR,\r\n        payload: errors\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Handles getting the profile by ID\r\n */\r\nexport const getProfileById =\r\n  (userId: string) => async (dispatch: Dispatch<ProfileAction>) => {\r\n    dispatch({ type: ProfileActionTypes.CLEAR_PROFILE });\r\n\r\n    try {\r\n      const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n      dispatch({\r\n        type: ProfileActionTypes.GET_PROFILE,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n      if (err.response) {\r\n        const errors = err.response.data.errors;\r\n\r\n        dispatch({\r\n          type: ProfileActionTypes.PROFILE_ERROR,\r\n          payload: errors\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n/**\r\n * Handles Creating / Updating the profile\r\n */\r\nexport const createProfile =\r\n  (formData: CreateProfileFormData, history: any, edit = false) =>\r\n  async (dispatch: Dispatch<ProfileAction>) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n\r\n      const res = await axios.post(\"/api/profile\", formData, config);\r\n\r\n      dispatch({\r\n        type: ProfileActionTypes.GET_PROFILE,\r\n        payload: res.data\r\n      });\r\n\r\n      dispatchAlert(\r\n        edit ? [\"Profile updated\"] : [\"Profile Created\"],\r\n        \"success\"\r\n      )(dispatch);\r\n\r\n      if (!edit) {\r\n        history.push(\"/dashboard\");\r\n      }\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        dispatchAlert(\r\n          errors.map((err: { msg: any }) => err.msg),\r\n          \"error\"\r\n        )(dispatch);\r\n      }\r\n\r\n      dispatch({\r\n        type: ProfileActionTypes.PROFILE_ERROR,\r\n        payload: errors\r\n      });\r\n    }\r\n  };\r\n\r\n/**\r\n * Handles deleting the profile\r\n */\r\nexport const deleteProfile =\r\n  () => async (dispatch: Dispatch<ProfileAction>) => {\r\n    if (window.confirm(\"Are you sure? This cannot be undone.\")) {\r\n      try {\r\n        await axios.delete(`/api/profile`);\r\n\r\n        dispatch({\r\n          type: ProfileActionTypes.DELETE_PROFILE\r\n        });\r\n\r\n        dispatchAlert([\"Profile removed\"], \"success\")(dispatch);\r\n      } catch (err) {\r\n        if (err.response) {\r\n          const errors = err.response.data.errors;\r\n\r\n          dispatch({\r\n            type: ProfileActionTypes.PROFILE_ERROR,\r\n            payload: errors\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n/**\r\n * Handles getting the GitHub Repos\r\n */\r\nexport const getGithubRepos =\r\n  (username: string) => async (dispatch: Dispatch<ProfileAction>) => {\r\n    try {\r\n      const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n      dispatch({\r\n        type: ProfileActionTypes.GET_REPOS,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n      if (err.response) {\r\n        const errors = err.response.data.errors;\r\n\r\n        dispatch({\r\n          type: ProfileActionTypes.PROFILE_ERROR,\r\n          payload: errors\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n/**\r\n * Handles adding experience\r\n */\r\nexport const addExperience =\r\n  (formData: AddExperienceFormData, history: any) =>\r\n  async (dispatch: Dispatch<ProfileAction>) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n\r\n      const res = await axios.post(\"/api/profile/experience\", formData, config);\r\n\r\n      dispatch({\r\n        type: ProfileActionTypes.UPDATE_PROFILE,\r\n        payload: res.data\r\n      });\r\n\r\n      dispatchAlert([\"Experience added\"], \"success\")(dispatch);\r\n      history.push(\"/dashboard\");\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        dispatchAlert(\r\n          errors.map((err: { msg: any }) => err.msg),\r\n          \"error\"\r\n        )(dispatch);\r\n      }\r\n\r\n      dispatch({\r\n        type: ProfileActionTypes.PROFILE_ERROR,\r\n        payload: errors\r\n      });\r\n    }\r\n  };\r\n\r\n/**\r\n * Handles adding education\r\n */\r\nexport const addEducation =\r\n  (formData: AddEducationFormData, history: any) =>\r\n  async (dispatch: Dispatch<ProfileAction>) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n\r\n      const res = await axios.post(\"/api/profile/education\", formData, config);\r\n\r\n      dispatch({\r\n        type: ProfileActionTypes.UPDATE_PROFILE,\r\n        payload: res.data\r\n      });\r\n\r\n      dispatchAlert([\"Education added\"], \"success\")(dispatch);\r\n      history.push(\"/dashboard\");\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        dispatchAlert(\r\n          errors.map((err: { msg: any }) => err.msg),\r\n          \"error\"\r\n        )(dispatch);\r\n      }\r\n\r\n      dispatch({\r\n        type: ProfileActionTypes.PROFILE_ERROR,\r\n        payload: errors\r\n      });\r\n    }\r\n  };\r\n\r\n/**\r\n * Handles deleting experience\r\n */\r\nexport const deleteExperience =\r\n  (id: string) => async (dispatch: Dispatch<ProfileAction>) => {\r\n    if (window.confirm(\"Are you sure? This cannot be undone.\")) {\r\n      try {\r\n        const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n        dispatch({\r\n          type: ProfileActionTypes.UPDATE_PROFILE,\r\n          payload: res.data\r\n        });\r\n\r\n        dispatchAlert([\"Experience removed\"], \"success\")(dispatch);\r\n      } catch (err) {\r\n        if (err.response) {\r\n          const errors = err.response.data.errors;\r\n\r\n          dispatch({\r\n            type: ProfileActionTypes.PROFILE_ERROR,\r\n            payload: errors\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n/**\r\n * Handles deleting education\r\n */\r\nexport const deleteEducation =\r\n  (id: string) => async (dispatch: Dispatch<ProfileAction>) => {\r\n    if (window.confirm(\"Are you sure? This cannot be undone.\")) {\r\n      try {\r\n        const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n        dispatch({\r\n          type: ProfileActionTypes.UPDATE_PROFILE,\r\n          payload: res.data\r\n        });\r\n\r\n        dispatchAlert([\"Education removed\"], \"success\")(dispatch);\r\n      } catch (err) {\r\n        if (err.response) {\r\n          const errors = err.response.data.errors;\r\n\r\n          dispatch({\r\n            type: ProfileActionTypes.PROFILE_ERROR,\r\n            payload: errors\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n","import { Dispatch } from \"redux\";\r\nimport axios from \"axios\";\r\n\r\nimport { PostActionTypes } from \"../types\";\r\nimport { PostAction } from \"../actions\";\r\nimport { dispatchAlert } from \"./alert\";\r\n\r\n/**\r\n * Defines form data interface\r\n */\r\ninterface PostFormData {\r\n  text: string;\r\n}\r\n\r\n/**\r\n * Handles clearing the posts\r\n */\r\nconst clearPost = () => async (dispatch: Dispatch<PostAction>) => {\r\n  dispatch({ type: PostActionTypes.CLEAR_POST });\r\n};\r\n\r\n/**\r\n * Handles getting all the posts\r\n */\r\nexport const getPosts = () => async (dispatch: Dispatch<PostAction>) => {\r\n  try {\r\n    const res = await axios.get(\"/api/posts\");\r\n\r\n    dispatch({\r\n      type: PostActionTypes.GET_POSTS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    if (err.response) {\r\n      const errors = err.response.data.errors;\r\n\r\n      dispatch({\r\n        type: PostActionTypes.POST_ERROR,\r\n        payload: errors\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Handles getting a post by id\r\n */\r\nexport const getPostById =\r\n  (id: string) => async (dispatch: Dispatch<PostAction>) => {\r\n    clearPost()(dispatch);\r\n\r\n    try {\r\n      const res = await axios.get(`/api/posts/${id}`);\r\n\r\n      dispatch({\r\n        type: PostActionTypes.GET_POST,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n      if (err.response) {\r\n        const errors = err.response.data.errors;\r\n\r\n        dispatch({\r\n          type: PostActionTypes.POST_ERROR,\r\n          payload: errors\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n/**\r\n * Handles adding a post\r\n */\r\nexport const addPost =\r\n  (formData: PostFormData) => async (dispatch: Dispatch<PostAction>) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\"/api/posts\", formData, config);\r\n\r\n      dispatch({\r\n        type: PostActionTypes.ADD_POST,\r\n        payload: res.data\r\n      });\r\n\r\n      dispatchAlert([\"Post created\"], \"success\");\r\n    } catch (err) {\r\n      if (err.response) {\r\n        const errors = err.response.data.errors;\r\n\r\n        dispatch({\r\n          type: PostActionTypes.POST_ERROR,\r\n          payload: errors\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n/**\r\n * Handles deleting a post\r\n */\r\nexport const deletePost =\r\n  (id: string) => async (dispatch: Dispatch<PostAction>) => {\r\n    if (window.confirm(\"Are you sure? This cannot be undone.\")) {\r\n      try {\r\n        await axios.delete(`/api/posts/${id}`);\r\n\r\n        dispatch({\r\n          type: PostActionTypes.DELETE_POST,\r\n          payload: id\r\n        });\r\n\r\n        dispatchAlert([\"Post removed\"], \"success\");\r\n      } catch (err) {\r\n        if (err.response) {\r\n          const errors = err.response.data.errors;\r\n\r\n          dispatch({\r\n            type: PostActionTypes.POST_ERROR,\r\n            payload: errors\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n/**\r\n * Handles adding a comment\r\n */\r\nexport const addComment =\r\n  (postId: string, formData: PostFormData) =>\r\n  async (dispatch: Dispatch<PostAction>) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        `/api/posts/comment/${postId}`,\r\n        formData,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: PostActionTypes.ADD_COMMENT,\r\n        payload: res.data\r\n      });\r\n\r\n      dispatchAlert([\"Comment Added\"], \"success\");\r\n    } catch (err) {\r\n      if (err.response) {\r\n        const errors = err.response.data.errors;\r\n\r\n        dispatchAlert(\r\n          errors.map((err: { msg: any }) => err.msg),\r\n          \"error\",\r\n          3000\r\n        )(dispatch);\r\n\r\n        dispatch({\r\n          type: PostActionTypes.POST_ERROR,\r\n          payload: errors\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n/**\r\n * Handles deleting a comment\r\n */\r\nexport const deleteComment =\r\n  (postId: string, commentId: string) =>\r\n  async (dispatch: Dispatch<PostAction>) => {\r\n    try {\r\n      const res = await axios.delete(\r\n        `/api/posts/${postId}/comments/${commentId}`\r\n      );\r\n\r\n      dispatch({\r\n        type: PostActionTypes.REMOVE_COMMENT,\r\n        payload: res.data\r\n      });\r\n\r\n      dispatchAlert([\"Comment Removed\"], \"success\")(dispatch);\r\n    } catch (err) {\r\n      if (err.response) {\r\n        const errors = err.response.data.errors;\r\n\r\n        dispatch({\r\n          type: PostActionTypes.POST_ERROR,\r\n          payload: errors\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n/**\r\n * Handles adding a like\r\n */\r\nexport const addLike =\r\n  (id: string) => async (dispatch: Dispatch<PostAction>) => {\r\n    try {\r\n      const res = await axios.put(`/api/posts/like/${id}`);\r\n\r\n      dispatch({\r\n        type: PostActionTypes.UPDATE_LIKES,\r\n        payload: { id, likes: res.data }\r\n      });\r\n    } catch (err) {\r\n      if (err.response) {\r\n        const errors = err.response.data.errors;\r\n\r\n        dispatch({\r\n          type: PostActionTypes.POST_ERROR,\r\n          payload: errors\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n/**\r\n * Handles removing a like\r\n */\r\nexport const removeLike =\r\n  (id: string) => async (dispatch: Dispatch<PostAction>) => {\r\n    try {\r\n      const res = await axios.put(`/api/posts/unlike/${id}`);\r\n\r\n      dispatch({\r\n        type: PostActionTypes.UPDATE_LIKES,\r\n        payload: { id, likes: res.data }\r\n      });\r\n    } catch (err) {\r\n      if (err.response) {\r\n        const errors = err.response.data.errors;\r\n\r\n        dispatch({\r\n          type: PostActionTypes.POST_ERROR,\r\n          payload: errors\r\n        });\r\n      }\r\n    }\r\n  };\r\n","import produce from \"immer\";\r\n\r\nimport { AlertActionTypes as ActionTypes, Alert } from \"../types\";\r\nimport { AlertAction } from \"../actions\";\r\n\r\ninterface Alerts {\r\n  open: boolean;\r\n  alert: Alert;\r\n}\r\n\r\nconst initialState: Alerts = {\r\n  open: false,\r\n  alert: { msg: [], severity: \"info\" },\r\n};\r\n\r\nconst reducer = produce(\r\n  (state: Alerts = initialState, action: AlertAction): Alerts => {\r\n    switch (action.type) {\r\n      case ActionTypes.DISPATCH_ALERT:\r\n        state.open = true;\r\n        state.alert = action.payload;\r\n        return state;\r\n\r\n      case ActionTypes.REMOVE_ALERT:\r\n        state.open = false;\r\n        state.alert = initialState.alert;\r\n        return state;\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n);\r\n\r\nexport default reducer;\r\n","import produce from \"immer\";\r\n\r\nimport {\r\n  RegisterUserActionTypes,\r\n  LoginUserActionTypes,\r\n  LoadUserActionTypes,\r\n  LogoutUserActionTypes,\r\n  DeleteUserActionTypes,\r\n  LoadUser\r\n} from \"../types\";\r\nimport { AuthUserAction } from \"../actions\";\r\n\r\ninterface AuthUsers {\r\n  token: string | null;\r\n  isAuthenticated: boolean;\r\n  loading: boolean;\r\n  user: LoadUser;\r\n  errors?: {\r\n    msg: string;\r\n  }[];\r\n}\r\n\r\nconst initialState: AuthUsers = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: localStorage.getItem(\"token\") ? true : false,\r\n  loading: true,\r\n  user: {\r\n    name: \"\",\r\n    email: \"\",\r\n    avatar: \"\",\r\n    date: \"\",\r\n    id: \"\"\r\n  },\r\n  errors: []\r\n};\r\n\r\nconst reducer = produce(\r\n  (state: AuthUsers = initialState, action: AuthUserAction): AuthUsers => {\r\n    switch (action.type) {\r\n      case RegisterUserActionTypes.REGISTER_SUCCESS:\r\n      case LoginUserActionTypes.LOGIN_SUCCESS:\r\n        localStorage.setItem(\"token\", action.payload.token);\r\n        state.isAuthenticated = true;\r\n        state.loading = false;\r\n        return state;\r\n\r\n      case RegisterUserActionTypes.REGISTER_FAIL:\r\n      case LoginUserActionTypes.LOGIN_FAIL:\r\n      case LoadUserActionTypes.AUTH_ERROR:\r\n      case LogoutUserActionTypes.LOGOUT:\r\n        localStorage.removeItem(\"token\");\r\n        state.isAuthenticated = false;\r\n        state.loading = false;\r\n        state.token = null;\r\n        state.errors = action.payload;\r\n        return state;\r\n\r\n      case DeleteUserActionTypes.DELETE_ACCOUNT:\r\n        localStorage.removeItem(\"token\");\r\n        state.isAuthenticated = false;\r\n        state.loading = false;\r\n        state.token = null;\r\n        return state;\r\n\r\n      case LoadUserActionTypes.USER_LOADED:\r\n        state.isAuthenticated = true;\r\n        state.loading = false;\r\n        state.user = { ...action.payload };\r\n        return state;\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n);\r\n\r\nexport default reducer;\r\n","import produce from \"immer\";\r\n\r\nimport {\r\n  ProfileActionTypes,\r\n  ProfilePayload,\r\n  GitHubRepoPayload\r\n} from \"../types\";\r\nimport { ProfileAction } from \"../actions\";\r\n\r\ninterface Profiles {\r\n  profile: ProfilePayload | null;\r\n  profiles: ProfilePayload[];\r\n  repos: GitHubRepoPayload[];\r\n  loading: boolean;\r\n  errors?: {\r\n    msg: string;\r\n  }[];\r\n}\r\n\r\nconst initialState: Profiles = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  errors: []\r\n};\r\n\r\nconst reducer = produce(\r\n  (state: Profiles = initialState, action: ProfileAction): Profiles => {\r\n    switch (action.type) {\r\n      case ProfileActionTypes.GET_PROFILE:\r\n      case ProfileActionTypes.UPDATE_PROFILE:\r\n        state.profile = action.payload;\r\n        state.loading = false;\r\n        return state;\r\n\r\n      case ProfileActionTypes.GET_PROFILES:\r\n        state.profiles = action.payload;\r\n        state.loading = false;\r\n        return state;\r\n\r\n      case ProfileActionTypes.GET_REPOS:\r\n        state.repos = action.payload;\r\n        state.loading = false;\r\n        return state;\r\n\r\n      case ProfileActionTypes.PROFILE_ERROR:\r\n        state.errors = action.payload;\r\n        state.loading = false;\r\n        state.profile = null;\r\n        return state;\r\n\r\n      case ProfileActionTypes.CLEAR_PROFILE:\r\n      case ProfileActionTypes.DELETE_PROFILE:\r\n        state.profile = null;\r\n        state.profiles = [];\r\n        state.repos = [];\r\n        state.loading = false;\r\n        return state;\r\n\r\n      case ProfileActionTypes.RESET_PROFILE_LOADING:\r\n        state.loading = true;\r\n        return state;\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n);\r\n\r\nexport default reducer;\r\n","// @ts-nocheck\r\nimport produce from \"immer\";\r\n\r\nimport { PostActionTypes, PostPayload } from \"../types\";\r\nimport { PostAction } from \"../actions\";\r\n\r\ninterface Posts {\r\n  posts: PostPayload[];\r\n  post: PostPayload | null;\r\n  loading: boolean;\r\n  errors?: {\r\n    msg: string;\r\n  }[];\r\n}\r\n\r\nconst initialState: Posts = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  errors: []\r\n};\r\n\r\nconst reducer = produce(\r\n  (state: Posts = initialState, action: PostAction): Posts => {\r\n    switch (action.type) {\r\n      case PostActionTypes.GET_POSTS:\r\n        state.posts = action.payload;\r\n        state.loading = false;\r\n        return state;\r\n\r\n      case PostActionTypes.GET_POST:\r\n        state.post = action.payload;\r\n        state.loading = false;\r\n        return state;\r\n\r\n      case PostActionTypes.ADD_POST:\r\n        state.posts = [action.payload, ...state.posts];\r\n        state.loading = false;\r\n        return state;\r\n\r\n      case PostActionTypes.DELETE_POST:\r\n        state.posts = state.posts.filter((post) => post.id !== action.payload);\r\n        state.loading = false;\r\n        return state;\r\n\r\n      case PostActionTypes.POST_ERROR:\r\n        state.errors = action.payload;\r\n        state.loading = false;\r\n        return state;\r\n\r\n      case PostActionTypes.CLEAR_POST:\r\n        state.post = null;\r\n        state.loading = false;\r\n        return state;\r\n\r\n      case PostActionTypes.UPDATE_LIKES:\r\n        const foundPost = state.posts.find(\r\n          (post) => post.id === action.payload.id\r\n        );\r\n        if (foundPost) {\r\n          foundPost.likes = action.payload.likes;\r\n        }\r\n        state.posts = state.posts.map((post) => {\r\n          if (post.id === action.payload.id) return { ...foundPost };\r\n          return post;\r\n        });\r\n        state.loading = false;\r\n        return state;\r\n\r\n      case PostActionTypes.ADD_COMMENT:\r\n        state.post!.comments = [...state.post!.comments, { ...action.payload }];\r\n        state.loading = false;\r\n        return state;\r\n\r\n      case PostActionTypes.REMOVE_COMMENT:\r\n        state.post!.comments = state.post!.comments.filter(\r\n          (comm) => comm.id !== action.payload\r\n        );\r\n        state.loading = false;\r\n        return state;\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n);\r\n\r\nexport default reducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport alertsReducer from \"./alert\";\r\nimport authReducer from \"./auth\";\r\nimport profileReducer from \"./profile\";\r\nimport postReducer from \"./post\";\r\n\r\nconst reducers = combineReducers({\r\n  alert: alertsReducer,\r\n  auth: authReducer,\r\n  profile: profileReducer,\r\n  post: postReducer\r\n});\r\n\r\nexport default reducers;\r\n\r\nexport type RootState = ReturnType<typeof reducers>;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport reducers from \"./reducers\";\r\n\r\nexport const store = createStore(reducers, {}, applyMiddleware(thunk));\r\n","import { useMemo } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { actionCreators } from \"../redux/\";\r\n\r\nexport const useActions = () => {\r\n  const dispatch = useDispatch();\r\n  return useMemo(() => {\r\n    return bindActionCreators(actionCreators, dispatch);\r\n  }, [dispatch]);\r\n};\r\n","import { useSelector, TypedUseSelectorHook } from \"react-redux\";\r\n\r\nimport { RootState } from \"../redux\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { Route, Redirect, RouteProps } from \"react-router-dom\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useTypedSelector } from \"../../hooks\";\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst PrivateRoute: React.FC<RouteProps> = (props) => {\r\n  const { ...rest } = props;\r\n\r\n  /**\r\n   * Init the auth state\r\n   */\r\n  const { isAuthenticated, loading } = useTypedSelector((state) => state.auth);\r\n\r\n  if (!isAuthenticated && !loading) {\r\n    return <Redirect to=\"/login\" />;\r\n  } else {\r\n    return <Route {...rest} />;\r\n  }\r\n};\r\n\r\nexport default PrivateRoute;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  navbar: {\r\n    backgroundColor: \"#3f51b5db\",\r\n    \"& svg\": {\r\n      marginRight: \"0.35rem\"\r\n    }\r\n  },\r\n  menuButton: {\r\n    marginLeft: \"auto\"\r\n  },\r\n  menu: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flex: 3,\r\n    justifyContent: \"flex-end\",\r\n    \"& svg\": {\r\n      marginRight: \"0.35rem\"\r\n    },\r\n    \"& button\": {\r\n      margin: \"0 10px\",\r\n      fontSize: 16,\r\n      textTransform: \"initial\"\r\n    }\r\n  },\r\n  paper: {\r\n    background: \"#5a72fb\",\r\n    color: theme.palette.common.white\r\n  },\r\n  list: {\r\n    width: 205,\r\n    display: \"flex\",\r\n    justifyItems: \"center\",\r\n    \"& svg\": {\r\n      marginRight: \"0.35rem\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Fragment, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n/**\r\n * Imports Font Awesome Icons\r\n */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCode,\r\n  faUsers,\r\n  faUserPlus,\r\n  faSignInAlt,\r\n  faPowerOff,\r\n  faNewspaper,\r\n  faThLarge\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useActions, useTypedSelector } from \"../../hooks\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./Navbar.styles\";\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst Navbar: React.FC = (props) => {\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * Init the useTheme hook\r\n   */\r\n  const theme = useTheme();\r\n\r\n  /**\r\n   * Handles the mobile view\r\n   */\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n\r\n  /**\r\n   * Handles the tablet view\r\n   */\r\n  const isTablet = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n\r\n  /**\r\n   * Init the Drawer state\r\n   */\r\n  const [open, setOpen] = useState(false);\r\n\r\n  /**\r\n   * Handles routing\r\n   */\r\n  const routeTo = (url: string) => {\r\n    history.push(url);\r\n    setOpen(false);\r\n  };\r\n\r\n  /**\r\n   * Defines the routing functions\r\n   */\r\n  const goToHome = () => routeTo(\"/\");\r\n  const goToLogin = () => routeTo(\"/login\");\r\n  const goToRegister = () => routeTo(\"/register\");\r\n  const goToDevelopers = () => routeTo(\"/profiles\");\r\n  const goToPosts = () => routeTo(\"/posts\");\r\n  const goToDashboard = () => routeTo(\"/dashboard\");\r\n\r\n  /**\r\n   * Gets the history object\r\n   */\r\n  const history = useHistory();\r\n\r\n  /**\r\n   * Init the logout action\r\n   */\r\n  const { logout } = useActions();\r\n\r\n  /**\r\n   * Init the auth state\r\n   */\r\n  const { isAuthenticated } = useTypedSelector((state) => state.auth);\r\n\r\n  /**\r\n   * Handles opening the Drawer\r\n   */\r\n  const openDrawer = () => setOpen(true);\r\n\r\n  /**\r\n   * Handles closing the Drawer\r\n   */\r\n  const closeDrawer = () => setOpen(false);\r\n\r\n  /**\r\n   * Handles logging out the user and closing the drawer\r\n   */\r\n  const handleLogout = () => {\r\n    logout();\r\n    setOpen(false);\r\n  };\r\n\r\n  /**\r\n   * The menu will appear only to unauthenticated users\r\n   */\r\n  const guestLinks = (\r\n    <Fragment>\r\n      <Button color=\"inherit\" onClick={goToDevelopers}>\r\n        <FontAwesomeIcon icon={faUsers} />\r\n        Developers\r\n      </Button>\r\n      <Button color=\"inherit\" onClick={goToRegister}>\r\n        <FontAwesomeIcon icon={faUserPlus} />\r\n        Sign Up\r\n      </Button>\r\n      <Button color=\"inherit\" onClick={goToLogin}>\r\n        <FontAwesomeIcon icon={faSignInAlt} />\r\n        Sign In\r\n      </Button>\r\n    </Fragment>\r\n  );\r\n\r\n  /**\r\n   * The menu will appear only to unauthenticated users (MOBILE)\r\n   */\r\n  const guestLinksMobile = (\r\n    <List>\r\n      <ListItem button onClick={goToDevelopers}>\r\n        <FontAwesomeIcon icon={faUsers} />\r\n        <ListItemText primary=\"Developers\" />\r\n      </ListItem>\r\n      <Divider />\r\n      <ListItem button onClick={goToRegister}>\r\n        <FontAwesomeIcon icon={faUserPlus} />\r\n        <ListItemText primary=\"Sign Up\" />\r\n      </ListItem>\r\n      <Divider />\r\n      <ListItem button onClick={goToLogin}>\r\n        <FontAwesomeIcon icon={faSignInAlt} />\r\n        <ListItemText primary=\"Sign In\" />\r\n      </ListItem>\r\n      <Divider />\r\n    </List>\r\n  );\r\n\r\n  /**\r\n   * The menu will appear only to authenticated users\r\n   */\r\n  const authLinks = (\r\n    <Fragment>\r\n      <Button color=\"inherit\" onClick={goToDevelopers}>\r\n        <FontAwesomeIcon icon={faUsers} />\r\n        Developers\r\n      </Button>\r\n      <Button color=\"inherit\" onClick={goToPosts}>\r\n        <FontAwesomeIcon icon={faNewspaper} /> Posts\r\n      </Button>\r\n      <Button color=\"inherit\" onClick={goToDashboard}>\r\n        <FontAwesomeIcon icon={faThLarge} />\r\n        Dashboard\r\n      </Button>\r\n      <Button color=\"inherit\" onClick={logout}>\r\n        <FontAwesomeIcon icon={faPowerOff} />\r\n        Logout\r\n      </Button>\r\n    </Fragment>\r\n  );\r\n\r\n  /**\r\n   * The menu will appear only to authenticated users (MOBILE)\r\n   */\r\n  const authLinksMobile = (\r\n    <List>\r\n      <ListItem button onClick={goToDevelopers}>\r\n        <FontAwesomeIcon icon={faUsers} />\r\n        <ListItemText primary=\"Developers\" />\r\n      </ListItem>\r\n      <ListItem button onClick={goToPosts}>\r\n        <FontAwesomeIcon icon={faNewspaper} />\r\n        <ListItemText primary=\"Posts\" />\r\n      </ListItem>\r\n      <ListItem button onClick={goToDashboard}>\r\n        <FontAwesomeIcon icon={faThLarge} />\r\n        <ListItemText primary=\"Dashboard\" />\r\n      </ListItem>\r\n      <ListItem button onClick={handleLogout}>\r\n        <FontAwesomeIcon icon={faPowerOff} />\r\n        <ListItemText primary=\"Logout\" />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n\r\n  /**\r\n   * Handles the mobile view\r\n   */\r\n  if (isMobile || isTablet) {\r\n    return (\r\n      <Box className={classes.root}>\r\n        <AppBar position=\"fixed\" className={classes.navbar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              onClick={goToHome}\r\n            >\r\n              <FontAwesomeIcon icon={faCode} />\r\n              <Typography variant=\"h5\">DevConnector</Typography>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              onClick={openDrawer}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          data-testid=\"navbar-drawer-mobile\"\r\n          anchor=\"right\"\r\n          open={open}\r\n          onClose={closeDrawer}\r\n          classes={{\r\n            paper: classes.paper\r\n          }}\r\n        >\r\n          <Box className={classes.list} data-testid=\"navbar-list-container\">\r\n            {isAuthenticated ? authLinksMobile : guestLinksMobile}\r\n          </Box>\r\n        </Drawer>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <AppBar position=\"fixed\" className={classes.navbar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={goToHome}\r\n          >\r\n            <FontAwesomeIcon icon={faCode} />\r\n            <Typography variant=\"h5\">DevConnector</Typography>\r\n          </IconButton>\r\n          <Box className={classes.menu}>\r\n            {isAuthenticated ? authLinks : guestLinks}\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    fontSize: 14,\r\n    fontWeight: \"bold\",\r\n    borderRadius: 3,\r\n    padding: \"7px 14px\",\r\n    minHeight: 30,\r\n    boxShadow: \"none\"\r\n  },\r\n  anchor: {\r\n    top: 115\r\n  },\r\n  success: {\r\n    backgroundColor: \"#edfcf3\",\r\n    border: \"1px solid #55ba85\",\r\n    color: \"#55ba85\"\r\n  },\r\n  error: {\r\n    backgroundColor: \"#ffefef\",\r\n    border: \"1px solid #ff6363\",\r\n    color: \"#ff6363\"\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","/**\r\n * Imports Material UI Components\r\n */\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\n/**\r\n * External Imports\r\n */\r\nimport clsx from \"clsx\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./Alert.styles\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useTypedSelector } from \"../../hooks\";\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst Alert: React.FC = (props) => {\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * Handles getting the alert state\r\n   */\r\n  const { open, alert } = useTypedSelector((state) => state.alert);\r\n\r\n  /**\r\n   * Handles getting the snackbar classes\r\n   */\r\n  const getSnackbarClasses = () => {\r\n    return {\r\n      anchorOriginTopCenter: classes.anchor\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Handles getting the snackbar content props\r\n   */\r\n  const getContentProps = () => {\r\n    return {\r\n      classes: {\r\n        root: clsx(classes.root, {\r\n          [classes.success]: alert.severity === \"success\",\r\n          [classes.error]: alert.severity === \"error\"\r\n        })\r\n      }\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      classes={getSnackbarClasses()}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n      message={\r\n        <ul>\r\n          {alert.msg.map((msg) => (\r\n            <li key={msg}>{msg}</li>\r\n          ))}\r\n        </ul>\r\n      }\r\n      ContentProps={getContentProps()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    paddingTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  linkLogin: {\r\n    textDecoration: \"none\",\r\n    color: \"#3f51b5\",\r\n  },\r\n}));\r\n\r\nexport { useStyles };\r\n","import { useState, FormEvent, ChangeEvent } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useActions, useTypedSelector } from \"../../hooks\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./Register.styles\";\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst Register: React.FC = (props) => {\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * Init the auth state\r\n   */\r\n  const { isAuthenticated } = useTypedSelector((state) => state.auth);\r\n\r\n  const { register } = useActions();\r\n\r\n  const { dispatchAlert } = useActions();\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfirm: \"\"\r\n  });\r\n\r\n  const { name, email, password, passwordConfirm } = formData;\r\n\r\n  const onSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (password !== passwordConfirm) {\r\n      dispatchAlert([\"Passwords must match\"], \"error\");\r\n    } else {\r\n      register({ name, email, password });\r\n    }\r\n  };\r\n\r\n  const onChange = (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  /**\r\n   * Redirect if logged in\r\n   */\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={(e) => onSubmit(e)}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"Name\"\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={(e) => onChange(e)}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                value={email}\r\n                onChange={(e) => onChange(e)}\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                value={password}\r\n                onChange={(e) => onChange(e)}\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                value={passwordConfirm}\r\n                onChange={(e) => onChange(e)}\r\n                fullWidth\r\n                name=\"passwordConfirm\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                id=\"passwordConfirm\"\r\n                autoComplete=\"confirm-password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            value=\"Register\"\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/login\" className={classes.linkLogin}>\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  linkRegister: {\r\n    textDecoration: \"none\",\r\n    color: \"#3f51b5\",\r\n  },\r\n}));\r\n\r\nexport { useStyles };\r\n","import { useState, FormEvent, ChangeEvent } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOpenOutlinedIcon from \"@material-ui/icons/LockOpenOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useActions, useTypedSelector } from \"../../hooks\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./Login.styles\";\r\n\r\nconst Login: React.FC = () => {\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * Init the auth state\r\n   */\r\n  const { isAuthenticated } = useTypedSelector((state) => state.auth);\r\n\r\n  const { login } = useActions();\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  /**\r\n   * Redirect if logged in\r\n   */\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOpenOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={(e) => onSubmit(e)}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            value=\"Login\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link className={classes.linkRegister} to=\"/register\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    paddingTop: \"10rem\",\r\n  },\r\n}));\r\n\r\nexport { useStyles };\r\n","/**\r\n * Imports Material UI Components\r\n */\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./Spinner.styles\";\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst Spinner: React.FC = () => {\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    backgroundColor: \"#7074e4\",\r\n    color: \"#fff\",\r\n    marginTop: \"2rem\",\r\n    paddingTop: \"2rem\",\r\n    paddingBottom: \"2rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  gridSkills: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexDirection: \"column\"\r\n    },\r\n    \"& svg\": {\r\n      marginRight: \"0.35rem\"\r\n    }\r\n  },\r\n  avatar: {\r\n    width: \"7rem\",\r\n    height: \"7rem\"\r\n  },\r\n  profileName: {\r\n    paddingTop: \"1rem\"\r\n  },\r\n  skills: {\r\n    display: \"flex\",\r\n    \"& li\": {\r\n      paddingRight: \"1rem\"\r\n    }\r\n  },\r\n  skillsIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingRight: \"1rem\",\r\n    \"& svg\": {\r\n      color: \"#fff\",\r\n      marginRight: \"0.2rem\"\r\n    }\r\n  },\r\n  viewProfileBtn: {\r\n    marginTop: \"1rem\",\r\n    backgroundColor: \"#fff\",\r\n    \"& a\": {\r\n      textDecoration: \"none\",\r\n      color: \"inherit\"\r\n    },\r\n    color: \"#7074e4\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#5d61ce\",\r\n      color: \"#fff\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CheckOutlinedIcon from \"@material-ui/icons/CheckOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./ProfileItem.styles\";\r\n\r\n/**\r\n * Imports The Profile Interface\r\n */\r\nimport { ProfilePayload } from \"../../redux/types\";\r\n\r\n/**\r\n * Defines the interface for the component's props\r\n */\r\ninterface ProfileItemProps {\r\n  profile: ProfilePayload;\r\n}\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst ProfileItem: React.FC<ProfileItemProps> = (props) => {\r\n  const { profile } = props;\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper elevation={0} className={classes.paper}>\r\n      <Grid item lg={12} className={classes.grid}>\r\n        <Avatar src={profile.user.avatar} className={classes.avatar} />\r\n        <Typography variant=\"h4\" className={classes.profileName} gutterBottom>\r\n          {profile.user.name}\r\n        </Typography>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          {profile.status}{\" \"}\r\n          {profile.company && <span> at {profile.company}</span>}\r\n        </Typography>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          {profile.location && <Box>{profile.location}</Box>}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item lg={12} className={classes.gridSkills}>\r\n        {profile.skills.slice(0, 5).map((skill, index) => (\r\n          <Typography\r\n            key={index}\r\n            variant=\"subtitle2\"\r\n            className={classes.skills}\r\n            gutterBottom\r\n          >\r\n            <CheckOutlinedIcon />\r\n            {skill.toUpperCase()}\r\n          </Typography>\r\n        ))}\r\n      </Grid>\r\n\r\n      <Button variant=\"outlined\" className={classes.viewProfileBtn}>\r\n        <Link to={`/profile/${profile.user.id}`}>View Profile</Link>\r\n      </Button>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ProfileItem;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    marginTop: \"3rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  paragraph: {\r\n    marginTop: \"1rem\",\r\n    \"& svg\": {\r\n      marginRight: \"0.35rem\",\r\n      color: \"#3f51b5\"\r\n    }\r\n  },\r\n  noProfileFound: {\r\n    paddingTop: \"1.5rem\",\r\n    paddingLeft: \"1rem\"\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { useEffect } from \"react\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n/**\r\n * Imports Font Awesome Icons\r\n */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faConnectdevelop } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n/**\r\n * Imports Components\r\n */\r\nimport Spinner from \"../Spinner\";\r\nimport ProfileItem from \"../ProfileItem\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./Profiles.styles\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useActions, useTypedSelector } from \"../../hooks\";\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst Profiles: React.FC = () => {\r\n  /**\r\n   * Init the useActions Hook\r\n   */\r\n  const { getProfiles } = useActions();\r\n\r\n  /**\r\n   * Init the useTypedSelector hook\r\n   */\r\n  const { profiles, loading } = useTypedSelector((state) => state.profile);\r\n\r\n  useEffect(() => {\r\n    getProfiles();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Container maxWidth=\"md\" className={classes.container}>\r\n      <Grid container spacing={0} className={classes.container}>\r\n        <Grid item lg={12}>\r\n          <Typography variant=\"h3\" color=\"primary\">\r\n            Developers\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h5\"\r\n            color=\"textPrimary\"\r\n            className={classes.paragraph}\r\n          >\r\n            <FontAwesomeIcon icon={faConnectdevelop} />\r\n            Browse & Connect with Developers\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item lg={12}>\r\n          {profiles.length > 0 ? (\r\n            profiles.map((profile, index) => (\r\n              <ProfileItem key={index} profile={profile} />\r\n            ))\r\n          ) : (\r\n            <Typography variant=\"h6\" className={classes.noProfileFound}>\r\n              No profiles found.\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profiles;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    backgroundColor: \"#7074e4\",\r\n    color: \"#fff\",\r\n    marginTop: \"2rem\",\r\n    paddingTop: \"2rem\",\r\n    paddingBottom: \"2rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  gridSocials: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    \"& svg\": {\r\n      fontSize: \"2rem\",\r\n      margin: \"0 0.3rem\",\r\n      color: \"#fff\",\r\n      \"& :hover\": {\r\n        color: \"#bfbfbf\"\r\n      }\r\n    }\r\n  },\r\n  avatar: {\r\n    width: \"10rem\",\r\n    height: \"10rem\"\r\n  },\r\n  profileName: {\r\n    paddingTop: \"1rem\"\r\n  },\r\n  socials: {\r\n    paddingTop: \"0.8rem\",\r\n\r\n    \"& svg\": {\r\n      fontSize: \"2rem\",\r\n      marginRight: \"1rem\",\r\n      color: \"#fff\",\r\n      \"& :hover\": {\r\n        color: \"#bfbfbf\"\r\n      }\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","/**\r\n * Imports Material UI Components\r\n */\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport LanguageOutlinedIcon from \"@material-ui/icons/LanguageOutlined\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./ProfileTop.styles\";\r\n\r\n/**\r\n * Imports The Profile Interface\r\n */\r\nimport { ProfilePayload } from \"../../redux/types\";\r\n\r\n/**\r\n * Defines the props interface\r\n */\r\nexport interface ProfileTopProps {\r\n  profile: ProfilePayload;\r\n}\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst ProfileTop: React.FC<ProfileTopProps> = (props) => {\r\n  const { profile } = props;\r\n\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper elevation={4} className={classes.paper}>\r\n      <Grid item lg={12} className={classes.grid}>\r\n        <Avatar src={profile.user.avatar} className={classes.avatar} />\r\n        <Typography variant=\"h3\" className={classes.profileName} gutterBottom>\r\n          {profile.user.name}\r\n        </Typography>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          {profile.status}{\" \"}\r\n          {profile.company && <span> at {profile.company}</span>}\r\n        </Typography>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          {profile.location && <Box>{profile.location}</Box>}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item lg={12} className={classes.gridSocials}>\r\n        {profile.website && (\r\n          <Link href={profile.website}>\r\n            <LanguageOutlinedIcon />\r\n          </Link>\r\n        )}\r\n        {profile.social?.twitter && (\r\n          <Link href={profile.social.instagram}>\r\n            <TwitterIcon />\r\n          </Link>\r\n        )}\r\n        {profile.social?.facebook && (\r\n          <Link href={profile.social.facebook}>\r\n            <FacebookIcon />\r\n          </Link>\r\n        )}\r\n        {profile.social?.linkedin && (\r\n          <Link href={profile.social.linkedin}>\r\n            <LinkedInIcon />\r\n          </Link>\r\n        )}\r\n        {profile.social?.youtube && (\r\n          <Link href={profile.social.youtube}>\r\n            <YouTubeIcon />\r\n          </Link>\r\n        )}\r\n        {profile.social?.instagram && (\r\n          <Link href={profile.social.instagram}>\r\n            <InstagramIcon />\r\n          </Link>\r\n        )}\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ProfileTop;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    backgroundColor: \"#f5f5f5\",\r\n    color: \"#7074e4\",\r\n    marginTop: \"0.6rem\",\r\n    marginBottom: \"0.3rem\",\r\n    paddingTop: \"2rem\",\r\n    paddingBottom: \"2rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  skills: {\r\n    display: \"flex\",\r\n    \"& div\": {\r\n      paddingRight: \"1rem\"\r\n    }\r\n  },\r\n  gridSkills: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexDirection: \"column\"\r\n    },\r\n    \"& svg\": {\r\n      marginRight: \"0.35rem\"\r\n    }\r\n  },\r\n  skillsIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginRight: \"1rem\",\r\n    \"& svg\": {\r\n      color: \"#7074e4\",\r\n      marginRight: \"0.2rem\"\r\n    }\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  bio: {\r\n    fontSize: \"1.25rem\",\r\n    textAlign: \"center\"\r\n  },\r\n  divider: {\r\n    borderBottom: \"#000 1px dotted\",\r\n    paddingTop: \"1rem\",\r\n    paddingBottom: \"1rem\"\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","/**\r\n * Imports Material UI Components\r\n */\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport CheckOutlinedIcon from \"@material-ui/icons/CheckOutlined\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./ProfileAbout.styles\";\r\n\r\n/**\r\n * Imports The Profile Interface\r\n */\r\nimport { ProfilePayload } from \"../../redux/types\";\r\n\r\n/**\r\n * Defines the props interface\r\n */\r\nexport interface ProfileTopProps {\r\n  profile: ProfilePayload;\r\n}\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst ProfileAbout: React.FC<ProfileTopProps> = (props) => {\r\n  const { profile } = props;\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper elevation={4} className={classes.paper}>\r\n      {profile.bio && (\r\n        <Container maxWidth=\"md\" className={classes.container}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {profile.user.name.trim().split(\" \")[0]}'s Bio\r\n          </Typography>\r\n          <Typography variant=\"h6\" className={classes.bio} color=\"textPrimary\">\r\n            {profile.bio}\r\n          </Typography>\r\n        </Container>\r\n      )}\r\n      <Divider className={classes.divider} />\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Skill Set\r\n      </Typography>\r\n      <Grid item lg={12} className={classes.gridSkills}>\r\n        {profile.skills.slice(0, 5).map((skill, index) => (\r\n          <Typography\r\n            key={index}\r\n            className={classes.skills}\r\n            gutterBottom\r\n            color=\"textPrimary\"\r\n          >\r\n            <CheckOutlinedIcon />\r\n            {skill.toUpperCase()}\r\n          </Typography>\r\n        ))}\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ProfileAbout;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    borderBottom: \"#ccc 1px dotted\",\r\n    paddingTop: \"1rem\",\r\n    paddingBottom: \"1rem\",\r\n    \"&:last-of-type\": {\r\n      borderBottom: \"none\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { format, parseISO } from \"date-fns\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./ProfileExperience.styles\";\r\n\r\n/**\r\n * Imports The Profile Interface\r\n */\r\nimport { Experience } from \"../../redux/types\";\r\n\r\n/**\r\n * Defines the props interface\r\n */\r\nexport interface ProfileExperienceProps {\r\n  profile: Experience;\r\n}\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst ProfileExperience: React.FC<ProfileExperienceProps> = (props) => {\r\n  const { profile } = props;\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.container}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        {profile.company}\r\n      </Typography>\r\n      <Typography variant=\"h6\" gutterBottom color=\"textPrimary\">\r\n        {format(parseISO(profile.from), \"MM/dd/yyyy\")} -{\" \"}\r\n        {!profile.to ? \"Now\" : format(parseISO(profile.to), \"MM/dd/yyyy\")}\r\n      </Typography>\r\n      <Typography variant=\"h6\" gutterBottom color=\"textPrimary\">\r\n        <strong>Position</strong>: {profile.title}\r\n      </Typography>\r\n      <Typography variant=\"h6\" gutterBottom color=\"textPrimary\">\r\n        <strong>Description</strong>: {profile.description}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProfileExperience;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    borderBottom: \"#ccc 1px dotted\",\r\n    paddingTop: \"1rem\",\r\n    paddingBottom: \"1rem\",\r\n    \"&:last-of-type\": {\r\n      borderBottom: \"none\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { format, parseISO } from \"date-fns\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./ProfileEducation.styles\";\r\n\r\n/**\r\n * Imports The Profile Interface\r\n */\r\nimport { Education } from \"../../redux/types\";\r\n\r\n/**\r\n * Defines the props interface\r\n */\r\nexport interface ProfileEducationProps {\r\n  profile: Education;\r\n}\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst ProfileEducation: React.FC<ProfileEducationProps> = (props) => {\r\n  const { profile } = props;\r\n\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.container}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        {profile.school}\r\n      </Typography>\r\n      <Typography variant=\"h6\" gutterBottom color=\"textPrimary\">\r\n        {format(parseISO(profile.from), \"MM/dd/yyyy\")} -{\" \"}\r\n        {!profile.to ? \"Now\" : format(parseISO(profile.to), \"MM/dd/yyyy\")}\r\n      </Typography>\r\n      <Typography variant=\"h6\" gutterBottom color=\"textPrimary\">\r\n        <strong>Degree</strong>: {profile.degree}\r\n      </Typography>\r\n      <Typography variant=\"h6\" gutterBottom color=\"textPrimary\">\r\n        <strong>Field of study</strong>: {profile.fieldofstudy}\r\n      </Typography>\r\n      <Typography variant=\"h6\" gutterBottom color=\"textPrimary\">\r\n        <strong>Description</strong>: {profile.description}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProfileEducation;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"#f5f5f5\",\r\n    color: \"#7074e4\",\r\n    marginTop: \"0.8rem\",\r\n    marginRight: \"1rem\",\r\n    marginLeft: \"1rem\",\r\n    paddingTop: \"1rem\",\r\n    paddingBottom: \"1rem\",\r\n    paddingLeft: \"2rem\",\r\n    paddingRight: \"2rem\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexDirection: \"column\"\r\n    }\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\"\r\n  },\r\n  gridGithub: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    \"& svg\": {\r\n      marginRight: \"0.35rem\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { useEffect } from \"react\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n/**\r\n * Imports Font Awesome Icons\r\n */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faEye, faCodeBranch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./ProfileGithub.styles\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useActions, useTypedSelector } from \"../../hooks\";\r\n\r\n/**\r\n * Defines the props interface\r\n */\r\nexport interface ProfileGithubProps {\r\n  username: string;\r\n}\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst ProfileGithub: React.FC<ProfileGithubProps> = (props) => {\r\n  const { username } = props;\r\n\r\n  /**\r\n   * Handles getting the GitHub Repos\r\n   */\r\n  const { getGithubRepos } = useActions();\r\n\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n    // eslint-disable-next-line\r\n  }, [getGithubRepos]);\r\n\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * Handles getting the profile state\r\n   */\r\n  const { repos } = useTypedSelector((state) => state.profile);\r\n\r\n  return (\r\n    <Grid container spacing={2} className={classes.container}>\r\n      {repos &&\r\n        repos.map((repo, index) => (\r\n          <Paper key={index} elevation={4} className={classes.paper}>\r\n            <Grid item xs={12} lg={10} className={classes.grid}>\r\n              <Typography gutterBottom>\r\n                <Link href={repo.html_url}>{repo.name}</Link>\r\n              </Typography>\r\n              {repo.description !== null ? (\r\n                <Typography>{repo.description}</Typography>\r\n              ) : (\r\n                <Typography\r\n                  variant=\"subtitle2\"\r\n                  color=\"textPrimary\"\r\n                  gutterBottom\r\n                >\r\n                  No description available.\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12} lg={2} className={classes.gridGithub}>\r\n              <Box>\r\n                <FontAwesomeIcon icon={faStar} />\r\n                {repo.stargazers_count}\r\n              </Box>\r\n              <Box>\r\n                <FontAwesomeIcon icon={faEye} />\r\n                {repo.watchers_count}\r\n              </Box>\r\n              <Box>\r\n                <FontAwesomeIcon icon={faCodeBranch} />\r\n                {repo.forks_count}\r\n              </Box>\r\n            </Grid>\r\n          </Paper>\r\n        ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProfileGithub;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    marginTop: \"7rem\",\r\n    height: \"110vh\"\r\n  },\r\n  gridContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  experience: {\r\n    backgroundColor: \"#f5f5f5\",\r\n    color: \"#7074e4\",\r\n    marginTop: \"0.4rem\",\r\n    paddingTop: \"2rem\",\r\n    paddingBottom: \"1rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    paddingLeft: \"2rem\"\r\n  },\r\n  editProfilesBtn: {\r\n    marginLeft: \"1rem\",\r\n    marginTop: \"1rem\",\r\n    backgroundColor: \"#fff\",\r\n    \"& a\": {\r\n      textDecoration: \"none\",\r\n      color: \"inherit\"\r\n    },\r\n    color: \"#D4A16A\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#D4A16A\",\r\n      color: \"#fff\"\r\n    }\r\n  },\r\n  backProfilesBtn: {\r\n    marginTop: \"1rem\",\r\n    backgroundColor: \"#fff\",\r\n    \"& a\": {\r\n      textDecoration: \"none\",\r\n      color: \"inherit\"\r\n    },\r\n    color: \"#7074e4\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#5d61ce\",\r\n      color: \"#fff\"\r\n    }\r\n  },\r\n  noData: {\r\n    paddingTop: \"1rem\",\r\n    paddingLeft: \"1rem\"\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { useEffect, Fragment } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n/**\r\n * Imports Components\r\n */\r\nimport ProfileTop from \"../ProfileTop\";\r\nimport ProfileAbout from \"../ProfileAbout\";\r\nimport ProfileExperience from \"../ProfileExperience\";\r\nimport ProfileEducation from \"../ProfileEducation\";\r\nimport ProfileGithub from \"../ProfileGithub\";\r\nimport Spinner from \"../Spinner\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./Profile.styles\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useActions, useTypedSelector } from \"../../hooks\";\r\n\r\ninterface ParamTypes {\r\n  id: string;\r\n}\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst Profile: React.FC = () => {\r\n  const { id } = useParams<ParamTypes>();\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * Init the useActions hook\r\n   */\r\n  const { getProfileById } = useActions();\r\n\r\n  /**\r\n   * Init the useTypedSelector hook\r\n   */\r\n  const { profile, loading } = useTypedSelector((state) => state.profile);\r\n  const { isAuthenticated, user } = useTypedSelector((state) => state.auth);\r\n  const loadingAuth = useTypedSelector((state) => state.auth.loading);\r\n\r\n  useEffect(() => {\r\n    getProfileById(id);\r\n  }, [getProfileById, id]);\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" className={classes.container}>\r\n      {profile === null || loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Button variant=\"outlined\" className={classes.backProfilesBtn}>\r\n            <Link to=\"/profiles\">Back to Profiles</Link>\r\n          </Button>\r\n          {isAuthenticated &&\r\n            loadingAuth === false &&\r\n            user.id === profile.user.id && (\r\n              <Button variant=\"outlined\" className={classes.editProfilesBtn}>\r\n                <Link to=\"/edit-profile\">Edit Profile</Link>\r\n              </Button>\r\n            )}\r\n\r\n          <ProfileTop profile={profile} />\r\n          <ProfileAbout profile={profile} />\r\n          <Grid container spacing={2} className={classes.gridContainer}>\r\n            <Grid item xs={12} lg={6}>\r\n              <Paper elevation={4} className={classes.experience}>\r\n                <Typography variant=\"h4\">Experience</Typography>\r\n                {profile.experience.length > 0 ? (\r\n                  <Fragment>\r\n                    {profile.experience.map((exp, index) => (\r\n                      <ProfileExperience key={index} profile={exp} />\r\n                    ))}\r\n                  </Fragment>\r\n                ) : (\r\n                  <Typography\r\n                    variant=\"h6\"\r\n                    color=\"textPrimary\"\r\n                    className={classes.noData}\r\n                  >\r\n                    No experience credentials\r\n                  </Typography>\r\n                )}\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} lg={6}>\r\n              <Paper elevation={4} className={classes.experience}>\r\n                <Typography variant=\"h4\">Education</Typography>\r\n                {profile.education.length > 0 ? (\r\n                  <Fragment>\r\n                    {profile.education.map((edu, index) => (\r\n                      <ProfileEducation key={index} profile={edu} />\r\n                    ))}\r\n                  </Fragment>\r\n                ) : (\r\n                  <Typography\r\n                    variant=\"h6\"\r\n                    color=\"textPrimary\"\r\n                    className={classes.noData}\r\n                  >\r\n                    No education credentials\r\n                  </Typography>\r\n                )}\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item lg={12}>\r\n            {profile.githubusername && (\r\n              <ProfileGithub username={profile.githubusername} />\r\n            )}\r\n          </Grid>\r\n        </Fragment>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  button: {\r\n    marginTop: \"1rem\",\r\n    marginRight: \"1rem\",\r\n    backgroundColor: \"#fff\",\r\n    \"& a\": {\r\n      textDecoration: \"none\",\r\n      color: \"inherit\"\r\n    },\r\n    color: \"#7074e4\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#5d61ce\",\r\n      color: \"#fff\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n/**\r\n * Imports Font Awesome Icons\r\n */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faGraduationCap } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faBlackTie } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./DashboardActions.styles\";\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst DashboardActions: React.FC = () => {\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box>\r\n      <Button variant=\"outlined\" className={classes.button}>\r\n        <Link to=\"/edit-profile\">\r\n          <FontAwesomeIcon icon={faUserCircle} /> Edit Profile\r\n        </Link>\r\n      </Button>\r\n      <Button variant=\"outlined\" className={classes.button}>\r\n        <Link to=\"/add-experience\">\r\n          <FontAwesomeIcon icon={faBlackTie} /> Add Experience\r\n        </Link>\r\n      </Button>\r\n      <Button variant=\"outlined\" className={classes.button}>\r\n        <Link to=\"/add-education\">\r\n          <FontAwesomeIcon icon={faGraduationCap} /> Add Education\r\n        </Link>\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DashboardActions;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    marginTop: \"3rem\"\r\n  },\r\n  table: {\r\n    minWidth: 550\r\n  },\r\n  deleteButton: {\r\n    color: \"red\"\r\n  },\r\n  tableData: {\r\n    \"& td\": {\r\n      color: \"#3f51b5\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { format, parseISO } from \"date-fns\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./Experience.styles\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useActions } from \"../../hooks\";\r\n\r\n/**\r\n * Imports The Profile Interface\r\n */\r\nimport { ProfilePayload } from \"../../redux/types\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\n/**\r\n * Defines the props interface\r\n */\r\nexport interface ExperienceProps {\r\n  profile: ProfilePayload;\r\n}\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst Experience: React.FC<ExperienceProps> = (props) => {\r\n  const { profile } = props;\r\n\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * Init the deleteExperience action\r\n   */\r\n  const { deleteExperience } = useActions();\r\n\r\n  /**\r\n   * Checks if the user has experiences added\r\n   */\r\n  if (!profile.experience) return null;\r\n\r\n  /**\r\n   * Init the Table Body\r\n   */\r\n  const experiences = profile.experience.map((exp, index) => (\r\n    <TableRow key={index} className={classes.tableData}>\r\n      <TableCell align=\"left\">{exp.company}</TableCell>\r\n      <TableCell>{exp.title}</TableCell>\r\n      <TableCell align=\"left\">\r\n        {format(parseISO(exp.from), \"MM/dd/yyyy\")} -{\" \"}\r\n        {!exp.to ? \"Now\" : format(parseISO(exp.to), \"MM/dd/yyyy\")}\r\n      </TableCell>\r\n      <TableCell align=\"left\">\r\n        <Button\r\n          className={classes.deleteButton}\r\n          onClick={() => deleteExperience(exp._id)}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </TableCell>\r\n    </TableRow>\r\n  ));\r\n\r\n  return (\r\n    <Box className={classes.container}>\r\n      <Typography variant=\"h5\" color=\"primary\" gutterBottom>\r\n        Experience Credentials\r\n      </Typography>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"left\">Company</TableCell>\r\n              <TableCell align=\"left\">Title</TableCell>\r\n              <TableCell align=\"left\">Years</TableCell>\r\n              <TableCell align=\"left\">Remove experience</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>{experiences}</TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Experience;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    marginTop: \"3rem\"\r\n  },\r\n  table: {\r\n    minWidth: 550\r\n  },\r\n  deleteButton: {\r\n    color: \"red\"\r\n  },\r\n  tableData: {\r\n    \"& td\": {\r\n      color: \"#3f51b5\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { format, parseISO } from \"date-fns\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./Education.styles\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useActions } from \"../../hooks\";\r\n\r\n/**\r\n * Imports The Profile Interface\r\n */\r\nimport { ProfilePayload } from \"../../redux/types\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\n/**\r\n * Defines the props interface\r\n */\r\nexport interface EducationProps {\r\n  profile: ProfilePayload;\r\n}\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst Education: React.FC<EducationProps> = (props) => {\r\n  const { profile } = props;\r\n\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * Init the deleteEducation action\r\n   */\r\n  const { deleteEducation } = useActions();\r\n\r\n  /**\r\n   * Checks if the user has educations added\r\n   */\r\n  if (!profile.education) return null;\r\n\r\n  /**\r\n   * Init the Table Body\r\n   */\r\n  const educations = profile.education.map((edu, index) => (\r\n    <TableRow key={index} className={classes.tableData}>\r\n      <TableCell align=\"left\">{edu.school}</TableCell>\r\n      <TableCell>{edu.degree}</TableCell>\r\n      <TableCell align=\"left\">\r\n        {format(parseISO(edu.from), \"MM/dd/yyyy\")} -{\" \"}\r\n        {!edu.to ? \"Now\" : format(parseISO(edu.to), \"MM/dd/yyyy\")}\r\n      </TableCell>\r\n      <TableCell align=\"left\">\r\n        <Button\r\n          className={classes.deleteButton}\r\n          onClick={() => deleteEducation(edu._id)}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </TableCell>\r\n    </TableRow>\r\n  ));\r\n\r\n  return (\r\n    <Box className={classes.container}>\r\n      <Typography variant=\"h5\" color=\"primary\" gutterBottom>\r\n        Education Credentials\r\n      </Typography>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"left\">School</TableCell>\r\n              <TableCell align=\"left\">Degree</TableCell>\r\n              <TableCell align=\"left\">Years</TableCell>\r\n              <TableCell align=\"left\">Remove education</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>{educations}</TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Education;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    marginTop: \"7rem\"\r\n  },\r\n  userIcon: {\r\n    marginRight: \"0.5rem\",\r\n    color: \"#3f51b5\"\r\n  },\r\n  deleteBtns: {\r\n    marginTop: \"4rem\",\r\n    \"& button\": {\r\n      marginRight: \"2rem\",\r\n      marginBottom: \"1rem\",\r\n      backgroundColor: \"#fff\",\r\n      \"& a\": {\r\n        textDecoration: \"none\",\r\n        color: \"inherit\"\r\n      },\r\n      color: \"red\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"red\",\r\n        color: \"#fff\"\r\n      }\r\n    }\r\n  },\r\n  deleteBtn: {\r\n    marginTop: \"0.5rem\",\r\n    marginLeft: \"1rem\",\r\n    backgroundColor: \"#fff\",\r\n    color: \"red\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"red\",\r\n      color: \"#fff\"\r\n    }\r\n  },\r\n  createProfileBtn: {\r\n    marginTop: \"0.5rem\",\r\n    backgroundColor: \"#fff\",\r\n    \"& a\": {\r\n      textDecoration: \"none\",\r\n      color: \"inherit\"\r\n    },\r\n    color: \"#7074e4\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#5d61ce\",\r\n      color: \"#fff\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Fragment, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n/**\r\n * Imports Font Awesome Icons\r\n */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\n/**\r\n * Imports Components\r\n */\r\nimport Spinner from \"../Spinner\";\r\nimport DashboardActions from \"../DashboardActions\";\r\nimport Experience from \"../Experience\";\r\nimport Education from \"../Education\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./Dashboard.styles\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useActions, useTypedSelector } from \"../../hooks\";\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst Dashboard: React.FC = () => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * Handles getting the current profile\r\n   */\r\n  const { getCurrentProfile } = useActions();\r\n\r\n  /**\r\n   * Handles deleting the profile\r\n   */\r\n  const { deleteProfile } = useActions();\r\n\r\n  /**\r\n   * Handles deleting the account, including the profile,\r\n   * posts and comments.\r\n   */\r\n  const { deleteAccount } = useActions();\r\n\r\n  /**\r\n   * Handles getting the user state\r\n   */\r\n  const { user } = useTypedSelector((state) => state.auth);\r\n\r\n  /**\r\n   * Handles getting the profile state\r\n   */\r\n  const { profile, loading } = useTypedSelector((state) => state.profile);\r\n\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Container maxWidth=\"lg\" className={classes.container}>\r\n      <Typography variant=\"h4\" color=\"primary\" gutterBottom>\r\n        Dashboard\r\n      </Typography>\r\n      <Typography variant=\"h5\" color=\"textPrimary\" gutterBottom>\r\n        <FontAwesomeIcon icon={faUser} className={classes.userIcon} />\r\n        Welcome, {user && user.name}\r\n      </Typography>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          <Experience profile={profile} />\r\n          <Education profile={profile} />\r\n          <Box className={classes.deleteBtns}>\r\n            <Button variant=\"outlined\" onClick={() => deleteAccount()}>\r\n              Delete Account\r\n            </Button>\r\n            <Button variant=\"outlined\" onClick={() => deleteProfile()}>\r\n              Delete Profile\r\n            </Button>\r\n          </Box>\r\n        </Fragment>\r\n      ) : (\r\n        <Box>\r\n          <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\r\n            You have not yet set up a profile, please add some info\r\n          </Typography>\r\n          <Button variant=\"outlined\" className={classes.createProfileBtn}>\r\n            <Link to=\"/create-profile\">Create Profile</Link>\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            className={classes.deleteBtn}\r\n            onClick={() => deleteAccount()}\r\n          >\r\n            Delete Account\r\n          </Button>\r\n        </Box>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","export default __webpack_public_path__ + \"static/media/showcase.b5f3a7ca.png\";","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n/**\r\n * Assets Imports\r\n */\r\nimport image from \"./showcase.png\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    backgroundImage: `url(${image})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n    height: \"100%\"\r\n  },\r\n  darkOverLay: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.7)\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    color: \"#fff\"\r\n  },\r\n  title: {\r\n    color: \"#fff\",\r\n    paddingTop: \"20rem\"\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  buttons: {\r\n    paddingTop: \"2rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    \"& > *\": {\r\n      margin: \"0 0.5rem\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { useHistory, Redirect } from \"react-router-dom\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useTypedSelector } from \"../../hooks\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./Landing.styles\";\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst Landing: React.FC = () => {\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * Init the auth state\r\n   */\r\n  const { isAuthenticated } = useTypedSelector((state) => state.auth);\r\n\r\n  /**\r\n   * Gets the history object\r\n   */\r\n  const history = useHistory();\r\n\r\n  /**\r\n   * Handles routing\r\n   */\r\n  const routeTo = (url: string) => {\r\n    history.push(url);\r\n  };\r\n\r\n  /**\r\n   * Defines the routing functions\r\n   */\r\n  const goToLogin = () => routeTo(\"/login\");\r\n  const goToRegister = () => routeTo(\"/register\");\r\n\r\n  /**\r\n   * Redirect if logged in\r\n   */\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.darkOverLay}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Typography variant=\"h2\" gutterBottom className={classes.title}>\r\n            {\"Developer Connector\"}\r\n          </Typography>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            {\r\n              \"Create Link developer profile/portfolio, share posts and get help from other developers\"\r\n            }\r\n          </Typography>\r\n          <div className={classes.buttons}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={goToRegister}>\r\n              {\"Sign Up\"}\r\n            </Button>\r\n            <Button variant=\"contained\" onClick={goToLogin}>\r\n              {\"Sign In\"}\r\n            </Button>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  avatar: {\r\n    width: \"4rem\",\r\n    height: \"4rem\"\r\n  },\r\n  paper: {\r\n    backgroundColor: \"#8c8c8c7a\",\r\n    color: \"#fff\",\r\n    marginTop: \"2rem\",\r\n    paddingTop: \"2rem\",\r\n    paddingLeft: \"2rem\",\r\n    paddingBottom: \"1rem\",\r\n    paddingRight: \"2rem\"\r\n  },\r\n  gridBtn: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    paddingTop: \"1rem\"\r\n  },\r\n  postButton: {\r\n    backgroundColor: \"#fff\",\r\n    color: \"#3f51b5\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#3f51b5\",\r\n      color: \"#fff\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { useState } from \"react\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n/**\r\n * Imports Font Awesome Icons\r\n */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPaperPlane } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./PostForm.styles\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useActions, useTypedSelector } from \"../../hooks\";\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst PostForm: React.FC = () => {\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * Handles adding a post\r\n   */\r\n  const { addPost } = useActions();\r\n\r\n  /**\r\n   * Handles getting the state of the user\r\n   */\r\n  const { user } = useTypedSelector((state) => state.auth);\r\n\r\n  /**\r\n   * Init the text area state\r\n   */\r\n  const [text, setText] = useState(\"\");\r\n\r\n  /**\r\n   * Handles submitting the form\r\n   */\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    addPost({ text });\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={0} className={classes.paper}>\r\n      <Grid container spacing={0}>\r\n        <Grid item lg={2}>\r\n          <Avatar src={user.avatar} className={classes.avatar} />\r\n        </Grid>\r\n        <Grid item xs={12} lg={10}>\r\n          <form onSubmit={handleSubmit}>\r\n            <TextField\r\n              id=\"text\"\r\n              name=\"text\"\r\n              label=\"What's happening?\"\r\n              value={text}\r\n              fullWidth\r\n              multiline\r\n              rowsMax={10}\r\n              onChange={(e) => setText(e.target.value)}\r\n            />\r\n            <Grid item lg={12} className={classes.gridBtn}>\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={!text}\r\n                variant=\"outlined\"\r\n                value=\"Create Post\"\r\n                className={classes.postButton}\r\n              >\r\n                Post\r\n                <FontAwesomeIcon icon={faPaperPlane} />\r\n              </Button>\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    backgroundColor: \"#fff\",\r\n    color: \"#7074e4\",\r\n    marginTop: \"2rem\",\r\n    paddingTop: \"2rem\",\r\n    paddingLeft: \"2rem\",\r\n    paddingBottom: \"2rem\",\r\n    paddingRight: \"2rem\"\r\n  },\r\n  avatar: {\r\n    width: \"6rem\",\r\n    height: \"6rem\"\r\n  },\r\n  user: {\r\n    \"& a\": {\r\n      textDecoration: \"none\",\r\n      color: \"inherit\"\r\n    }\r\n  },\r\n  badgeIcon: {\r\n    \"& .MuiBadge-anchorOriginTopRightRectangle\": {\r\n      top: \"0.8rem\",\r\n      right: \"-0.3rem\"\r\n    }\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  actionsButtons: {\r\n    paddingTop: \"1rem\",\r\n    \"& button\": {\r\n      marginRight: \"0.5rem\"\r\n    }\r\n  },\r\n  deletePost: {\r\n    backgroundColor: \"#fff\",\r\n    color: \"red\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"red\",\r\n      color: \"#fff\"\r\n    }\r\n  },\r\n  likePost: {\r\n    backgroundColor: \"#fff\",\r\n    color: \"#3f51b5\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#3f51b5b8\",\r\n      color: \"#fff\"\r\n    }\r\n  },\r\n  likedPost: {\r\n    backgroundColor: \"#3f51b5\",\r\n    color: \"#fff\"\r\n  },\r\n  discussion: {\r\n    color: \"#D4A16A\",\r\n    padding: \"0.3rem 3rem\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#D4A16A\",\r\n      color: \"#fff\"\r\n    },\r\n    \"& a\": {\r\n      textDecoration: \"none\",\r\n      color: \"inherit\"\r\n    }\r\n  },\r\n  commentIcon: {\r\n    fontSize: \"1rem\"\r\n  },\r\n  likedBy: {\r\n    paddingTop: \"1rem\"\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * External Imports\r\n */\r\nimport { format, parseISO } from \"date-fns\";\r\nimport clsx from \"clsx\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\n\r\n/**\r\n * Imports Font Awesome Icons\r\n */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faThumbsUp, faCommentDots } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./PostItem.styles\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useActions, useTypedSelector } from \"../../hooks\";\r\n\r\n/**\r\n * Imports The Post Interface\r\n */\r\nimport { PostPayload } from \"../../redux/types\";\r\n\r\n/**\r\n * Defines the props interface\r\n */\r\nexport interface PostItemProps {\r\n  post: PostPayload;\r\n  showActions: boolean;\r\n}\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst PostItem: React.FC<PostItemProps> = (props) => {\r\n  const { post, showActions } = props;\r\n\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * Handles adding / removing a like and deleting a post\r\n   */\r\n  const { addLike, removeLike, deletePost } = useActions();\r\n\r\n  /**\r\n   * Handles getting the auth state\r\n   */\r\n  const { loading, user } = useTypedSelector((state) => state.auth);\r\n\r\n  const likePostAction = () => {\r\n    if (post.likes.find((like) => like.user === user.id)) {\r\n      removeLike(post.id);\r\n    } else {\r\n      addLike(post.id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={2} className={classes.paper}>\r\n      <Grid container spacing={1}>\r\n        <Grid item lg={2} className={classes.grid}>\r\n          <Box className={classes.user}>\r\n            <Link to={`/profile/${post.user}`}>\r\n              <Avatar src={post.avatar} className={classes.avatar} />\r\n              <Typography variant=\"h6\">{post.name}</Typography>\r\n            </Link>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item lg={9}>\r\n          <Box>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              {post.text}\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textPrimary\" gutterBottom>\r\n              Posted on {format(parseISO(post.date), \"MM/dd/yyyy\")}\r\n            </Typography>\r\n          </Box>\r\n          {showActions && (\r\n            <Box className={classes.actionsButtons}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                className={clsx(\r\n                  classes.likePost,\r\n                  !!post.likes.find((like) => like.user === user.id) &&\r\n                    classes.likedPost\r\n                )}\r\n                onClick={likePostAction}\r\n              >\r\n                <FontAwesomeIcon icon={faThumbsUp} />\r\n              </Button>\r\n              <Badge\r\n                badgeContent={post.comments.length}\r\n                max={99}\r\n                color=\"primary\"\r\n                className={classes.badgeIcon}\r\n              >\r\n                <Link to={`/posts/${post.id}`}>\r\n                  <Button variant=\"outlined\" className={classes.discussion}>\r\n                    <FontAwesomeIcon\r\n                      className={classes.commentIcon}\r\n                      icon={faCommentDots}\r\n                    />\r\n                  </Button>\r\n                </Link>\r\n              </Badge>\r\n            </Box>\r\n          )}\r\n          {post.likes.length > 0 && (\r\n            <Typography variant=\"subtitle2\" className={classes.likedBy}>\r\n              Post liked by {post.likes.length}{\" \"}\r\n              {post.likes.length > 1 ? \"people\" : \"person\"}\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n        <Grid item lg={1}>\r\n          {!loading && post.user === user.id && (\r\n            <Button\r\n              variant=\"outlined\"\r\n              className={classes.deletePost}\r\n              onClick={() => deletePost(post.id)}\r\n            >\r\n              <FontAwesomeIcon icon={faTrash} />\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PostItem;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    marginTop: \"7rem\",\r\n    height: \"110vh\"\r\n  },\r\n  paragraph: {\r\n    marginTop: \"1rem\",\r\n    \"& svg\": {\r\n      marginRight: \"0.35rem\",\r\n      color: \"#3f51b5\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { useEffect } from \"react\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n/**\r\n * Imports Components\r\n */\r\nimport Spinner from \"../Spinner\";\r\nimport PostForm from \"../PostForm\";\r\nimport PostItem from \"../PostItem\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./Posts.styles\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useActions, useTypedSelector } from \"../../hooks\";\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst Posts: React.FC = () => {\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * Handles getting the posts\r\n   */\r\n  const { getPosts } = useActions();\r\n\r\n  /**\r\n   * Handles getting the posts state\r\n   */\r\n  const { posts, loading } = useTypedSelector((state) => state.post);\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Container maxWidth=\"md\" className={classes.container}>\r\n      <Typography variant=\"h3\" color=\"primary\">\r\n        Posts\r\n      </Typography>\r\n      <Typography\r\n        variant=\"h5\"\r\n        color=\"textPrimary\"\r\n        className={classes.paragraph}\r\n      >\r\n        Welcome to the Community\r\n      </Typography>\r\n      <PostForm />\r\n      {posts.map((post) => (\r\n        <PostItem key={post.id} post={post} showActions={true} />\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    backgroundColor: \"#8c8c8c7a\",\r\n    color: \"#fff\",\r\n    marginTop: \"1rem\",\r\n    paddingTop: \"2rem\",\r\n    paddingLeft: \"2rem\",\r\n    paddingBottom: \"1rem\",\r\n    paddingRight: \"2rem\"\r\n  },\r\n  gridBtn: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    paddingTop: \"1rem\"\r\n  },\r\n  postButton: {\r\n    backgroundColor: \"#fff\",\r\n    color: \"#3f51b5\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#3f51b5\",\r\n      color: \"#fff\"\r\n    }\r\n  },\r\n  avatar: {\r\n    width: \"4rem\",\r\n    height: \"4rem\"\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { useState } from \"react\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./CommentForm.styles\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useActions, useTypedSelector } from \"../../hooks\";\r\n\r\n/**\r\n * Imports The Comment Interface\r\n */\r\nimport { PostPayload } from \"../../redux/types\";\r\n\r\n/**\r\n * Defines the props interface\r\n */\r\nexport interface CommentFormProps {\r\n  post: PostPayload;\r\n}\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst CommentForm: React.FC<CommentFormProps> = (props) => {\r\n  const { post } = props;\r\n\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * Handles adding a comment\r\n   */\r\n  const { addComment } = useActions();\r\n\r\n  /**\r\n   * Handles getting the user state\r\n   */\r\n  const { user } = useTypedSelector((state) => state.auth);\r\n\r\n  /**\r\n   * Init the input text hook\r\n   */\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    addComment(post.id, { text });\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={2} className={classes.paper}>\r\n      <Grid container spacing={0}>\r\n        <Grid item lg={2}>\r\n          <Avatar src={user.avatar} className={classes.avatar} />\r\n        </Grid>\r\n        <Grid item xs={12} lg={10}>\r\n          <form onSubmit={handleSubmit}>\r\n            <TextField\r\n              id=\"text\"\r\n              name=\"text\"\r\n              label=\"Leave a comment\"\r\n              value={text}\r\n              fullWidth\r\n              multiline\r\n              rowsMax={10}\r\n              onChange={(e) => setText(e.target.value)}\r\n            />\r\n            <Grid item lg={12} className={classes.gridBtn}>\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={!text}\r\n                variant=\"outlined\"\r\n                value=\"Create Post\"\r\n                className={classes.postButton}\r\n              >\r\n                Comment\r\n              </Button>\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  avatar: {\r\n    width: \"2rem\",\r\n    height: \"2rem\"\r\n  },\r\n  gridUser: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  paper: {\r\n    backgroundColor: \"#0400ff8a\",\r\n    color: \"#fff\",\r\n    marginTop: \"1rem\",\r\n    paddingTop: \"1rem\",\r\n    paddingLeft: \"1rem\",\r\n    paddingBottom: \"1rem\",\r\n    paddingRight: \"1rem\"\r\n  },\r\n  deleteComm: {\r\n    backgroundColor: \"#fff\",\r\n    color: \"red\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"red\",\r\n      color: \"#fff\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","/**\r\n * External Imports\r\n */\r\nimport { format, parseISO } from \"date-fns\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n/**\r\n * Imports Font Awesome Icons\r\n */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./CommentItem.styles\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useActions, useTypedSelector } from \"../../hooks\";\r\n\r\n/**\r\n * Imports The Comment Interface\r\n */\r\nimport { PostPayload, Comment } from \"../../redux/types\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\n/**\r\n * Defines the props interface\r\n */\r\nexport interface CommentItemProps {\r\n  post: PostPayload;\r\n  comment: Comment;\r\n}\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst CommentItem: React.FC<CommentItemProps> = (props) => {\r\n  const { post, comment } = props;\r\n\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * Handles getting the auth state\r\n   */\r\n  const { user, loading } = useTypedSelector((state) => state.auth);\r\n\r\n  /**\r\n   * Handles deleting a comment\r\n   */\r\n  const { deleteComment } = useActions();\r\n\r\n  return (\r\n    <Paper elevation={0} className={classes.paper}>\r\n      <Grid container spacing={1}>\r\n        <Grid item lg={2} className={classes.gridUser}>\r\n          <Avatar src={comment.avatar} className={classes.avatar} />\r\n          <Typography variant=\"subtitle2\">{comment.name}</Typography>\r\n        </Grid>\r\n        <Grid item lg={9}>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            {comment.text}\r\n          </Typography>\r\n          <Typography variant=\"subtitle2\" color=\"textPrimary\">\r\n            Posted on {format(parseISO(comment.date), \"MM/dd/yyyy\")}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item lg={1}>\r\n          {!loading && user.id === comment.user && (\r\n            <Button\r\n              variant=\"outlined\"\r\n              className={classes.deleteComm}\r\n              onClick={() => deleteComment(post.id, comment.id)}\r\n            >\r\n              <FontAwesomeIcon icon={faTrash} />\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CommentItem;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    marginTop: \"7rem\",\r\n    height: \"110vh\"\r\n  },\r\n  paper: {\r\n    backgroundColor: \"#fff\",\r\n    color: \"#7074e4\",\r\n    marginTop: \"1rem\",\r\n    paddingTop: \"1rem\",\r\n    paddingLeft: \"1rem\",\r\n    paddingBottom: \"1rem\",\r\n    paddingRight: \"1rem\"\r\n  },\r\n  backButton: {\r\n    backgroundColor: \"#fff\",\r\n    \"& a\": {\r\n      textDecoration: \"none\",\r\n      color: \"inherit\"\r\n    },\r\n    color: \"#7074e4\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#5d61ce\",\r\n      color: \"#fff\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n/**\r\n * Imports Components\r\n */\r\nimport Spinner from \"../Spinner\";\r\nimport PostItem from \"../PostItem\";\r\nimport CommentForm from \"../CommentForm\";\r\nimport CommentItem from \"../CommentItem\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./Post.styles\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useActions, useTypedSelector } from \"../../hooks\";\r\n\r\n/**\r\n * Defines the props interface\r\n */\r\nexport interface ParamTypes {\r\n  id: string;\r\n}\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst Post: React.FC = () => {\r\n  const { id } = useParams<ParamTypes>();\r\n\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * Handles getting the post and the comments\r\n   */\r\n  const { getPostById } = useActions();\r\n\r\n  /**\r\n   * Handles getting the post state\r\n   */\r\n  const { post, loading } = useTypedSelector((state) => state.post);\r\n\r\n  useEffect(() => {\r\n    getPostById(id);\r\n  }, [getPostById, id]);\r\n\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Container maxWidth=\"md\" className={classes.container}>\r\n      <Grid container>\r\n        <Grid item lg={12}>\r\n          <Button variant=\"outlined\" className={classes.backButton}>\r\n            <Link to=\"/posts\">Back to Posts</Link>\r\n          </Button>\r\n        </Grid>\r\n        <Grid item lg={12}>\r\n          <PostItem post={post} showActions={false} />\r\n          <CommentForm post={post} />\r\n          {post.comments.length > 0 && (\r\n            <Paper elevation={2} className={classes.paper}>\r\n              {post.comments.map((comm, index) => (\r\n                <CommentItem key={index} comment={comm} post={post} />\r\n              ))}\r\n            </Paper>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    marginTop: \"3rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  userIcon: {\r\n    marginRight: \"0.5rem\",\r\n    color: \"#3f51b5\"\r\n  },\r\n  toggleSocialsBtn: {\r\n    marginTop: \"1rem\",\r\n    marginBottom: \"0.5rem\",\r\n    backgroundColor: \"#fff\",\r\n    color: \"#3f51b5\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#3f51b5\",\r\n      color: \"#fff\"\r\n    }\r\n  },\r\n  buttonsBox: {\r\n    paddingTop: \"2rem\",\r\n    paddingBottom: \"2rem\",\r\n    \"& button\": {\r\n      marginRight: \"2rem\"\r\n    }\r\n  },\r\n  goBackBtn: {\r\n    \"& a\": {\r\n      textDecoration: \"none\",\r\n      color: \"inherit\"\r\n    },\r\n    color: \"#D4A16A\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#D4A16A\",\r\n      color: \"#fff\"\r\n    }\r\n  },\r\n  createProfileBtn: {\r\n    color: \"#3f51b5\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#3f51b5\",\r\n      color: \"#fff\"\r\n    }\r\n  },\r\n  twitterIcon: {\r\n    color: \"#1da1f2\"\r\n  },\r\n  facebookIcon: {\r\n    color: \"#1877f2\"\r\n  },\r\n  linkedinIcon: {\r\n    color: \"#0a66c2\"\r\n  },\r\n  youtubeIcon: {\r\n    color: \"#ff0000\"\r\n  },\r\n  instagramIcon: {\r\n    color: \"#f5c265\"\r\n  },\r\n  socialInput: {\r\n    display: \"flex\",\r\n    \"& svg\": {\r\n      marginTop: \"1.5rem\",\r\n      marginRight: \"1rem\"\r\n    }\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    \"& .MuiTextField-root\": {\r\n      margin: \"0.5rem\",\r\n      width: \"auto\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Fragment, useState, ChangeEvent, FormEvent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n/**\r\n * Imports Font Awesome Icons\r\n */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\r\nimport {\r\n  faTwitter,\r\n  faFacebook,\r\n  faLinkedin,\r\n  faYoutube,\r\n  faInstagram\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./CreateProfile.styles\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useActions } from \"../../hooks\";\r\n\r\n/**\r\n * Defines the props interface\r\n */\r\nexport interface CreateProfileProps {\r\n  history?: History;\r\n}\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst CreateProfile: React.FC<CreateProfileProps> = (props) => {\r\n  const { history } = props;\r\n\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * Handles creating the profile\r\n   */\r\n  const { createProfile } = useActions();\r\n\r\n  /**\r\n   * Defines the default state of the form\r\n   */\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    website: \"\",\r\n    location: \"\",\r\n    status: \"\",\r\n    skills: \"\",\r\n    githubusername: \"\",\r\n    bio: \"\",\r\n    twitter: \"\",\r\n    facebook: \"\",\r\n    linkedin: \"\",\r\n    youtube: \"\",\r\n    instagram: \"\"\r\n  });\r\n\r\n  /**\r\n   * Handles showing/hiding the social inputs\r\n   */\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  /**\r\n   * Gets the values from formData\r\n   */\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n  } = formData;\r\n\r\n  /**\r\n   * Defines the default statuses\r\n   */\r\n  const statuses = [\r\n    {\r\n      value: \"\",\r\n      label: \"* Select Professional Status\"\r\n    },\r\n    {\r\n      value: \"Developer\",\r\n      label: \"Developer\"\r\n    },\r\n    {\r\n      value: \"Junior Developer\",\r\n      label: \"Junior Developer\"\r\n    },\r\n    {\r\n      value: \"Senior Developer\",\r\n      label: \"Senior Developer\"\r\n    },\r\n    {\r\n      value: \"Manager\",\r\n      label: \"Manager\"\r\n    },\r\n    {\r\n      value: \"Student or Learning\",\r\n      label: \"Student or Learning\"\r\n    },\r\n    {\r\n      value: \"Instructor\",\r\n      label: \"Instructor or Teacher\"\r\n    },\r\n    {\r\n      value: \"Intern\",\r\n      label: \"Intern\"\r\n    },\r\n    {\r\n      value: \"Other\",\r\n      label: \"Other\"\r\n    }\r\n  ];\r\n\r\n  const onChange = (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" className={classes.container}>\r\n      <Grid container className={classes.container}>\r\n        <Grid item lg={12}>\r\n          <Typography variant=\"h4\" color=\"primary\" gutterBottom>\r\n            Create Your Profile\r\n          </Typography>\r\n          <Typography variant=\"h5\" color=\"textPrimary\" gutterBottom>\r\n            <FontAwesomeIcon icon={faUser} className={classes.userIcon} />\r\n            Let's get some information to make your profile stand out\r\n          </Typography>\r\n          <Typography gutterBottom>* = required field</Typography>\r\n        </Grid>\r\n        <Grid item lg={12}>\r\n          <form className={classes.form} onSubmit={(e) => onSubmit(e)}>\r\n            <TextField\r\n              id=\"select-status\"\r\n              select\r\n              label=\"* Select Professional Status\"\r\n              value={status}\r\n              fullWidth\r\n              name=\"status\"\r\n              onChange={onChange}\r\n              helperText=\"Give us an idea of where you are at in your career\"\r\n            >\r\n              {statuses.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n              id=\"company\"\r\n              label=\"Company\"\r\n              type=\"text\"\r\n              name=\"company\"\r\n              value={company}\r\n              fullWidth\r\n              helperText=\"Could be your own company or one you work for\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <TextField\r\n              id=\"website\"\r\n              label=\"Website\"\r\n              type=\"text\"\r\n              name=\"website\"\r\n              value={website}\r\n              fullWidth\r\n              helperText=\"Could be your own or a company website\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <TextField\r\n              id=\"location\"\r\n              label=\"Location\"\r\n              type=\"text\"\r\n              name=\"location\"\r\n              value={location}\r\n              fullWidth\r\n              helperText=\"City & state suggested (eg. Boston, MA)\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <TextField\r\n              id=\"skills\"\r\n              label=\"* Skills\"\r\n              type=\"text\"\r\n              name=\"skills\"\r\n              value={skills}\r\n              fullWidth\r\n              helperText=\"Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <TextField\r\n              id=\"githubusername\"\r\n              label=\"GitHub Username\"\r\n              type=\"text\"\r\n              name=\"githubusername\"\r\n              value={githubusername}\r\n              fullWidth\r\n              helperText=\"If you want your latest repos and a Github link, include your username\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <TextField\r\n              id=\"bio\"\r\n              label=\"A short bio of yourself\"\r\n              type=\"text\"\r\n              name=\"bio\"\r\n              value={bio}\r\n              fullWidth\r\n              helperText=\"Tell us a little about yourself\"\r\n              multiline\r\n              rows={4}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <Box>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"outlined\"\r\n                className={classes.toggleSocialsBtn}\r\n                onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n              >\r\n                Add Social Network Links\r\n              </Button>\r\n              <Typography>(Optional)</Typography>\r\n            </Box>\r\n\r\n            {displaySocialInputs && (\r\n              <Fragment>\r\n                <Box className={classes.socialInput}>\r\n                  <FontAwesomeIcon\r\n                    icon={faTwitter}\r\n                    size=\"2x\"\r\n                    className={classes.twitterIcon}\r\n                  />\r\n                  <TextField\r\n                    id=\"twitter\"\r\n                    label=\"Twitter URL\"\r\n                    type=\"text\"\r\n                    name=\"twitter\"\r\n                    value={twitter}\r\n                    fullWidth\r\n                    onChange={(e) => onChange(e)}\r\n                  />\r\n                </Box>\r\n                <Box className={classes.socialInput}>\r\n                  <FontAwesomeIcon\r\n                    icon={faFacebook}\r\n                    size=\"2x\"\r\n                    className={classes.facebookIcon}\r\n                  />\r\n                  <TextField\r\n                    id=\"facebook\"\r\n                    label=\"Facebook URL\"\r\n                    type=\"text\"\r\n                    name=\"facebook\"\r\n                    value={facebook}\r\n                    fullWidth\r\n                    onChange={(e) => onChange(e)}\r\n                  />\r\n                </Box>\r\n                <Box className={classes.socialInput}>\r\n                  <FontAwesomeIcon\r\n                    icon={faLinkedin}\r\n                    size=\"2x\"\r\n                    className={classes.linkedinIcon}\r\n                  />\r\n                  <TextField\r\n                    id=\"linkedin\"\r\n                    label=\"Linked URL\"\r\n                    type=\"text\"\r\n                    name=\"linkedin\"\r\n                    value={linkedin}\r\n                    fullWidth\r\n                    onChange={(e) => onChange(e)}\r\n                  />\r\n                </Box>\r\n                <Box className={classes.socialInput}>\r\n                  <FontAwesomeIcon\r\n                    icon={faYoutube}\r\n                    size=\"2x\"\r\n                    className={classes.youtubeIcon}\r\n                  />\r\n                  <TextField\r\n                    id=\"youtube\"\r\n                    label=\"Youtube URL\"\r\n                    type=\"text\"\r\n                    name=\"youtube\"\r\n                    value={youtube}\r\n                    fullWidth\r\n                    onChange={(e) => onChange(e)}\r\n                  />\r\n                </Box>\r\n                <Box className={classes.socialInput}>\r\n                  <FontAwesomeIcon\r\n                    icon={faInstagram}\r\n                    size=\"2x\"\r\n                    className={classes.instagramIcon}\r\n                  />\r\n                  <TextField\r\n                    id=\"instagram\"\r\n                    label=\"Instagram URL\"\r\n                    type=\"text\"\r\n                    name=\"instagram\"\r\n                    value={instagram}\r\n                    fullWidth\r\n                    onChange={(e) => onChange(e)}\r\n                  />\r\n                </Box>\r\n              </Fragment>\r\n            )}\r\n            <Box className={classes.buttonsBox}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                value=\"Create Profile\"\r\n                className={classes.createProfileBtn}\r\n              >\r\n                Create Profile\r\n              </Button>\r\n              <Button variant=\"outlined\" className={classes.goBackBtn}>\r\n                <Link to=\"/dashboard\">Go Back</Link>\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CreateProfile;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    marginTop: \"3rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  userIcon: {\r\n    marginRight: \"0.5rem\",\r\n    color: \"#3f51b5\"\r\n  },\r\n  toggleSocialsBtn: {\r\n    marginTop: \"1rem\",\r\n    marginBottom: \"0.5rem\",\r\n    backgroundColor: \"#fff\",\r\n    color: \"#3f51b5\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#3f51b5\",\r\n      color: \"#fff\"\r\n    }\r\n  },\r\n  buttonsBox: {\r\n    paddingTop: \"2rem\",\r\n    paddingBottom: \"2rem\",\r\n    \"& button\": {\r\n      marginRight: \"2rem\"\r\n    }\r\n  },\r\n  goBackBtn: {\r\n    \"& a\": {\r\n      textDecoration: \"none\",\r\n      color: \"inherit\"\r\n    },\r\n    color: \"#D4A16A\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#D4A16A\",\r\n      color: \"#fff\"\r\n    }\r\n  },\r\n  createProfileBtn: {\r\n    color: \"#3f51b5\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#3f51b5\",\r\n      color: \"#fff\"\r\n    }\r\n  },\r\n  twitterIcon: {\r\n    color: \"#1da1f2\"\r\n  },\r\n  facebookIcon: {\r\n    color: \"#1877f2\"\r\n  },\r\n  linkedinIcon: {\r\n    color: \"#0a66c2\"\r\n  },\r\n  youtubeIcon: {\r\n    color: \"#ff0000\"\r\n  },\r\n  instagramIcon: {\r\n    color: \"#f5c265\"\r\n  },\r\n  socialInput: {\r\n    display: \"flex\",\r\n    \"& svg\": {\r\n      marginTop: \"1.5rem\",\r\n      marginRight: \"1rem\"\r\n    }\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    \"& .MuiTextField-root\": {\r\n      margin: \"0.5rem\",\r\n      width: \"auto\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Fragment, useState, useEffect, ChangeEvent, FormEvent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n/**\r\n * Imports Font Awesome Icons\r\n */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\r\nimport {\r\n  faTwitter,\r\n  faFacebook,\r\n  faLinkedin,\r\n  faYoutube,\r\n  faInstagram\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./EditProfile.styles\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useActions, useTypedSelector } from \"../../hooks\";\r\n\r\n/**\r\n * Defines the props interface\r\n */\r\nexport interface EditProfileProps {\r\n  history?: History;\r\n}\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst EditProfile: React.FC<EditProfileProps> = (props) => {\r\n  const { history } = props;\r\n\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * Handles creating and getting the profile\r\n   */\r\n  const { createProfile, getCurrentProfile } = useActions();\r\n\r\n  /**\r\n   * Handles getting the profile state\r\n   */\r\n  const { profile, loading } = useTypedSelector((state) => state.profile);\r\n\r\n  /**\r\n   * Defines the default state of the form\r\n   */\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    website: \"\",\r\n    location: \"\",\r\n    status: \"\",\r\n    skills: \"\",\r\n    githubusername: \"\",\r\n    bio: \"\",\r\n    twitter: \"\",\r\n    facebook: \"\",\r\n    linkedin: \"\",\r\n    youtube: \"\",\r\n    instagram: \"\"\r\n  });\r\n\r\n  /**\r\n   * Gets the values from formData\r\n   */\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n  } = formData;\r\n\r\n  /**\r\n   * Defines the default statuses\r\n   */\r\n  const statuses = [\r\n    {\r\n      value: \"Developer\",\r\n      label: \"Developer\"\r\n    },\r\n    {\r\n      value: \"Junior Developer\",\r\n      label: \"Junior Developer\"\r\n    },\r\n    {\r\n      value: \"Senior Developer\",\r\n      label: \"Senior Developer\"\r\n    },\r\n    {\r\n      value: \"Manager\",\r\n      label: \"Manager\"\r\n    },\r\n    {\r\n      value: \"Student or Learning\",\r\n      label: \"Student or Learning\"\r\n    },\r\n    {\r\n      value: \"Instructor\",\r\n      label: \"Instructor or Teacher\"\r\n    },\r\n    {\r\n      value: \"Intern\",\r\n      label: \"Intern\"\r\n    },\r\n    {\r\n      value: \"Other\",\r\n      label: \"Other\"\r\n    }\r\n  ];\r\n\r\n  /**\r\n   * Handles showing/hiding the social inputs\r\n   */\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile?.company ? \"\" : profile.company,\r\n      website: loading || !profile?.website ? \"\" : profile.website,\r\n      location: loading || !profile?.location ? \"\" : profile.location,\r\n      status: loading || !profile?.status ? \"\" : profile.status,\r\n      skills: loading || !profile?.skills ? \"\" : profile.skills.join(\",\"),\r\n      githubusername:\r\n        loading || !profile?.githubusername ? \"\" : profile.githubusername,\r\n      bio: loading || !profile?.bio ? \"\" : profile.bio,\r\n      twitter: loading || !profile?.social ? \"\" : profile.social.twitter,\r\n      facebook: loading || !profile?.social ? \"\" : profile.social.facebook,\r\n      linkedin: loading || !profile?.social ? \"\" : profile.social.linkedin,\r\n      youtube: loading || !profile?.social ? \"\" : profile.social.youtube,\r\n      instagram: loading || !profile?.social ? \"\" : profile.social.instagram\r\n    });\r\n    // eslint-disable-next-line\r\n  }, [loading, getCurrentProfile]);\r\n\r\n  const onChange = (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" className={classes.container}>\r\n      <Grid container className={classes.container}>\r\n        <Grid item lg={12}>\r\n          <Typography variant=\"h4\" color=\"primary\" gutterBottom>\r\n            Create Your Profile\r\n          </Typography>\r\n          <Typography variant=\"h5\" color=\"textPrimary\" gutterBottom>\r\n            <FontAwesomeIcon icon={faUser} className={classes.userIcon} />\r\n            Let's get some information to make your profile stand out\r\n          </Typography>\r\n          <Typography gutterBottom>* = required field</Typography>\r\n        </Grid>\r\n        <Grid item lg={12}>\r\n          <form className={classes.form} onSubmit={(e) => onSubmit(e)}>\r\n            <TextField\r\n              id=\"select-status\"\r\n              select\r\n              label=\"* Select Professional Status\"\r\n              value={status}\r\n              fullWidth\r\n              onChange={onChange}\r\n              helperText=\"Give us an idea of where you are at in your career\"\r\n            >\r\n              {statuses.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n              id=\"company\"\r\n              label=\"Company\"\r\n              type=\"text\"\r\n              name=\"company\"\r\n              value={company}\r\n              fullWidth\r\n              helperText=\"Could be your own company or one you work for\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <TextField\r\n              id=\"website\"\r\n              label=\"Website\"\r\n              type=\"text\"\r\n              name=\"website\"\r\n              value={website}\r\n              fullWidth\r\n              helperText=\"Could be your own or a company website\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <TextField\r\n              id=\"location\"\r\n              label=\"Location\"\r\n              type=\"text\"\r\n              name=\"location\"\r\n              value={location}\r\n              fullWidth\r\n              helperText=\"City & state suggested (eg. Boston, MA)\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <TextField\r\n              id=\"skills\"\r\n              label=\"* Skills\"\r\n              type=\"text\"\r\n              name=\"skills\"\r\n              value={skills}\r\n              fullWidth\r\n              helperText=\"Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <TextField\r\n              id=\"githubusername\"\r\n              label=\"GitHub Username\"\r\n              type=\"text\"\r\n              name=\"githubusername\"\r\n              value={githubusername}\r\n              fullWidth\r\n              helperText=\"If you want your latest repos and a Github link, include your username\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <TextField\r\n              id=\"bio\"\r\n              label=\"A short bio of yourself\"\r\n              type=\"text\"\r\n              name=\"bio\"\r\n              value={bio}\r\n              fullWidth\r\n              helperText=\"Tell us a little about yourself\"\r\n              multiline\r\n              rows={5}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <Box>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"outlined\"\r\n                className={classes.toggleSocialsBtn}\r\n                onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n              >\r\n                Add Social Network Links\r\n              </Button>\r\n              <Typography>(Optional)</Typography>\r\n            </Box>\r\n\r\n            {displaySocialInputs && (\r\n              <Fragment>\r\n                <Box className={classes.socialInput}>\r\n                  <FontAwesomeIcon\r\n                    icon={faTwitter}\r\n                    size=\"2x\"\r\n                    className={classes.twitterIcon}\r\n                  />\r\n                  <TextField\r\n                    id=\"twitter\"\r\n                    label=\"Twitter URL\"\r\n                    type=\"text\"\r\n                    name=\"twitter\"\r\n                    value={twitter}\r\n                    fullWidth\r\n                    onChange={(e) => onChange(e)}\r\n                  />\r\n                </Box>\r\n                <Box className={classes.socialInput}>\r\n                  <FontAwesomeIcon\r\n                    icon={faFacebook}\r\n                    size=\"2x\"\r\n                    className={classes.facebookIcon}\r\n                  />\r\n                  <TextField\r\n                    id=\"facebook\"\r\n                    label=\"Facebook URL\"\r\n                    type=\"text\"\r\n                    name=\"facebook\"\r\n                    value={facebook}\r\n                    fullWidth\r\n                    onChange={(e) => onChange(e)}\r\n                  />\r\n                </Box>\r\n                <Box className={classes.socialInput}>\r\n                  <FontAwesomeIcon\r\n                    icon={faLinkedin}\r\n                    size=\"2x\"\r\n                    className={classes.linkedinIcon}\r\n                  />\r\n                  <TextField\r\n                    id=\"linkedin\"\r\n                    label=\"Linked URL\"\r\n                    type=\"text\"\r\n                    name=\"linkedin\"\r\n                    value={linkedin}\r\n                    fullWidth\r\n                    onChange={(e) => onChange(e)}\r\n                  />\r\n                </Box>\r\n                <Box className={classes.socialInput}>\r\n                  <FontAwesomeIcon\r\n                    icon={faYoutube}\r\n                    size=\"2x\"\r\n                    className={classes.youtubeIcon}\r\n                  />\r\n                  <TextField\r\n                    id=\"youtube\"\r\n                    label=\"Youtube URL\"\r\n                    type=\"text\"\r\n                    name=\"youtube\"\r\n                    value={youtube}\r\n                    fullWidth\r\n                    onChange={(e) => onChange(e)}\r\n                  />\r\n                </Box>\r\n                <Box className={classes.socialInput}>\r\n                  <FontAwesomeIcon\r\n                    icon={faInstagram}\r\n                    size=\"2x\"\r\n                    className={classes.instagramIcon}\r\n                  />\r\n                  <TextField\r\n                    id=\"instagram\"\r\n                    label=\"Instagram URL\"\r\n                    type=\"text\"\r\n                    name=\"instagram\"\r\n                    value={instagram}\r\n                    fullWidth\r\n                    onChange={(e) => onChange(e)}\r\n                  />\r\n                </Box>\r\n              </Fragment>\r\n            )}\r\n            <Box className={classes.buttonsBox}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                value=\"Create Profile\"\r\n                className={classes.createProfileBtn}\r\n              >\r\n                Create Profile\r\n              </Button>\r\n              <Button variant=\"outlined\" className={classes.goBackBtn}>\r\n                <Link to=\"/dashboard\">Go Back</Link>\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    marginTop: \"3rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  expIcon: {\r\n    marginRight: \"0.5rem\",\r\n    color: \"#3f51b5\"\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    \"& .MuiTextField-root\": {\r\n      margin: \"0.5rem\",\r\n      width: \"auto\"\r\n    }\r\n  },\r\n  buttonsBox: {\r\n    paddingTop: \"2rem\",\r\n    paddingBottom: \"2rem\",\r\n    \"& button\": {\r\n      marginRight: \"2rem\"\r\n    }\r\n  },\r\n  goBackBtn: {\r\n    \"& a\": {\r\n      textDecoration: \"none\",\r\n      color: \"inherit\"\r\n    },\r\n    color: \"#D4A16A\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#D4A16A\",\r\n      color: \"#fff\"\r\n    }\r\n  },\r\n  addExpBtn: {\r\n    color: \"#3f51b5\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#3f51b5\",\r\n      color: \"#fff\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { useState, ChangeEvent, FormEvent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\n/**\r\n * Imports Font Awesome Icons\r\n */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCodeBranch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./AddExperience.styles\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useActions } from \"../../hooks\";\r\n\r\n/**\r\n * Defines the props interface\r\n */\r\nexport interface AddExperienceProps {\r\n  history?: History;\r\n}\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst AddExperience: React.FC<AddExperienceProps> = (props) => {\r\n  const { history } = props;\r\n\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * Handles Adding Experience\r\n   */\r\n  const { addExperience } = useActions();\r\n\r\n  /**\r\n   * Defines the default state of the form\r\n   */\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    title: \"\",\r\n    location: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n    current: false,\r\n    description: \"\"\r\n  });\r\n\r\n  /**\r\n   * Gets the values from formData\r\n   */\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  /**\r\n   * Handles enabling/disabling the 'To' field when current is selected\r\n   */\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const onChange = (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    addExperience(formData, history);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" className={classes.container}>\r\n      <Grid container className={classes.container}>\r\n        <Grid item lg={12}>\r\n          <Typography variant=\"h4\" color=\"primary\" gutterBottom>\r\n            Add An Experience\r\n          </Typography>\r\n          <Typography variant=\"h5\" color=\"textPrimary\" gutterBottom>\r\n            <FontAwesomeIcon icon={faCodeBranch} className={classes.expIcon} />\r\n            Add any developer/programming positions that you have had in the\r\n            past\r\n          </Typography>\r\n          <Typography>* = required field</Typography>\r\n        </Grid>\r\n        <Grid item lg={12}>\r\n          <form className={classes.form} onSubmit={(e) => onSubmit(e)}>\r\n            <TextField\r\n              id=\"title\"\r\n              label=\"* Job Title\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={title}\r\n              fullWidth\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <TextField\r\n              id=\"company\"\r\n              label=\"* Company\"\r\n              type=\"text\"\r\n              name=\"company\"\r\n              value={company}\r\n              fullWidth\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <TextField\r\n              id=\"location\"\r\n              label=\"Location\"\r\n              type=\"text\"\r\n              name=\"location\"\r\n              value={location}\r\n              fullWidth\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <TextField\r\n              id=\"from\"\r\n              label=\"* From Date\"\r\n              type=\"date\"\r\n              name=\"from\"\r\n              value={from}\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              fullWidth\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={current}\r\n                  value={current}\r\n                  onChange={(e) => {\r\n                    setFormData({ ...formData, current: !current });\r\n                    toggleDisabled(!toDateDisabled);\r\n                  }}\r\n                  name=\"current\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Current Job\"\r\n            />\r\n            <TextField\r\n              id=\"to\"\r\n              label=\"* To Date\"\r\n              type=\"date\"\r\n              name=\"to\"\r\n              value={to}\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              fullWidth\r\n              onChange={(e) => onChange(e)}\r\n              disabled={toDateDisabled}\r\n            />\r\n            <TextField\r\n              id=\"description\"\r\n              label=\"Job Description\"\r\n              type=\"text\"\r\n              name=\"description\"\r\n              value={description}\r\n              fullWidth\r\n              multiline\r\n              rows={4}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <Box className={classes.buttonsBox}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                value=\"Add Experience\"\r\n                className={classes.addExpBtn}\r\n              >\r\n                Add Experience\r\n              </Button>\r\n              <Button variant=\"outlined\" className={classes.goBackBtn}>\r\n                <Link to=\"/dashboard\">Go Back</Link>\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddExperience;\r\n","/**\r\n *  Material UI Imports\r\n * @see https://material-ui.com/styles/basics/\r\n */\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n/**\r\n * Styles the component\r\n */\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    marginTop: \"3rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  eduIcon: {\r\n    marginRight: \"0.5rem\",\r\n    color: \"#3f51b5\"\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    \"& .MuiTextField-root\": {\r\n      margin: \"0.5rem\",\r\n      width: \"auto\"\r\n    }\r\n  },\r\n  buttonsBox: {\r\n    paddingTop: \"2rem\",\r\n    paddingBottom: \"2rem\",\r\n    \"& button\": {\r\n      marginRight: \"2rem\"\r\n    }\r\n  },\r\n  goBackBtn: {\r\n    \"& a\": {\r\n      textDecoration: \"none\",\r\n      color: \"inherit\"\r\n    },\r\n    color: \"#D4A16A\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#D4A16A\",\r\n      color: \"#fff\"\r\n    }\r\n  },\r\n  addEduBtn: {\r\n    color: \"#3f51b5\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#3f51b5\",\r\n      color: \"#fff\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { useState, ChangeEvent, FormEvent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Imports Material UI Components\r\n */\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\n/**\r\n * Imports Font Awesome Icons\r\n */\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCodeBranch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n/**\r\n * Imports the component styles\r\n */\r\nimport { useStyles } from \"./AddEducation.styles\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useActions } from \"../../hooks\";\r\n\r\n/**\r\n * Defines the props interface\r\n */\r\nexport interface AddEducationProps {\r\n  history?: History;\r\n}\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst AddEducation: React.FC<AddEducationProps> = (props) => {\r\n  const { history } = props;\r\n\r\n  /**\r\n   * Gets the component styles\r\n   */\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * Handles Adding Education\r\n   */\r\n  const { addEducation } = useActions();\r\n\r\n  /**\r\n   * Defines the default state of the form\r\n   */\r\n  const [formData, setFormData] = useState({\r\n    school: \"\",\r\n    degree: \"\",\r\n    fieldofstudy: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n    current: false,\r\n    description: \"\"\r\n  });\r\n\r\n  /**\r\n   * Gets the values from formData\r\n   */\r\n  const { school, degree, fieldofstudy, from, to, current, description } =\r\n    formData;\r\n\r\n  /**\r\n   * Handles enabling/disabling the 'To' field when current is selected\r\n   */\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const onChange = (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    addEducation(formData, history);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" className={classes.container}>\r\n      <Grid container spacing={1} className={classes.container}>\r\n        <Grid item lg={12}>\r\n          <Typography variant=\"h4\" color=\"primary\" gutterBottom>\r\n            Add Your Education\r\n          </Typography>\r\n          <Typography variant=\"h5\" color=\"textPrimary\" gutterBottom>\r\n            <FontAwesomeIcon icon={faCodeBranch} className={classes.eduIcon} />\r\n            Add any school or bootcamp that you have attended\r\n          </Typography>\r\n          <Typography>* = required field</Typography>\r\n        </Grid>\r\n        <Grid item lg={12}>\r\n          <form className={classes.form} onSubmit={(e) => onSubmit(e)}>\r\n            <TextField\r\n              id=\"school\"\r\n              label=\"* School or Bootcamp\"\r\n              type=\"text\"\r\n              name=\"school\"\r\n              value={school}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <TextField\r\n              id=\"degree\"\r\n              label=\"* Degree or Certificate\"\r\n              type=\"text\"\r\n              name=\"degree\"\r\n              value={degree}\r\n              fullWidth\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <TextField\r\n              id=\"fieldofstudy\"\r\n              label=\"* Field of Study\"\r\n              type=\"text\"\r\n              name=\"fieldofstudy\"\r\n              value={fieldofstudy}\r\n              fullWidth\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <TextField\r\n              id=\"from\"\r\n              label=\"* From Date\"\r\n              type=\"date\"\r\n              name=\"from\"\r\n              value={from}\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              fullWidth\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={current}\r\n                  value={current}\r\n                  onChange={(e) => {\r\n                    setFormData({ ...formData, current: !current });\r\n                    toggleDisabled(!toDateDisabled);\r\n                  }}\r\n                  name=\"current\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Currently\"\r\n            />\r\n            <TextField\r\n              id=\"to\"\r\n              label=\"* To Date\"\r\n              type=\"date\"\r\n              name=\"to\"\r\n              value={to}\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              fullWidth\r\n              onChange={(e) => onChange(e)}\r\n              disabled={toDateDisabled}\r\n            />\r\n            <TextField\r\n              id=\"description\"\r\n              label=\"Program Description\"\r\n              type=\"text\"\r\n              name=\"description\"\r\n              value={description}\r\n              fullWidth\r\n              multiline\r\n              rows={4}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <Box className={classes.buttonsBox}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                value=\"Add Education\"\r\n                className={classes.addEduBtn}\r\n              >\r\n                Add Education\r\n              </Button>\r\n              <Button variant=\"outlined\" className={classes.goBackBtn}>\r\n                <Link to=\"/dashboard\">Go Back</Link>\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddEducation;\r\n","import { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n/**\r\n * Imports Components\r\n */\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport Navbar from \"../Navbar\";\r\nimport Alert from \"../Alert\";\r\nimport Register from \"../Register\";\r\nimport Login from \"../Login\";\r\nimport Profiles from \"../Profiles\";\r\nimport Profile from \"../Profile\";\r\nimport Dashboard from \"../Dashboard\";\r\nimport Landing from \"../Landing\";\r\nimport Posts from \"../Posts\";\r\nimport Post from \"../Post\";\r\nimport CreateProfile from \"../CreateProfile\";\r\nimport EditProfile from \"../EditProfile\";\r\nimport AddExperience from \"../AddExperience\";\r\nimport AddEducation from \"../AddEducation\";\r\n\r\n/**\r\n * Imports Utils\r\n */\r\nimport { setAuthToken } from \"../../utils\";\r\n\r\n/**\r\n * Imports Hooks\r\n */\r\nimport { useActions } from \"../../hooks\";\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token);\r\n}\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst Routes: React.FC = () => {\r\n  const { loadUser } = useActions();\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Alert />\r\n      <Route path=\"/\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Landing} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/profiles\" component={Profiles} />\r\n          <Route exact path=\"/profile/:id\" component={Profile} />\r\n          <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n          <PrivateRoute exact path=\"/posts\" component={Posts} />\r\n          <PrivateRoute exact path=\"/posts/:id\" component={Post} />\r\n          <PrivateRoute exact path=\"/edit-profile\" component={EditProfile} />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/create-profile\"\r\n            component={CreateProfile}\r\n          />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/add-experience\"\r\n            component={AddExperience}\r\n          />\r\n          <PrivateRoute exact path=\"/add-education\" component={AddEducation} />\r\n        </Switch>\r\n      </Route>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import { Provider as ReduxProvider } from \"react-redux\";\r\n\r\n/**\r\n * Import redux store\r\n */\r\nimport { store } from \"../../redux\";\r\n\r\nconst Providers: React.FC = (props) => {\r\n  const { children } = props;\r\n\r\n  return <ReduxProvider store={store}>{children}</ReduxProvider>;\r\n};\r\n\r\nexport default Providers;\r\n","import { Fragment } from \"react\";\r\n\r\n/**\r\n * Normalizes all css for maximum browser compatibility\r\n */\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\n/**\r\n * Imports Components\r\n */\r\nimport Routes from \"./components/Routes\";\r\nimport Providers from \"./components/Providers\";\r\n\r\n/**\r\n * Imports CSS\r\n */\r\nimport \"./App.css\";\r\n\r\n/**\r\n * Displays the component\r\n */\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Fragment>\r\n      <CssBaseline />\r\n      <Providers>\r\n        <Routes />\r\n      </Providers>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}